[
    {
        "question_number": 1,
        "question_content": "Độ mịn dịch vụ (Service granularity) là gì?",
        "options": {
            "A": "Độ đa dạng của các hoạt động trong một dịch vụ web",
            "B": "Độ tương tác giữa các dịch vụ web",
            "C": "Khả năng mở rộng của dịch vụ web",
            "D": "Mức độ kết nối giữa các dịch vụ web"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:18"
    },
    {
        "question_number": 2,
        "question_content": "Khi nào nên sử dụng dịch vụ fine-grained ?",
        "options": {
            "A": "Khi cần cung cấp các chức năng có phạm vi hạn chế",
            "B": "Khi cần cung cấp các chức năng tổng quát và phổ biến",
            "C": "Khi cần cung cấp các chức năng rộng lớn và mạnh mẽ",
            "D": "Khi cần cung cấp các chức năng cụ thể và linh hoạt"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:19"
    },
    {
        "question_number": 3,
        "question_content": "Đặc điểm nào sau đây không phải là một lợi ích của loose coupling trong dịch vụ web?",
        "options": {
            "A": "Tăng tính mở rộng và tái sử dụng của dịch vụ web",
            "B": "Giảm độ phức tạp và ràng buộc giữa các thành phần",
            "C": "Dễ dàng thay đổi và cập nhật các thành phần mà không ảnh hưởng đến toàn bộ hệ thống",
            "D": "Tăng hiệu suất và tốc độ truyền thông trong dịch vụ web"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:20"
    },
    {
        "question_number": 4,
        "question_content": "Dịch vụ thực thể là gì?",
        "options": {
            "A": "Dịch vụ không thể tái sử dụng với bối cảnh chức năng khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "B": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "C": "Dịch vụ không thể tái sử dụng với bối cảnh chức năng bất khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "D": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng bất khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:21"
    },
    {
        "question_number": 5,
        "question_content": "Định nghĩa microservice trong kiến trúc hướng dịch vụ (SOA)?",
        "options": {
            "A": "Một dịch vụ bất khả tri thường có phạm vi chức năng nhỏ bao gồm logic với các yêu cầu xử lý và triển khai cụ thể",
            "B": "Một dịch vụ không bất khả tri thường có phạm vi chức năng nhỏ bao gồm logic với các yêu cầu xử lý và triển khai cụ thể",
            "C": "Một dịch vụ lớn được chia nhỏ thành các thành phần nhỏ hơn",
            "D": "Một dịch vụ được thiết kế để chạy trên nhiều máy chủ khác nhau"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:22"
    },
    {
        "question_number": 6,
        "question_content": "Một trong những đặc điểm cơ bản phân biệt SOA/kiến trúc công nghệ hướng dịch vụ với các dạng kiến trúc phân tán khác là gì?",
        "options": {
            "A": "Tính tương thích (Compatibility)",
            "B": "Tính linh hoạt (Flexibility)",
            "C": "Tính tập trung vào thành phần (Component-centric)",
            "D": "Tính phân tán (Decentralization)"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:23"
    },
    {
        "question_number": 7,
        "question_content": "Vai trò của Entity Service trong kiến trúc dịch vụ là gì?",
        "options": {
            "A": "Điều phối và thực hiện các nhiệm vụ cụ thể trong quy trình kinh doanh",
            "B": "Cung cấp các chức năng liên quan đến CRUD (Create, Read, Update, Delete) cho các thực thể",
            "C": "Cung cấp các dịch vụ tiện ích chung mà nhiều dịch vụ khác có thể cần",
            "D": "Đơn vị triển khai độc lập, thực hiện một chức năng duy nhất và cụ thể trong hệ thống"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:24"
    },
    {
        "question_number": 8,
        "question_content": "Phương thức HTTP nào thường được sử dụng để truy xuất tài nguyên từ dịch vụ RESTful?",
        "options": {
            "A": "GET",
            "B": "PUT",
            "C": "POST",
            "D": "DELETE"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:26"
    },
    {
        "question_number": 9,
        "question_content": "Để mô hình hóa quan hệ giữa các tài nguyên trong dịch vụ REST, ta sử dụng phương pháp nào?",
        "options": {
            "A": "Liên kết",
            "B": "Truy xuất",
            "C": "Truy vấn",
            "D": "Thừa kế"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:27"
    },
    {
        "question_number": 10,
        "question_content": "Nguyên tắc \"Service Reusability\" áp dụng như thế nào trong thiết kế dịch vụ?",
        "options": {
            "A": "Thiết kế dịch vụ không phụ thuộc vào nghiệp vụ cụ thể",
            "B": "Thiết kế dịch vụ phải phụ thuộc vào nghiệp vụ cụ thể",
            "C": "Thiết kế dịch vụ phải thay đổi theo từng lần sử dụng",
            "D": "Thiết kế dịch vụ phải tối ưu hóa cho từng tình huống cụ thể"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:28"
    },
    {
        "question_number": 11,
        "question_content": "Phương pháp nào được khuyến nghị để xây dựng microservices từ góc độ công nghệ?",
        "options": {
            "A": "Dịch vụ Web dựa trên SOAP",
            "B": "Microservices dựa trên REST",
            "C": "Môi trường WS-*",
            "D": "Công nghệ gRPC"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:29"
    },
    {
        "question_number": 12,
        "question_content": "Điều gì có thể dẫn đến nhu cầu cần phải quản lý trạng thái trong các Task Service?",
        "options": {
            "A": "Số lượng lớn người dùng",
            "B": "Sự thay đổi của các yêu cầu bảo mật",
            "C": "Thiếu tài nguyên hệ thống",
            "D": "Sự kết hợp của các dịch vụ có phụ thuộc xử lý"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:29"
    },
    {
        "question_number": 13,
        "question_content": "Which service pattern supports observability in distributed systems?",
        "options": {
            "A": "Orchestration",
            "B": "Tracing",
            "C": "Logging only",
            "D": "Database sharding"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:30"
    },
    {
        "question_number": 14,
        "question_content": "Which HTTP status code often indicates a downstream service is unavailable?",
        "options": {
            "A": "200",
            "B": "404",
            "C": "503",
            "D": "301"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:31"
    },
    {
        "question_number": 15,
        "question_content": "What is the heart of an enterprise application according to Chapter 5?",
        "options": {
            "A": "The user interface",
            "B": "The deployment strategy",
            "C": "The business logic",
            "D": "The database schema"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:32"
    },
    {
        "question_number": 16,
        "question_content": "Which event pattern supports eventual consistency in microservices?",
        "options": {
            "A": "Observer",
            "B": "Saga",
            "C": "Domain Event",
            "D": "Chain of Responsibility"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:33"
    },
    {
        "question_number": 17,
        "question_content": "When should a team split a monolith into microservices?",
        "options": {
            "A": "When the monolith is fast",
            "B": "When modular boundaries are clear and aligned to business domains",
            "C": "When using a single tech stack",
            "D": "At the start of a project"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:35"
    },
    {
        "question_number": 18,
        "question_content": "How can a service publish domain events to other services?",
        "options": {
            "A": "By using a shared memory object",
            "B": "Through REST polling",
            "C": "Via event-driven messaging",
            "D": "Through FTP updates"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:36"
    },
    {
        "question_number": 19,
        "question_content": "Which of the following best supports multi-environment configuration in deployment?",
        "options": {
            "A": "Dockerfile",
            "B": "Kustomize or Helm",
            "C": "Git branches",
            "D": "Unit tests"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:37"
    },
    {
        "question_number": 20,
        "question_content": "How does a canary release strategy reduce risk during deployment?",
        "options": {
            "A": "It deploys to all servers at once",
            "B": "It updates only the configuration",
            "C": "It releases to a small group first",
            "D": "It skips integration testing"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:38"
    },
    {
        "question_number": 21,
        "question_content": "What is the primary principle behind event sourcing?",
        "options": {
            "A": "Storing only the current state of data",
            "B": "Storing every change to application state as a sequence of events",
            "C": "Storing both state and behavior in the database",
            "D": "Using events for communication only"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:39"
    },
    {
        "question_number": 22,
        "question_content": "What challenge is commonly associated with event sourcing?",
        "options": {
            "A": "Fast writes to the database",
            "B": "Scaling read operations",
            "C": "Keeping events small in size",
            "D": "Rebuilding state after many events"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:40"
    },
    {
        "question_number": 23,
        "question_content": "Why is designing the external API more challenging in microservices than in monoliths?",
        "options": {
            "A": "Microservices do not allow REST",
            "B": "Each service has its own interface and clients vary",
            "C": "Clients always prefer SOAP",
            "D": "Clients do not use APIs"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:42"
    },
    {
        "question_number": 24,
        "question_content": "A desktop web client wants extensive details from multiple services. What's a good API design approach?",
        "options": {
            "A": "Let it call each service directly",
            "B": "Return large default payloads",
            "C": "Use an API gateway to aggregate and tailor response",
            "D": "Enforce usage of SOAP"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:43"
    },
    {
        "question_number": 25,
        "question_content": "What is a benefit of using a circuit breaker in service communication?",
        "options": {
            "A": "Enables stateful routing",
            "B": "Improves serialization speed",
            "C": "Prevents cascading failures",
            "D": "Provides data encryption"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:44"
    },
    {
        "question_number": 26,
        "question_content": "What technique helps handle messages that cannot be processed immediately?",
        "options": {
            "A": "Web scraping",
            "B": "Dead letter queue",
            "C": "Session caching",
            "D": "Rate limiting"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:45"
    },
    {
        "question_number": 27,
        "question_content": "Why might a system prefer using separate read databases in microservices?",
        "options": {
            "A": "To ensure all services can write simultaneously",
            "B": "To reduce latency and optimize for read performance",
            "C": "To reduce the number of microservices",
            "D": "To enforce tighter consistency"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:46"
    },
    {
        "question_number": 28,
        "question_content": "In a CQRS system, how should you resolve inconsistencies in the query model caused by event processing delays?",
        "options": {
            "A": "By retrying failed events and implementing compensating mechanisms",
            "B": "By switching to synchronous write-read",
            "C": "By ignoring the delays",
            "D": "By updating the read model manually"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:48"
    },
    {
        "question_number": 29,
        "question_content": "What does ACID stand for in transaction management?",
        "options": {
            "A": "Atomicity, Consistency, Isolation, Durability",
            "B": "Automation, Compatibility, Integrity, Deployment",
            "C": "Access, Coordination, Integrity, Distribution",
            "D": "Atomicity, Centralization, Implementation, Durability"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:50"
    },
    {
        "question_number": 30,
        "question_content": "In an e-commerce checkout using saga, if the payment step fails, what should happen?",
        "options": {
            "A": "Notify admin only",
            "B": "Compensate previous steps like canceling order and restocking",
            "C": "Retry indefinitely",
            "D": "Send error log"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:51"
    },
    {
        "question_number": 31,
        "question_content": "Lợi ích chính của việc sử dụng dịch vụ web dựa trên REST là gì?",
        "options": {
            "A": "Dễ phát triển hơn SOAP",
            "B": "Hiệu quả hơn SOAP",
            "C": "An toàn hơn SOAP",
            "D": "Đơn giản hơn SOAP"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:52"
    },
    {
        "question_number": 32,
        "question_content": "Chú thích nào thường được sử dụng để chỉ định đường dẫn cho dịch vụ web?",
        "options": {
            "A": "Chú thích @Path",
            "B": "Chú thích @RestController",
            "C": "Chú thích @RequestMapping",
            "D": "Chú thích @Service"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:54"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rĐường dẫn của phương thức getOrders() là gì?",
        "options": {
            "A": "/orders",
            "B": "/order",
            "C": "/orders/{id}",
            "D": "/orders/create"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:55"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho getProducts () ?",
        "options": {
            "A": "Phương thức POST, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:57"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rĐường dẫn của phương thức deleteOrder() là gì?",
        "options": {
            "A": "/orders",
            "B": "/order",
            "C": "/orders/{id}",
            "D": "/orders/delete"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:21:59"
    },
    {
        "question_number": 36,
        "question_content": "Phần tử nào trong WSDL xác định các phương thức và thông tin về chúng?",
        "options": {
            "A": "binding",
            "B": "service",
            "C": "portType",
            "D": "port"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:22:00"
    },
    {
        "question_number": 37,
        "question_content": "Phần tử nào trong WSDL mô tả định dạng dữ liệu của một phương thức?",
        "options": {
            "A": "input",
            "B": "output",
            "C": "types",
            "D": "operation"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:22:01"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThông điệp nào có thể được gửi đến dịch vụ web OnlineCharging?",
        "options": {
            "A": "ChargeRequest",
            "B": "ChargeResponse",
            "C": "Charge",
            "D": "ChargeResult"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:22:03"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông điệp đầu ra tên là gì ?",
        "options": {
            "A": "Account",
            "B": "RegisterAccount",
            "C": "AccountResponse",
            "D": "RegisterAccountResponse"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:22:04"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rĐâu là phương thức mà dịch vụ cung cấp ?",
        "options": {
            "A": "Register",
            "B": "AccountRegistrationPortType",
            "C": "RegisterAccount",
            "D": "AccountRegistrationService"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN752",
        "crawled_at": "2025-06-12 23:22:05"
    }
]