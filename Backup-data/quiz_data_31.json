[
    {
        "question_number": 1,
        "question_content": "Vai trò nào trong SOA lưu trữ thông tin về các dịch vụ có sẵn và cung cấp thông tin này cho người tiêu dùng dịch vụ?",
        "options": {
            "A": "Service Provider",
            "B": "Service Consumer",
            "C": "Service Registry",
            "D": "Service Requestor"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:29"
    },
    {
        "question_number": 2,
        "question_content": "Độ mịn dịch vụ ảnh hưởng đến điều gì trong dịch vụ web?",
        "options": {
            "A": "Khả năng tái sử dụng và tính linh hoạt của dịch vụ",
            "B": "Khả năng mở rộng và tương tác giữa các dịch vụ",
            "C": "Khả năng hiệu suất và bảo mật của dịch vụ",
            "D": "Khả năng kết nối và tương tác với người dùng"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:30"
    },
    {
        "question_number": 3,
        "question_content": "Giữa RPC-Style và Message-Style cái nào phù hợp hơn cho dịch vụ web đơn giản?",
        "options": {
            "A": "Cả RPC-Style và Message-Style không phù hợp cho dịch vụ web đơn giản",
            "B": "Message-Style phù hợp cho dịch vụ web đơn giản",
            "C": "Cả RPC-Style và Message-Style đều phù hợp cho dịch vụ web đơn giản",
            "D": "RPC-Style phù hợp cho dịch vụ web đơn giản"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:32"
    },
    {
        "question_number": 4,
        "question_content": "Dịch vụ loại nào được sử dụng để xử lý các thực thể kinh doanh liên quan, như hóa đơn, khách hàng hoặc yêu cầu?",
        "options": {
            "A": "Task service",
            "B": "Microservice",
            "C": "Entity service",
            "D": "Utility service"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:33"
    },
    {
        "question_number": 5,
        "question_content": "Định nghĩa microservice trong kiến trúc hướng dịch vụ (SOA)?",
        "options": {
            "A": "Một dịch vụ bất khả tri thường có phạm vi chức năng nhỏ bao gồm logic với các yêu cầu xử lý và triển khai cụ thể",
            "B": "Một dịch vụ không bất khả tri thường có phạm vi chức năng nhỏ bao gồm logic với các yêu cầu xử lý và triển khai cụ thể",
            "C": "Một dịch vụ lớn được chia nhỏ thành các thành phần nhỏ hơn",
            "D": "Một dịch vụ được thiết kế để chạy trên nhiều máy chủ khác nhau"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:35"
    },
    {
        "question_number": 6,
        "question_content": "Điều kiện để một dịch vụ được coi là bất khả tri?",
        "options": {
            "A": "Chứa logic có khả năng tái sử dụng bởi nhiều quy trình kinh doanh",
            "B": "Chứa logic được sử dụng trong một quy trình kinh doanh duy nhất",
            "C": "Các chức năng được phát triển từ các thực thể",
            "D": "Các chức năng chỉ gồm logic không liên quan đến thực thể"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:36"
    },
    {
        "question_number": 7,
        "question_content": "Điều gì KHÔNG đúng khi nói về việc xác định các tài nguyên trong giai đoạn mô hình hóa dịch vụ ?",
        "options": {
            "A": "Các tài nguyên có thể được biểu diễn bằng dấu gạch chéo làm dấu phân cách",
            "B": "Các tài nguyên nên được giữ ở dạng đơn giản trong giai đoạn này",
            "C": "Các tài nguyên xác định có thể không liên quan đến các thực thể kinh doanh đã biết",
            "D": "Các tài nguyên cần phải tuân thủ hoàn toàn các tiêu chuẩn URL ngay từ đầu"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:37"
    },
    {
        "question_number": 8,
        "question_content": "Sau khi phân tách quy trình kinh doanh thành các hành động chi tiết, những loại hành động nào không phù hợp cho các bước mô hình hóa dịch vụ REST tiếp theo và nên được loại bỏ?",
        "options": {
            "A": "Các hành động liên quan đến truy cập cơ sở dữ liệu",
            "B": "Các hành động yêu cầu sử dụng giao diện người dùng đồ họa",
            "C": "Các hành động liên quan đến bảo mật và mã hóa thông tin",
            "D": "Các hành động cần phải thực hiện bởi con người hoặc các hệ thống cũ không thể đóng gói thành dịch vụ"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:39"
    },
    {
        "question_number": 9,
        "question_content": "Trong quy trình mô hình hóa web service, nguyên tắc nào không được xem xét tại Bước 5 (Áp dụng hướng dịch vụ) khi áp dụng hướng dịch vụ?",
        "options": {
            "A": "Tách rời dịch vụ (Service Loose Coupling)",
            "B": "Trừu tượng dịch vụ (Service Abstraction)",
            "C": "Tự chủ dịch vụ (Service Autonomy)",
            "D": "Bảo mật dịch vụ (Service Security)"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:40"
    },
    {
        "question_number": 10,
        "question_content": "Ngôn ngữ chính dùng để định nghĩa cấu trúc thông điệp trong các dịch vụ web dựa trên SOAP là gì?",
        "options": {
            "A": "JSON",
            "B": "HTML",
            "C": "YAML",
            "D": "XML"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:42"
    },
    {
        "question_number": 11,
        "question_content": "Nguyên tắc nào tự nhiên là một phần của mô hình thiết kế thực thể?",
        "options": {
            "A": "Service Contract và Service Loose Coupling",
            "B": "Service Statelessness và Service Discoverability",
            "C": "Service Abstraction và Service Reusability",
            "D": "Service Reusability và Service Autonomy"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:43"
    },
    {
        "question_number": 12,
        "question_content": "Thiết kế hợp đồng dịch vụ Web thường bắt đầu bằng việc làm gì?",
        "options": {
            "A": "Xác định định nghĩa chính thức về các thông báo của dịch vụ được yêu cầu xử lý",
            "B": "Xác định loại giao thức truyền thông",
            "C": "Xác định cấu trúc dữ liệu tải trọng",
            "D": "Xác định cách triển khai dịch vụ qua REST"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:45"
    },
    {
        "question_number": 13,
        "question_content": "What can be used to enable message persistence in asynchronous systems?",
        "options": {
            "A": "Load balancer",
            "B": "Service discovery",
            "C": "Message queue",
            "D": "Circuit breaker"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:47"
    },
    {
        "question_number": 14,
        "question_content": "Which pattern coordinates transactions that span across multiple services?",
        "options": {
            "A": "Service Mesh",
            "B": "Circuit Breaker",
            "C": "Saga",
            "D": "Webhooks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:49"
    },
    {
        "question_number": 15,
        "question_content": "What does the transaction script pattern typically use?",
        "options": {
            "A": "Object references",
            "B": "Flat procedures",
            "C": "Event-driven architecture",
            "D": "Command-query separation"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:51"
    },
    {
        "question_number": 16,
        "question_content": "Why is it challenging to develop business logic in microservices?",
        "options": {
            "A": "UI requirements change frequently",
            "B": "Logic must span service boundaries and ensure consistency",
            "C": "Developers prefer monoliths",
            "D": "Testing is easier"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:53"
    },
    {
        "question_number": 17,
        "question_content": "Why is fault isolation important in microservices?",
        "options": {
            "A": "To ensure faster UI rendering",
            "B": "To enable service-level scaling",
            "C": "To prevent a single failure from cascading",
            "D": "To allow reuse of logic"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:54"
    },
    {
        "question_number": 18,
        "question_content": "Microservices typically emphasize which kind of deployment?",
        "options": {
            "A": "Manual and centralized",
            "B": "Monolithic deployment",
            "C": "Decentralized and independent",
            "D": "Weekly batch deployment"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:56"
    },
    {
        "question_number": 19,
        "question_content": "Which of the following tools is commonly used for container orchestration?",
        "options": {
            "A": "Docker",
            "B": "Consul",
            "C": "Kubernetes",
            "D": "Helm"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:58"
    },
    {
        "question_number": 20,
        "question_content": "In a microservices environment, what does 'immutable infrastructure' imply?",
        "options": {
            "A": "Infrastructure cannot be resized",
            "B": "Infrastructure is updated in-place",
            "C": "Infrastructure is replaced rather than changed",
            "D": "Infrastructure is read-only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:29:59"
    },
    {
        "question_number": 21,
        "question_content": "What does CQRS stand for in the context of event sourcing?",
        "options": {
            "A": "Command Query Remote Server",
            "B": "Centralized Query Result Store",
            "C": "Command Query Responsibility Segregation",
            "D": "Continuous Queue Record Synchronization"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:00"
    },
    {
        "question_number": 22,
        "question_content": "In event sourcing, what is an 'event' typically?",
        "options": {
            "A": "An object describing a user interface action",
            "B": "A notification for external systems",
            "C": "A record of something that has occurred in the system",
            "D": "A script executed on database change"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:01"
    },
    {
        "question_number": 23,
        "question_content": "A desktop web client wants extensive details from multiple services. What's a good API design approach?",
        "options": {
            "A": "Let it call each service directly",
            "B": "Return large default payloads",
            "C": "Use an API gateway to aggregate and tailor response",
            "D": "Enforce usage of SOAP"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:03"
    },
    {
        "question_number": 24,
        "question_content": "What is one of the main reasons for using an API gateway in a microservices architecture?",
        "options": {
            "A": "To increase database performance",
            "B": "To expose internal service APIs directly",
            "C": "To act as a single entry point for clients",
            "D": "To remove the need for load balancing"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:04"
    },
    {
        "question_number": 25,
        "question_content": "Why is idempotency important in asynchronous communication?",
        "options": {
            "A": "To increase bandwidth",
            "B": "To reduce latency",
            "C": "To ensure reliable retries",
            "D": "To optimize caching"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:05"
    },
    {
        "question_number": 26,
        "question_content": "What is a benefit of using a circuit breaker in service communication?",
        "options": {
            "A": "Enables stateful routing",
            "B": "Improves serialization speed",
            "C": "Prevents cascading failures",
            "D": "Provides data encryption"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:06"
    },
    {
        "question_number": 27,
        "question_content": "What is a key benefit of using materialized views in query processing?",
        "options": {
            "A": "They reduce write latency",
            "B": "They support asynchronous communication",
            "C": "They improve performance by precomputing results",
            "D": "They manage user sessions"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:08"
    },
    {
        "question_number": 28,
        "question_content": "Which of the following best describes eventual consistency in a query model?",
        "options": {
            "A": "Read and write operations are immediately consistent",
            "B": "Data is written once and never changed",
            "C": "Read models may lag behind write models due to asynchronous updates",
            "D": "All services write to the same database"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:10"
    },
    {
        "question_number": 29,
        "question_content": "Which of the following best describes a SAGA pattern in microservices?",
        "options": {
            "A": "A way to encrypt transactions",
            "B": "A distributed sequence of local transactions with compensations",
            "C": "A batch transaction handler",
            "D": "A fallback mechanism for HTTP errors"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:12"
    },
    {
        "question_number": 30,
        "question_content": "What is the role of a transaction coordinator in traditional systems?",
        "options": {
            "A": "To split transactions",
            "B": "To ensure message encryption",
            "C": "To coordinate commit/rollback across resources",
            "D": "To validate microservice boundaries"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:14"
    },
    {
        "question_number": 31,
        "question_content": "Trường hợp sử dụng phổ biến nhất cho SOAP là gì?",
        "options": {
            "A": "Tạo ứng dụng di động",
            "B": "Tạo ứng dụng web",
            "C": "Tạo ứng dụng doanh nghiệp",
            "D": "Tạo ứng dụng trên máy tính để bàn"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:15"
    },
    {
        "question_number": 32,
        "question_content": "Dịch vụ dựa trên SOAP hay REST tốt hơn cho ứng dụng phức tạp?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào ứng dụng",
            "D": "SOAP và REST đều có thể được sử dụng cho ứng dụng phức tạp"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:16"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho updateProduct () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products/15",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:17"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rMã trạng thái HTTP của phản hồi từ phương thức getOrders() nếu không có đơn hàng?",
        "options": {
            "A": "200",
            "B": "201",
            "C": "204",
            "D": "404"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:19"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rHTTP Request nào sẽ không được chuyển cho updateOrder () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /orders/15",
            "B": "Phương thức PUT, đường dẫn /orders",
            "C": "Phương thức PUT, đường dẫn /orders/16",
            "D": "Phương thức PUT, đường dẫn /orders/17"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:21"
    },
    {
        "question_number": 36,
        "question_content": "Trong WSDL, phần PortType dùng để làm gì?",
        "options": {
            "A": "Chứa các thông tin bổ sung về message",
            "B": "Chứa thông tin về tài nguyên của web service",
            "C": "Định nghĩa các phương thức và kiểu dữ liệu",
            "D": "Chứa các thư viện lập trình"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:22"
    },
    {
        "question_number": 37,
        "question_content": "SOAP message bao gồm các phần nào?",
        "options": {
            "A": "Header và Navigation",
            "B": "Header và Footer",
            "C": "Header và Sidebar",
            "D": "Header và Body"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:23"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông điệp đầu vào tên là gì ?",
        "options": {
            "A": "Account",
            "B": "RegisterAccount",
            "C": "AccountResponse",
            "D": "RegisterAccountResponse"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:25"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rĐâu là phương thức mà dịch vụ cung cấp ?",
        "options": {
            "A": "Register",
            "B": "AccountRegistrationPortType",
            "C": "RegisterAccount",
            "D": "AccountRegistrationService"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:27"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThông tin nào được yêu cầu khi gửi dữ liệu đến dịch vụ web?",
        "options": {
            "A": "Mã khách hàng và số tiền nạp",
            "B": "Tên khách hàng và số tiền nạp",
            "C": "Mã khách hàng, tên khách hàng và số tiền nạp",
            "D": "Mã khách hàng, tên khách hàng, số tiền nạp và số thẻ tín dụng"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN224",
        "crawled_at": "2025-06-12 14:30:28"
    }
]