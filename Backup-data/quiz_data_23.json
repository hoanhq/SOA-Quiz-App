[
    {
        "question_number": 1,
        "question_content": "Loose coupling trong dịch vụ web giúp thúc đẩy tính chất nào sau đây?",
        "options": {
            "A": "Tính tin cậy (reliability)",
            "B": "Tính bảo mật (security)",
            "C": "Tính mở rộng (scalability)",
            "D": "Tính hiệu suất (performance)"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:01"
    },
    {
        "question_number": 2,
        "question_content": "Cách giao tiếp giữa các thành phần của dịch vụ web thường được thực hiện như thế nào khi áp dụng loose coupling?",
        "options": {
            "A": "Sử dụng giao thức HTTP và các phương thức truyền tin thông qua HTTP",
            "B": "Sử dụng giao thức FTP để truyền tin",
            "C": "Sử dụng giao thức TCP/IP để truyền tin",
            "D": "Sử dụng giao thức SOAP để truyền tin"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:02"
    },
    {
        "question_number": 3,
        "question_content": "Đặc điểm nào sau đây không phải là một lợi ích của loose coupling trong dịch vụ web?",
        "options": {
            "A": "Tăng tính mở rộng và tái sử dụng của dịch vụ web",
            "B": "Giảm độ phức tạp và ràng buộc giữa các thành phần",
            "C": "Dễ dàng thay đổi và cập nhật các thành phần mà không ảnh hưởng đến toàn bộ hệ thống",
            "D": "Tăng hiệu suất và tốc độ truyền thông trong dịch vụ web"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:03"
    },
    {
        "question_number": 4,
        "question_content": "Điều kiện để một dịch vụ được coi là bất khả tri?",
        "options": {
            "A": "Chứa logic có khả năng tái sử dụng bởi nhiều quy trình kinh doanh",
            "B": "Chứa logic được sử dụng trong một quy trình kinh doanh duy nhất",
            "C": "Các chức năng được phát triển từ các thực thể",
            "D": "Các chức năng chỉ gồm logic không liên quan đến thực thể"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:04"
    },
    {
        "question_number": 5,
        "question_content": "Vì sao khi thiết kế kiến trúc dịch vụ cần lấy doanh nghiệp làm trung tâm?",
        "options": {
            "A": "Để dùng chung các service",
            "B": "Tránh nguy cơ tạo ra các silo mới trong doanh nghiệp",
            "C": "Trách các dịch vụ xa rời mục đích kinh doanh",
            "D": "Tuổi thọ kiến trúc thấp"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:05"
    },
    {
        "question_number": 6,
        "question_content": "Chỉ ra các mô hình dịch vụ phổ biến?",
        "options": {
            "A": "Task service, Microservice, Management service, Utility service",
            "B": "Task service, Microservice, Entity service, Utility service",
            "C": "Task service, Microservice, Entity service, Identity service",
            "D": "Routing service, Microservice, Entity service, Utility service"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:07"
    },
    {
        "question_number": 7,
        "question_content": "Task Service đóng vai trò gì trong các hệ thống hướng dịch vụ?",
        "options": {
            "A": "Quản lý các thực thể dữ liệu trong cơ sở dữ liệu",
            "B": "Điều phối và quản lý các quy trình kinh doanh phức tạp",
            "C": "Cung cấp các chức năng tiện ích độc lập",
            "D": "Xác định các quan hệ giữa các dịch vụ thực thể"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:08"
    },
    {
        "question_number": 8,
        "question_content": "Trong quy trình mô hình hóa web service, nguyên tắc nào không được xem xét tại Bước 5 (Áp dụng hướng dịch vụ) khi áp dụng hướng dịch vụ?",
        "options": {
            "A": "Tách rời dịch vụ (Service Loose Coupling)",
            "B": "Trừu tượng dịch vụ (Service Abstraction)",
            "C": "Tự chủ dịch vụ (Service Autonomy)",
            "D": "Bảo mật dịch vụ (Service Security)"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:09"
    },
    {
        "question_number": 9,
        "question_content": "Khi nào một logic khả tri (non-agnostic) có thể được đóng gói thành một microservice riêng biệt?",
        "options": {
            "A": "Chi phí triển khai và bảo trì",
            "B": "Mức độ độc lập về logic và dữ liệu",
            "C": "Yêu cầu hiệu suất và khả năng mở rộng",
            "D": "Mức độ phức tạp của dịch vụ"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:10"
    },
    {
        "question_number": 10,
        "question_content": "Tiêu chuẩn đặt tên dịch vụ web nhằm mục đích gì?",
        "options": {
            "A": "Tạo tính nhất quán và dễ hiểu trong hệ thống",
            "B": "Tái sử dụng các đặc điểm tiết lộ quy trình kinh doanh",
            "C": "Xác định mô hình thực thể ban đầu của tổ chức",
            "D": "Khuyến nghị áp dụng các tiêu chuẩn thiết kế cho microservice"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:12"
    },
    {
        "question_number": 11,
        "question_content": "Nguyên tắc nào tự nhiên là một phần của mô hình thiết kế thực thể?",
        "options": {
            "A": "Service Contract và Service Loose Coupling",
            "B": "Service Statelessness và Service Discoverability",
            "C": "Service Abstraction và Service Reusability",
            "D": "Service Reusability và Service Autonomy"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:13"
    },
    {
        "question_number": 12,
        "question_content": "Hợp đồng dịch vụ Web được thiết kế để phản ánh chính xác điều gì?",
        "options": {
            "A": "Cách triển khai dịch vụ",
            "B": "Ngữ cảnh và chức năng của các ứng viên dịch vụ tương ứng của chúng",
            "C": "Phần mềm cơ sở hạ tầng",
            "D": "Phân tích và thiết kế hệ thống"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:14"
    },
    {
        "question_number": 13,
        "question_content": "Which protocol is commonly used for synchronous HTTP communication between services?",
        "options": {
            "A": "gRPC",
            "B": "WebSockets",
            "C": "SMTP",
            "D": "Kafka"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:16"
    },
    {
        "question_number": 14,
        "question_content": "Which pattern is useful when a client needs to contact multiple services in one logical operation?",
        "options": {
            "A": "Service Mesh",
            "B": "API Gateway",
            "C": "Saga",
            "D": "Backend for Frontend"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:17"
    },
    {
        "question_number": 15,
        "question_content": "What is the role of a domain model in a microservice application?",
        "options": {
            "A": "To define UI layout",
            "B": "To enforce security policies",
            "C": "To implement business rules and logic",
            "D": "To manage static content"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:18"
    },
    {
        "question_number": 16,
        "question_content": "What does the transaction script pattern typically use?",
        "options": {
            "A": "Object references",
            "B": "Flat procedures",
            "C": "Event-driven architecture",
            "D": "Command-query separation"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:19"
    },
    {
        "question_number": 17,
        "question_content": "Which database strategy is most aligned with microservices?",
        "options": {
            "A": "Shared database for all services",
            "B": "Single monolithic database",
            "C": "Database per service",
            "D": "In-memory only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:20"
    },
    {
        "question_number": 18,
        "question_content": "When should a team split a monolith into microservices?",
        "options": {
            "A": "When the monolith is fast",
            "B": "When modular boundaries are clear and aligned to business domains",
            "C": "When using a single tech stack",
            "D": "At the start of a project"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:21"
    },
    {
        "question_number": 19,
        "question_content": "In Kubernetes, what mechanism can automatically roll back a failed deployment?",
        "options": {
            "A": "Pod eviction",
            "B": "Horizontal scaling",
            "C": "Liveness probe",
            "D": "Deployment controller"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:22"
    },
    {
        "question_number": 20,
        "question_content": "Why is rollback functionality critical in microservices deployment?",
        "options": {
            "A": "To increase deployment speed",
            "B": "To reuse legacy code",
            "C": "To recover from faulty deployments",
            "D": "To test performance"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:24"
    },
    {
        "question_number": 21,
        "question_content": "Which combination often supports scalable and flexible microservice systems?",
        "options": {
            "A": "SOAP and Eventual Consistency",
            "B": "REST and Event Replay",
            "C": "CQRS and Event Sourcing",
            "D": "CRUD and Load Balancing"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:26"
    },
    {
        "question_number": 22,
        "question_content": "How is current application state typically derived in event sourcing?",
        "options": {
            "A": "From direct writes to database state",
            "B": "By aggregating current logs",
            "C": "By replaying past events from an event store",
            "D": "Using cached values only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:28"
    },
    {
        "question_number": 23,
        "question_content": "What is a potential disadvantage of not using an API gateway in microservices?",
        "options": {
            "A": "Better performance",
            "B": "Simpler architecture",
            "C": "Clients become tightly coupled to internal services",
            "D": "Improved testability"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:29"
    },
    {
        "question_number": 24,
        "question_content": "If a mobile app is requesting redundant data from a composite API, what can be done?",
        "options": {
            "A": "Switch to SOAP",
            "B": "Optimize the gateway logic or use GraphQL",
            "C": "Increase timeout",
            "D": "Force the app to filter data"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:30"
    },
    {
        "question_number": 25,
        "question_content": "Which messaging pattern is most suitable for broadcasting events to multiple services?",
        "options": {
            "A": "Request-Reply",
            "B": "Command",
            "C": "Publish-Subscribe",
            "D": "Point-to-Point"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:31"
    },
    {
        "question_number": 26,
        "question_content": "Why is idempotency important in asynchronous communication?",
        "options": {
            "A": "To increase bandwidth",
            "B": "To reduce latency",
            "C": "To ensure reliable retries",
            "D": "To optimize caching"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:33"
    },
    {
        "question_number": 27,
        "question_content": "Which database type is often used for read models in microservices?",
        "options": {
            "A": "Graph databases for all use cases",
            "B": "Write-optimized SQL only",
            "C": "Read-optimized NoSQL or denormalized SQL",
            "D": "Blockchain ledgers"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:34"
    },
    {
        "question_number": 28,
        "question_content": "How are read models typically kept up-to-date?",
        "options": {
            "A": "Through manual synchronization",
            "B": "By querying write databases",
            "C": "By consuming and handling domain events",
            "D": "Through direct API calls"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:35"
    },
    {
        "question_number": 29,
        "question_content": "Which coordination model is more scalable in distributed transactions?",
        "options": {
            "A": "Two-Phase Commit",
            "B": "Compensating Transactions",
            "C": "Shared Database Model",
            "D": "Direct HTTP Requests"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:37"
    },
    {
        "question_number": 30,
        "question_content": "Which of the following best describes a SAGA pattern in microservices?",
        "options": {
            "A": "A way to encrypt transactions",
            "B": "A distributed sequence of local transactions with compensations",
            "C": "A batch transaction handler",
            "D": "A fallback mechanism for HTTP errors"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:39"
    },
    {
        "question_number": 31,
        "question_content": "Dịch vụ dựa trên SOAP hỗ trợ định dạng dữ liệu nào?",
        "options": {
            "A": "CSV",
            "B": "JSON",
            "C": "YAML",
            "D": "XML"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:40"
    },
    {
        "question_number": 32,
        "question_content": "Nhược điểm  chínhcủa việc sử dụng REST là gì?",
        "options": {
            "A": "Không dễ phát triển như SOAP",
            "B": "Không an toàn như SOAP",
            "C": "Không phải là một giao thức tiêu chuẩn",
            "D": "Không hiệu quả như SOAP"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:41"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rĐường dẫn của phương thức deleteOrder() là gì?",
        "options": {
            "A": "/orders",
            "B": "/order",
            "C": "/orders/{id}",
            "D": "/orders/delete"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:43"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rPhương thức HTTP cho phương thức createProduct() là gì?",
        "options": {
            "A": "GET",
            "B": "POST",
            "C": "PUT",
            "D": "DELETE"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:44"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rKiểu dữ liệu phản hồi của phương thức getProducts() là gì?",
        "options": {
            "A": "text/plain",
            "B": "application/json",
            "C": "application/xml",
            "D": "image/jpeg"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:45"
    },
    {
        "question_number": 36,
        "question_content": "Phần tử nào trong WSDL chỉ định địa chỉ của một web service?",
        "options": {
            "A": "binding",
            "B": "service",
            "C": "portType",
            "D": "port"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:47"
    },
    {
        "question_number": 37,
        "question_content": "Trong WSDL, phần Binding có thể sử dụng để kết nối với giao thức nào?",
        "options": {
            "A": "SMTP",
            "B": "FTP",
            "C": "HTTP",
            "D": "SSH"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:48"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông điệp đầu ra tên là gì ?",
        "options": {
            "A": "Account",
            "B": "RegisterAccount",
            "C": "AccountResponse",
            "D": "RegisterAccountResponse"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:50"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rĐâu không phải là một phần tử đơn ?",
        "options": {
            "A": "CustomerName",
            "B": "CustomerId",
            "C": "Amount",
            "D": "Customer"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:52"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThông tin nào được dịch vụ web trả về?",
        "options": {
            "A": "Thông báo mô tả trạng thái của giao dịch nạp tiền",
            "B": "Trạng thái của giao dịch nạp tiền và thông điệp kèm theo",
            "C": "Mã khách hàng và số tiền đã nạp",
            "D": "Mã khách hàng, tên khách hàng, số tiền đã nạp và số thẻ tín dụng"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN019",
        "crawled_at": "2025-06-12 13:02:54"
    }
]