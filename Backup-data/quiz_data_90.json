[
    {
        "question_number": 3,
        "question_content": "Giữa RPC-Style và Message-Style cái nào phù hợp hơn cho dịch vụ web đơn giản?",
        "options": {
            "A": "Cả RPC-Style và Message-Style không phù hợp cho dịch vụ web đơn giản",
            "B": "Message-Style phù hợp cho dịch vụ web đơn giản",
            "C": "Cả RPC-Style và Message-Style đều phù hợp cho dịch vụ web đơn giản",
            "D": "RPC-Style phù hợp cho dịch vụ web đơn giản"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:16:44"
    },
    {
        "question_number": 10,
        "question_content": "Phương pháp nào được khuyến nghị để xây dựng microservices từ góc độ công nghệ?",
        "options": {
            "A": "Dịch vụ Web dựa trên SOAP",
            "B": "Microservices dựa trên REST",
            "C": "Môi trường WS-*",
            "D": "Công nghệ gRPC"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:16:45"
    },
    {
        "question_number": 19,
        "question_content": "What challenge is commonly associated with deploying multiple microservices simultaneously?",
        "options": {
            "A": "Slow startup time",
            "B": "Increased service discovery traffic",
            "C": "Deployment sequencing and coordination",
            "D": "Lack of logging"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:16:50"
    },
    {
        "question_number": 37,
        "question_content": "WSDL là viết tắt của từ gì?",
        "options": {
            "A": "Web Service Description Language",
            "B": "Web Services Design Language",
            "C": "Web System Definition Language",
            "D": "Web Service Definition Language"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:16:53"
    },
    {
        "question_number": 5,
        "question_content": "Loại SOA nào được sử dụng phổ biến?",
        "options": {
            "A": "Service Composition",
            "B": "Service Inventory",
            "C": "Service-Oriented Enterprise",
            "D": "Tất cả các loại SOA kể trên"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:16:55"
    },
    {
        "question_number": 26,
        "question_content": "Which technology is often used for real-time streaming between services?",
        "options": {
            "A": "Redis",
            "B": "Kafka",
            "C": "PostgreSQL",
            "D": "gRPC"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:16:59"
    },
    {
        "question_number": 12,
        "question_content": "Sử dụng tài liệu WSDL để làm gì?",
        "options": {
            "A": "Để xác định các mô-đun cho các loại, hoạt động và liên kết có thể chia sẻ trên WSDL",
            "B": "Để tách riêng các mô-đun XML Schema",
            "C": "Để tạo ra một kho lưu trữ trung tâm của schema",
            "D": "Để xác định các tài liệu WSDL chính tùy chỉnh"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:02"
    },
    {
        "question_number": 27,
        "question_content": "Which database type is often used for read models in microservices?",
        "options": {
            "A": "Graph databases for all use cases",
            "B": "Write-optimized SQL only",
            "C": "Read-optimized NoSQL or denormalized SQL",
            "D": "Blockchain ledgers"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:03"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông điệp đầu ra tên là gì ?",
        "options": {
            "A": "Account",
            "B": "RegisterAccount",
            "C": "AccountResponse",
            "D": "RegisterAccountResponse"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:04"
    },
    {
        "question_number": 2,
        "question_content": "Fine-grained và Coarse-grained khác nhau như thế nào về khả năng tái sử dụng của dịch vụ?",
        "options": {
            "A": "Fine-grained có khả năng tái sử dụng cao",
            "B": "Coarse-grained có khả năng tái sử dụng cao",
            "C": "Fine-grained có khả năng tái sử dụng hạn chế",
            "D": "Cả 2 đều có khả năng tái sử dụng như nao"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:06"
    },
    {
        "question_number": 1,
        "question_content": "Thuộc tính phi chức năng của dịch vụ web bao gồm các yếu tố nào sau đây?",
        "options": {
            "A": "Khả năng tích hợp, mở rộng",
            "B": "Giao diện người dùng, trải nghiệm người dùng",
            "C": "Quản lý dữ liệu, phân quyền truy cập",
            "D": "Bảo mật, hiệu suất, sự tin cậy"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:09"
    },
    {
        "question_number": 8,
        "question_content": "Quá trình mô hình hóa dịch vụ có cần phải đảm bảo tính linh hoạt của hợp đồng dịch vụ?",
        "options": {
            "A": "Có, để dễ dàng cập nhật và thay đổi trong quá trình phát triển",
            "B": "Không, để đảm bảo tính nhất quán và ổn định của dịch vụ",
            "C": "Có, để giảm thiểu sự phức tạp của dịch vụ",
            "D": "Không, để giảm thiểu rủi ro và lỗi trong quá trình triển khai"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:12"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rTên của giao diện dich vụ là gì ?",
        "options": {
            "A": "RegisterAccount",
            "B": "RegisterAccountResponse",
            "C": "AccountRegistrationPortType",
            "D": "AccountRegistrationBinding"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:14"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rMã trạng thái HTTP của phản hồi từ phương thức getOrders() nếu không có đơn hàng?",
        "options": {
            "A": "200",
            "B": "201",
            "C": "204",
            "D": "404"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:17"
    },
    {
        "question_number": 36,
        "question_content": "Để sử dụng SOAP, ta cần phải làm gì trước tiên?",
        "options": {
            "A": "Kết nối tới một cơ sở dữ liệu",
            "B": "Mở một trình duyệt web",
            "C": "Định nghĩa một tài liệu WSDL",
            "D": "Tạo ra một đối tượng JavaScript"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:20"
    },
    {
        "question_number": 31,
        "question_content": "Dịch vụ dựa trên SOAP hay REST có kiến trúc phức tạp hơn?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào cách triển khai cụ thể",
            "D": "SOAP và REST có cùng độ phức tạp"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:21"
    },
    {
        "question_number": 15,
        "question_content": "What should developers avoid in a domain model for microservices?",
        "options": {
            "A": "Using rich domain logic",
            "B": "Using object references across services",
            "C": "Using encapsulated fields",
            "D": "Using immutable data types"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:24"
    },
    {
        "question_number": 4,
        "question_content": "Loại dịch vụ nào thường tương ứng với logic quy trình kinh doanh mục tiêu, bao gồm logic ghép nối các dịch vụ khác để hoàn thành nhiệm vụ?",
        "options": {
            "A": "Task service",
            "B": "Microservice",
            "C": "Entity service",
            "D": "Utility service"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:25"
    },
    {
        "question_number": 22,
        "question_content": "Which storage format is most aligned with event sourcing?",
        "options": {
            "A": "Document-oriented databases",
            "B": "Relational tables with fixed schemas",
            "C": "Append-only logs",
            "D": "Key-value stores"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:28"
    },
    {
        "question_number": 16,
        "question_content": "Which pattern is primarily used in the FTGO application's business logic?",
        "options": {
            "A": "Procedural script",
            "B": "Transaction script",
            "C": "Domain model",
            "D": "Saga"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:30"
    },
    {
        "question_number": 17,
        "question_content": "Which DevOps practice is critical to microservices success?",
        "options": {
            "A": "Manual testing",
            "B": "Manual deployment",
            "C": "Continuous Integration/Continuous Delivery",
            "D": "Monthly backups"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:33"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rĐường dẫn của phương thức createOrder() là gì?",
        "options": {
            "A": "/orders",
            "B": "/order",
            "C": "/orders/{id}",
            "D": "/orders/create"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:36"
    },
    {
        "question_number": 24,
        "question_content": "What is the challenge with having a one-size-fits-all API in microservices?",
        "options": {
            "A": "It is always slower than direct DB queries",
            "B": "It requires GraphQL",
            "C": "Different clients have different data needs and network constraints",
            "D": "It reduces reusability of services"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:40"
    },
    {
        "question_number": 21,
        "question_content": "Which of the following best describes an event store?",
        "options": {
            "A": "A database for REST services",
            "B": "A service that sends push notifications",
            "C": "A log of immutable events that represent state transitions",
            "D": "A cache for recent API responses"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:43"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rĐường dẫn của phương thức getOrders() là gì?",
        "options": {
            "A": "/orders",
            "B": "/order",
            "C": "/orders/{id}",
            "D": "/orders/create"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:46"
    },
    {
        "question_number": 7,
        "question_content": "Điều gì KHÔNG đúng khi nói về việc xác định các tài nguyên trong giai đoạn mô hình hóa dịch vụ ?",
        "options": {
            "A": "Các tài nguyên có thể được biểu diễn bằng dấu gạch chéo làm dấu phân cách",
            "B": "Các tài nguyên nên được giữ ở dạng đơn giản trong giai đoạn này",
            "C": "Các tài nguyên xác định có thể không liên quan đến các thực thể kinh doanh đã biết",
            "D": "Các tài nguyên cần phải tuân thủ hoàn toàn các tiêu chuẩn URL ngay từ đầu"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:48"
    },
    {
        "question_number": 6,
        "question_content": "Dịch vụ tiện ích là gì?",
        "options": {
            "A": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng bất khả tri, không được bắt nguồn từ các mô hình và mô hình phân tích kinh doanh",
            "B": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng khả tri, không được bắt nguồn từ các mô hình và mô hình phân tích kinh doanh",
            "C": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng bất khả tri, bắt nguồn từ các mô hình và mô hình phân tích kinh doanh",
            "D": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng khả tri, bắt nguồn từ các mô hình và mô hình phân tích kinh doanh"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:50"
    },
    {
        "question_number": 9,
        "question_content": "Trong quy trình mô hình hóa web service, Đâu không phải là mục đích của bước 6 (Xác định ứng viên tổ hợp dịch vụ)?",
        "options": {
            "A": "Cung cấp cái nhìn sâu sắc về cách nhóm các bước quy trình",
            "B": "Cho thấy mối quan hệ task service và entity service",
            "C": "Xác định các thành phần dịch vụ tiềm năng",
            "D": "Giảm chi phí phát triển dịch vụ"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:52"
    },
    {
        "question_number": 14,
        "question_content": "What is the role of a message broker in microservice communication?",
        "options": {
            "A": "Transform HTTP to gRPC",
            "B": "Store configuration settings",
            "C": "Coordinate and route messages",
            "D": "Serve static content"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:54"
    },
    {
        "question_number": 28,
        "question_content": "What is a major challenge when implementing denormalized read models?",
        "options": {
            "A": "They slow down read operations",
            "B": "They make microservices loosely coupled",
            "C": "They require syncing across many events and potential duplication",
            "D": "They increase security"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:55"
    },
    {
        "question_number": 11,
        "question_content": "Mức độ chi tiết dữ liệu (Data Granularity) thể hiện cho điều gì?",
        "options": {
            "A": "Phạm vi chức năng của dịch vụ",
            "B": "Số lượng logic liên quan đến dịch vụ",
            "C": "Lượng dữ liệu được xử lý",
            "D": "Ngữ cảnh chức năng tổng thể của dịch vụ"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:17:57"
    },
    {
        "question_number": 30,
        "question_content": "In an e-commerce checkout using saga, if the payment step fails, what should happen?",
        "options": {
            "A": "Notify admin only",
            "B": "Compensate previous steps like canceling order and restocking",
            "C": "Retry indefinitely",
            "D": "Send error log"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:18:00"
    },
    {
        "question_number": 29,
        "question_content": "In orchestration-based saga, which component triggers and monitors the steps?",
        "options": {
            "A": "Service registry",
            "B": "API Gateway",
            "C": "Saga orchestrator",
            "D": "Database monitor"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:18:02"
    },
    {
        "question_number": 25,
        "question_content": "What technique helps handle messages that cannot be processed immediately?",
        "options": {
            "A": "Web scraping",
            "B": "Dead letter queue",
            "C": "Session caching",
            "D": "Rate limiting"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:18:06"
    },
    {
        "question_number": 20,
        "question_content": "In Kubernetes, what mechanism can automatically roll back a failed deployment?",
        "options": {
            "A": "Pod eviction",
            "B": "Horizontal scaling",
            "C": "Liveness probe",
            "D": "Deployment controller"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:18:08"
    },
    {
        "question_number": 13,
        "question_content": "Which of the following is a primary reason for using asynchronous communication in microservices?",
        "options": {
            "A": "To reduce latency in request handling",
            "B": "To simplify service discovery",
            "C": "To decouple services for better scalability",
            "D": "To enforce strict request-response patterns"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:18:11"
    },
    {
        "question_number": 23,
        "question_content": "Why might mobile clients benefit from a separate backend via the BFF pattern?",
        "options": {
            "A": "They use HTTPS",
            "B": "They require smaller, optimized payloads",
            "C": "They can access microservices directly",
            "D": "They are built using SOAP"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN405",
        "crawled_at": "2025-06-13 04:18:13"
    }
]