[
    {
        "question_number": 1,
        "question_content": "Thực thi dịch vụ (service implementation) đóng vai trò gì trong dịch vụ web?",
        "options": {
            "A": "Là thông tin về chức năng mà dịch vụ cung cấp",
            "B": "Là phần triển khai chức năng của dịch vụ",
            "C": "Là phần giao tiếp với các dịch vụ khác",
            "D": "Là phần xác định cấu trúc và phương thức của dịch vụ"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:32"
    },
    {
        "question_number": 2,
        "question_content": "Trong SOA, phương thức giao tiếp giữa các dịch vụ thường sử dụng giao thức nào?",
        "options": {
            "A": "RPC",
            "B": "Message",
            "C": "WSDL",
            "D": "SOAP"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:33"
    },
    {
        "question_number": 3,
        "question_content": "Vai trò nào trong SOA thực hiện việc kết nối, tương tác giữa các dịch vụ và quản lý luồng thông tin giữa chúng?",
        "options": {
            "A": "Service Provider",
            "B": "Service Consumer",
            "C": "Service Registry",
            "D": "Service Requestor"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:34"
    },
    {
        "question_number": 4,
        "question_content": "Định nghĩa microservice trong kiến trúc hướng dịch vụ (SOA)?",
        "options": {
            "A": "Một dịch vụ bất khả tri thường có phạm vi chức năng nhỏ bao gồm logic với các yêu cầu xử lý và triển khai cụ thể",
            "B": "Một dịch vụ không bất khả tri thường có phạm vi chức năng nhỏ bao gồm logic với các yêu cầu xử lý và triển khai cụ thể",
            "C": "Một dịch vụ lớn được chia nhỏ thành các thành phần nhỏ hơn",
            "D": "Một dịch vụ được thiết kế để chạy trên nhiều máy chủ khác nhau"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:34"
    },
    {
        "question_number": 5,
        "question_content": "Các đặc điểm của SOA?",
        "options": {
            "A": "Business driven, Neutral Driven, Composition Centric,Enterprise-Centric",
            "B": "Business driven, Neutral Driven, Flexibility,Enterprise-Centric",
            "C": "Neutral Driven, Composition Centric,Enterprise-Centric",
            "D": "Accuracy, Neutral Driven, Flexibility,Enterprise-Centric"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:35"
    },
    {
        "question_number": 6,
        "question_content": "Mục đích của quá trình mô hình hóa dịch vụ là gì?",
        "options": {
            "A": "Tổ chức các đơn vị logic thành các giải pháp hướng dịch vụ",
            "B": "Phân loại các đơn vị logic dựa trên kích thước của chúng",
            "C": "Tạo nhãn cho các lớp hướng dịch vụ",
            "D": "Xác định bản chất của các đơn vị logic"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:36"
    },
    {
        "question_number": 7,
        "question_content": "Phương thức HTTP nào thường được sử dụng để truy xuất tài nguyên từ dịch vụ RESTful?",
        "options": {
            "A": "GET",
            "B": "PUT",
            "C": "POST",
            "D": "DELETE"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:37"
    },
    {
        "question_number": 8,
        "question_content": "Trong quá trình xác định các tương tác dịch vụ, các tương tác được xác định dựa trên điều gì?",
        "options": {
            "A": "Yêu cầu về tài nguyên và phương thức",
            "B": "Các tình huống thành công và thất bại có thể xảy ra trong luồng công việc của quy trình",
            "C": "Khả năng mở rộng và triển khai",
            "D": "Yêu cầu về hiệu suất và độ tin cậy"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:39"
    },
    {
        "question_number": 9,
        "question_content": "Trong quy trình mô hình hóa web service, ứng viên dịch vụ nào được xác định đầu tiên?",
        "options": {
            "A": "Entity service",
            "B": "Task service",
            "C": "Microservice",
            "D": "Utility Service"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:40"
    },
    {
        "question_number": 10,
        "question_content": "Sử dụng thuộc tính nào trong cấu trúc ràng buộc WSDL để xác định định dạng tải trọng thông điệp SOAP?",
        "options": {
            "A": "WSDL và REST",
            "B": "Document và Literal",
            "C": "Style và Use",
            "D": "SOAP và XML"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:42"
    },
    {
        "question_number": 11,
        "question_content": "Kết hợp style:document + use:literal được ưu tiên trong SOA vì điều gì?",
        "options": {
            "A": "Hỗ trợ việc nhúng toàn bộ tài liệu XML trong phần thân SOAP",
            "B": "Hỗ trợ việc giao tiếp RPC truyền thống",
            "C": "Hỗ trợ mô hình gửi tin theo kiểu tài liệu là chìa khóa để thực hiện các tính năng của nhiều thông số WS-* khác nhau",
            "D": "Hỗ trợ khái niệm của các thông số WS-*"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:43"
    },
    {
        "question_number": 12,
        "question_content": "Nguyên tắc nào tự nhiên là một phần của mô hình thiết kế thực thể?",
        "options": {
            "A": "Service Contract và Service Loose Coupling",
            "B": "Service Statelessness và Service Discoverability",
            "C": "Service Abstraction và Service Reusability",
            "D": "Service Reusability và Service Autonomy"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:45"
    },
    {
        "question_number": 13,
        "question_content": "Which technology is often used for real-time streaming between services?",
        "options": {
            "A": "Redis",
            "B": "Kafka",
            "C": "PostgreSQL",
            "D": "gRPC"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:46"
    },
    {
        "question_number": 14,
        "question_content": "Which pattern is useful when a client needs to contact multiple services in one logical operation?",
        "options": {
            "A": "Service Mesh",
            "B": "API Gateway",
            "C": "Saga",
            "D": "Backend for Frontend"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:47"
    },
    {
        "question_number": 15,
        "question_content": "What does the Domain Event pattern facilitate?",
        "options": {
            "A": "Immediate data consistency",
            "B": "Long-running transactions",
            "C": "Loose coupling between services",
            "D": "UI responsiveness"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:48"
    },
    {
        "question_number": 16,
        "question_content": "What is the heart of an enterprise application according to Chapter 5?",
        "options": {
            "A": "The user interface",
            "B": "The deployment strategy",
            "C": "The business logic",
            "D": "The database schema"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:49"
    },
    {
        "question_number": 17,
        "question_content": "Which protocol is commonly used in microservices for communication?",
        "options": {
            "A": "SMTP",
            "B": "HTTP/REST",
            "C": "FTP",
            "D": "POP3"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:52"
    },
    {
        "question_number": 18,
        "question_content": "What does 'bounded context' refer to in microservice design?",
        "options": {
            "A": "A shared model between services",
            "B": "A service being deployed on multiple servers",
            "C": "A clear boundary around a specific business capability",
            "D": "Use of shared data schemas"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:53"
    },
    {
        "question_number": 19,
        "question_content": "What does a 'blue/green deployment' typically involve?",
        "options": {
            "A": "Running two data centers simultaneously",
            "B": "Switching traffic from old to new service instance",
            "C": "Synchronizing databases",
            "D": "Cloning the source code repository"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:54"
    },
    {
        "question_number": 20,
        "question_content": "To avoid configuration drift, what strategy is recommended?",
        "options": {
            "A": "Manual editing of each instance",
            "B": "Centralized logging",
            "C": "Infrastructure as Code",
            "D": "Increasing replicas"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:55"
    },
    {
        "question_number": 21,
        "question_content": "Which combination often supports scalable and flexible microservice systems?",
        "options": {
            "A": "SOAP and Eventual Consistency",
            "B": "REST and Event Replay",
            "C": "CQRS and Event Sourcing",
            "D": "CRUD and Load Balancing"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:57"
    },
    {
        "question_number": 22,
        "question_content": "Which technique helps manage long event streams in event sourcing?",
        "options": {
            "A": "Snapshots",
            "B": "Polling services",
            "C": "Caching mechanisms",
            "D": "Schema migration"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:58"
    },
    {
        "question_number": 23,
        "question_content": "What does an API gateway typically NOT handle?",
        "options": {
            "A": "Routing requests",
            "B": "Aggregating responses",
            "C": "User authentication",
            "D": "Compiling source code"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:33:59"
    },
    {
        "question_number": 24,
        "question_content": "Which of the following best describes GraphQL in the context of API gateways?",
        "options": {
            "A": "It only works for REST services",
            "B": "It is a messaging queue",
            "C": "It simplifies API composition by allowing clients to specify data needs",
            "D": "It replaces microservices"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:00"
    },
    {
        "question_number": 25,
        "question_content": "What is a common drawback of tightly coupled service communication?",
        "options": {
            "A": "Improved fault tolerance",
            "B": "Increased system observability",
            "C": "Reduced deployment flexibility",
            "D": "Faster communication"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:01"
    },
    {
        "question_number": 26,
        "question_content": "What technique helps handle messages that cannot be processed immediately?",
        "options": {
            "A": "Web scraping",
            "B": "Dead letter queue",
            "C": "Session caching",
            "D": "Rate limiting"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:03"
    },
    {
        "question_number": 27,
        "question_content": "What is the primary responsibility of the Query side in a microservices architecture?",
        "options": {
            "A": "To handle incoming commands and update data",
            "B": "To listen for domain events and update read models",
            "C": "To manage authentication and authorization",
            "D": "To generate API documentation"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:05"
    },
    {
        "question_number": 28,
        "question_content": "What is the trade-off of supporting strong consistency in query-side models?",
        "options": {
            "A": "Reduced performance and higher complexity",
            "B": "Increased developer productivity",
            "C": "Improved monitoring tools",
            "D": "Support for cross-cutting concerns"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:06"
    },
    {
        "question_number": 29,
        "question_content": "What is the primary challenge when managing transactions in a microservices architecture?",
        "options": {
            "A": "Lack of performance",
            "B": "Lack of scalability",
            "C": "Distributed nature of services",
            "D": "Too many logs"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:07"
    },
    {
        "question_number": 30,
        "question_content": "What is the key difference between monolithic and microservices-based transaction handling?",
        "options": {
            "A": "Monoliths handle distributed state",
            "B": "Microservices use centralized databases",
            "C": "Microservices involve distributed transaction context",
            "D": "Monoliths cannot handle ACID properties"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:09"
    },
    {
        "question_number": 31,
        "question_content": "Trường hợp sử dụng phổ biến nhất cho REST là gì?",
        "options": {
            "A": "Tạo ứng dụng web",
            "B": "Tạo ứng dụng di động",
            "C": "Tạo ứng dụng trên máy tính để bàn",
            "D": "Tạo ứng dụng IoT"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:10"
    },
    {
        "question_number": 32,
        "question_content": "Dịch vụ dựa trên SOAP hay REST tốt hơn cho ứng dụng đơn giản?",
        "options": {
            "A": "REST",
            "B": "SOAP",
            "C": "Tùy thuộc vào ứng dụng",
            "D": "SOAP và REST đều có thể được sử dụng cho ứng dụng đơn giản"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:11"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rĐường dẫn của phương thức getOrders() là gì?",
        "options": {
            "A": "/orders",
            "B": "/order",
            "C": "/orders/{id}",
            "D": "/orders/create"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:12"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rHTTP Request nào sẽ được chuyển cho updateOrder () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /orders",
            "B": "Phương thức PUT, đường dẫn /orders/15",
            "C": "Phương thức GET, đường dẫn /orders/15",
            "D": "Phương thức GET, đường dẫn /orders"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:14"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho getProducts () ?",
        "options": {
            "A": "Phương thức POST, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:16"
    },
    {
        "question_number": 36,
        "question_content": "Trong WSDL, phần Input của một phương thức được định nghĩa để làm gì?",
        "options": {
            "A": "Chứa các tham số đầu vào của phương thức",
            "B": "Chứa các tham số trả về của phương thức",
            "C": "Chứa các tài nguyên của web service",
            "D": "Chứa các thông tin bổ sung về message"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:17"
    },
    {
        "question_number": 37,
        "question_content": "Phần tử nào trong WSDL mô tả định dạng dữ liệu của một phương thức?",
        "options": {
            "A": "input",
            "B": "output",
            "C": "types",
            "D": "operation"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:18"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThực thi dịch vụ tên gì ?",
        "options": {
            "A": "AccountRegistrationService",
            "B": "AccountRegistration",
            "C": "AccountRegistrationPortType",
            "D": "AccountRegistrationBinding"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:20"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rĐâu không phải là một phần tử đơn ?",
        "options": {
            "A": "CustomerName",
            "B": "CustomerId",
            "C": "Amount",
            "D": "Customer"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:21"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThực thi dịch vụ tên gì",
        "options": {
            "A": "CustomerPortType",
            "B": "OnlineChargingBinding",
            "C": "OnlineChargingPortType",
            "D": "OnlineChargingService"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN608",
        "crawled_at": "2025-06-12 21:34:23"
    }
]