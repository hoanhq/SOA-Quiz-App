[
    {
        "question_number": 1,
        "question_content": "Trong SOA, dịch vụ có thể được triển khai như thế nào?",
        "options": {
            "A": "Một ứng dụng độc lập",
            "B": "Một module của ứng dụng",
            "C": "Một phần của hệ thống",
            "D": "Tất cả các phương án trên"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:10"
    },
    {
        "question_number": 2,
        "question_content": "Độ mịn dịch vụ ảnh hưởng đến điều gì trong dịch vụ web?",
        "options": {
            "A": "Khả năng tái sử dụng và tính linh hoạt của dịch vụ",
            "B": "Khả năng mở rộng và tương tác giữa các dịch vụ",
            "C": "Khả năng hiệu suất và bảo mật của dịch vụ",
            "D": "Khả năng kết nối và tương tác với người dùng"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:11"
    },
    {
        "question_number": 3,
        "question_content": "Vai trò nào trong SOA lưu trữ thông tin về các dịch vụ có sẵn và cung cấp thông tin này cho người tiêu dùng dịch vụ?",
        "options": {
            "A": "Service Provider",
            "B": "Service Consumer",
            "C": "Service Registry",
            "D": "Service Requestor"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:12"
    },
    {
        "question_number": 4,
        "question_content": "Dịch vụ thực thể là gì?",
        "options": {
            "A": "Dịch vụ không thể tái sử dụng với bối cảnh chức năng khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "B": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "C": "Dịch vụ không thể tái sử dụng với bối cảnh chức năng bất khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "D": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng bất khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:13"
    },
    {
        "question_number": 5,
        "question_content": "Một dịch vụ khi nào được coi là bất khả tri?",
        "options": {
            "A": "Chứa logic có khả năng tái sử dụng bởi nhiều quy trình nghiệp vụ",
            "B": "Chức logic không thể tái sử dụng nhưng có thể có tiềm năng tái sử dụng trong giải pháp",
            "C": "Khi nó có khả năng triển khai độc lập",
            "D": "Chức các logic không thể tái sử dụng bởi các quy trình nghiệp vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:13"
    },
    {
        "question_number": 6,
        "question_content": "Vì sao khi thiết kế kiến trúc dịch vụ cần lấy doanh nghiệp làm trung tâm?",
        "options": {
            "A": "Để dùng chung các service",
            "B": "Tránh nguy cơ tạo ra các silo mới trong doanh nghiệp",
            "C": "Trách các dịch vụ xa rời mục đích kinh doanh",
            "D": "Tuổi thọ kiến trúc thấp"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:14"
    },
    {
        "question_number": 7,
        "question_content": "Trong quy trình mô hình hóa Web service, việc soát lại ứng viên tổ hợp dịch vụ có thể thêm những layer nào vào ứng viên tổ hợp dịch vụ?",
        "options": {
            "A": "Task service và microservice",
            "B": "Microservice và entity service",
            "C": "Microservice và utility service",
            "D": "Entity service và utility service"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:15"
    },
    {
        "question_number": 8,
        "question_content": "Trong quá trình xác định các tương tác dịch vụ, các tương tác được xác định dựa trên điều gì?",
        "options": {
            "A": "Yêu cầu về tài nguyên và phương thức",
            "B": "Các tình huống thành công và thất bại có thể xảy ra trong luồng công việc của quy trình",
            "C": "Khả năng mở rộng và triển khai",
            "D": "Yêu cầu về hiệu suất và độ tin cậy"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:16"
    },
    {
        "question_number": 9,
        "question_content": "Khi nào một non-agnostic logic có thể được đóng gói thành một microservice riêng biệt?",
        "options": {
            "A": "Khi logic hành động yêu cầu tăng cường tính tự chủ",
            "B": "Khi logic hành động yêu cầu ít tài nguyên",
            "C": "Khi logic hành động không có yêu cầu đặc biệt về hiệu suất",
            "D": "Khi logic hành động không cần phiên bản hóa và triển khai riêng biệt"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:18"
    },
    {
        "question_number": 10,
        "question_content": "Sử dụng Namespaces trong WSDL giúp thực hiện điều gì?",
        "options": {
            "A": "Tạo tài liệu WSDL tổng thể",
            "B": "Tạo các quy tắc định dạng cho tài liệu WSDL",
            "C": "Tạo tên duy nhất cho các phần tử trong WSDL",
            "D": "Xác định phạm vi của dịch vụ web"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:19"
    },
    {
        "question_number": 11,
        "question_content": "Tại sao xây dựng một microservice dưới dạng dịch vụ Web dựa trên SOAP không phổ biến?",
        "options": {
            "A": "Xử lý liên quan đến nhắn tin SOAP và ngăn xếp công nghệ nhiều lớp của dịch vụ Web và môi trường WS-* có thể gây ra độ trễ",
            "B": "Microservices đòi hỏi một công nghệ xếp chồng đa tầng phức tạp",
            "C": "Microservices dựa trên REST cung cấp hiệu suất tốt hơn",
            "D": "Dịch vụ Web dựa trên SOAP đã lỗi thời"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:20"
    },
    {
        "question_number": 12,
        "question_content": "Thường thì mức độ chi tiết của dịch vụ được xác định khi nào?",
        "options": {
            "A": "Trong giai đoạn phân tích và mô hình hóa",
            "B": "Trong giai đoạn thiết kế hợp đồng dịch vụ",
            "C": "Trong giai đoạn kiểm tra hiệu năng",
            "D": "Trong giai đoạn triển khai dịch vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:22"
    },
    {
        "question_number": 13,
        "question_content": "Which technology is often used for real-time streaming between services?",
        "options": {
            "A": "Redis",
            "B": "Kafka",
            "C": "PostgreSQL",
            "D": "gRPC"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:23"
    },
    {
        "question_number": 14,
        "question_content": "Which HTTP status code often indicates a downstream service is unavailable?",
        "options": {
            "A": "200",
            "B": "404",
            "C": "503",
            "D": "301"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:24"
    },
    {
        "question_number": 15,
        "question_content": "Which object-oriented design principle is encouraged for complex business logic?",
        "options": {
            "A": "Encapsulation",
            "B": "Inheritance",
            "C": "Applying object-oriented design principles",
            "D": "Polymorphism"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:25"
    },
    {
        "question_number": 16,
        "question_content": "Which design pattern is commonly combined with aggregates?",
        "options": {
            "A": "Saga pattern",
            "B": "Factory pattern",
            "C": "Builder pattern",
            "D": "Prototype pattern"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:26"
    },
    {
        "question_number": 17,
        "question_content": "How can a service publish domain events to other services?",
        "options": {
            "A": "By using a shared memory object",
            "B": "Through REST polling",
            "C": "Via event-driven messaging",
            "D": "Through FTP updates"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:27"
    },
    {
        "question_number": 18,
        "question_content": "Which aspect of microservices allows polyglot persistence?",
        "options": {
            "A": "Using single service logic",
            "B": "Each service owning its own data store",
            "C": "Monolithic design",
            "D": "Service orchestration"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:28"
    },
    {
        "question_number": 19,
        "question_content": "Which of the following tools is commonly used for container orchestration?",
        "options": {
            "A": "Docker",
            "B": "Consul",
            "C": "Kubernetes",
            "D": "Helm"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:29"
    },
    {
        "question_number": 20,
        "question_content": "In a microservices environment, what does 'immutable infrastructure' imply?",
        "options": {
            "A": "Infrastructure cannot be resized",
            "B": "Infrastructure is updated in-place",
            "C": "Infrastructure is replaced rather than changed",
            "D": "Infrastructure is read-only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:30"
    },
    {
        "question_number": 21,
        "question_content": "What is the primary principle behind event sourcing?",
        "options": {
            "A": "Storing only the current state of data",
            "B": "Storing every change to application state as a sequence of events",
            "C": "Storing both state and behavior in the database",
            "D": "Using events for communication only"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:31"
    },
    {
        "question_number": 22,
        "question_content": "Which combination often supports scalable and flexible microservice systems?",
        "options": {
            "A": "SOAP and Eventual Consistency",
            "B": "REST and Event Replay",
            "C": "CQRS and Event Sourcing",
            "D": "CRUD and Load Balancing"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:33"
    },
    {
        "question_number": 23,
        "question_content": "Which of the following is NOT typically a client of the FTGO application’s API?",
        "options": {
            "A": "Browser-based JavaScript",
            "B": "Mobile applications",
            "C": "Third-party partners",
            "D": "Hardware routers"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:34"
    },
    {
        "question_number": 24,
        "question_content": "Which of the following best describes GraphQL in the context of API gateways?",
        "options": {
            "A": "It only works for REST services",
            "B": "It is a messaging queue",
            "C": "It simplifies API composition by allowing clients to specify data needs",
            "D": "It replaces microservices"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:35"
    },
    {
        "question_number": 25,
        "question_content": "Which technology is often used for real-time streaming between services?",
        "options": {
            "A": "Redis",
            "B": "Kafka",
            "C": "PostgreSQL",
            "D": "gRPC"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:36"
    },
    {
        "question_number": 26,
        "question_content": "Which service pattern supports observability in distributed systems?",
        "options": {
            "A": "Orchestration",
            "B": "Tracing",
            "C": "Logging only",
            "D": "Database sharding"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:37"
    },
    {
        "question_number": 27,
        "question_content": "How can query models support different consumer needs in microservices?",
        "options": {
            "A": "By providing a single generic model",
            "B": "By customizing views per use case or API endpoint",
            "C": "By including all write data in the query side",
            "D": "By storing commands and queries in one schema"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:38"
    },
    {
        "question_number": 28,
        "question_content": "What is a major challenge when implementing denormalized read models?",
        "options": {
            "A": "They slow down read operations",
            "B": "They make microservices loosely coupled",
            "C": "They require syncing across many events and potential duplication",
            "D": "They increase security"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:40"
    },
    {
        "question_number": 29,
        "question_content": "How should services communicate to ensure eventual consistency in transactions?",
        "options": {
            "A": "Using a shared memory",
            "B": "Using REST with immediate consistency",
            "C": "Using asynchronous messaging",
            "D": "Using database locks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:41"
    },
    {
        "question_number": 30,
        "question_content": "You are designing a distributed order process, which pattern would allow you to manage failures gracefully?",
        "options": {
            "A": "Two-Phase Commit",
            "B": "Synchronous RPC",
            "C": "Saga with compensating transactions",
            "D": "Retry with timeout"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:43"
    },
    {
        "question_number": 31,
        "question_content": "Dịch vụ web RESTful có hợp đồng không?",
        "options": {
            "A": "Có",
            "B": "Không",
            "C": "Đôi khi",
            "D": "Tùy thuộc"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:44"
    },
    {
        "question_number": 32,
        "question_content": "Dịch vụ dựa trên SOAP hay REST có kiến trúc phức tạp hơn?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào cách triển khai cụ thể",
            "D": "SOAP và REST có cùng độ phức tạp"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:45"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rĐường dẫn của phương thức getOrders() là gì?",
        "options": {
            "A": "/orders",
            "B": "/order",
            "C": "/orders/{id}",
            "D": "/orders/create"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:47"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho getProducts () ?",
        "options": {
            "A": "Phương thức POST, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:48"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rPhương thức HTTP cho phương thức deleteProduct() là gì?",
        "options": {
            "A": "GET",
            "B": "POST",
            "C": "PUT",
            "D": "DELETE"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:49"
    },
    {
        "question_number": 36,
        "question_content": "SOAP là gì?",
        "options": {
            "A": "Thông điệp tương tác với dịch vụ WEB",
            "B": "Ngôn ngữ đặc tả dữ liệu truyền/nhận đến/từ dịch vụ web",
            "C": "Một giao thức truyền thông dựa trên XML",
            "D": "Ngôn ngữ đặc tả giao diện dịch vụ WEB"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:51"
    },
    {
        "question_number": 37,
        "question_content": "Trong WSDL, phần SOAP Body chứa thông tin gì?",
        "options": {
            "A": "Thông tin về tài nguyên của web service",
            "B": "Phần header của message",
            "C": "Dữ liệu của message",
            "D": "Các thông tin bổ sung về message"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:52"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rĐâu không phải là một phần tử đơn ?",
        "options": {
            "A": "CustomerName",
            "B": "CustomerId",
            "C": "Amount",
            "D": "Customer"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:55"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rĐâu không phải là một phần tử phức ?",
        "options": {
            "A": "Customer",
            "B": "CustomerId",
            "C": "Charge",
            "D": "ChargeResult"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:57"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rTên của giao diện dich vụ là gì ?",
        "options": {
            "A": "CustomerPortType",
            "B": "OnlineChargingBinding",
            "C": "OnlineChargingPortType",
            "D": "OnlineChargingService"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN164",
        "crawled_at": "2025-06-12 12:51:58"
    }
]