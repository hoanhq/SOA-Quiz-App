[
    {
        "question_number": 1,
        "question_content": "Chất lượng dịch vụ (QoS) được đánh giá chính qua yếu tố nào ?",
        "options": {
            "A": "Độ mịn của dịch vụ",
            "B": "Độ tương thích của dịch vụ",
            "C": "Sự đáng tin cậy của dịch vụ",
            "D": "Sự hài lòng của khách hàng"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:17"
    },
    {
        "question_number": 2,
        "question_content": "Ví dụ nào dưới đây là 1 thuộc tính chức năng của dịch vụ web là gì?",
        "options": {
            "A": "Cung cấp khả năng tra cứu thông tin",
            "B": "Tạo ra giao diện đẹp mắt",
            "C": "Lưu trữ dữ liệu trên đám mây",
            "D": "Xây dựng mạng xã hội"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:18"
    },
    {
        "question_number": 3,
        "question_content": "Ví dụ về dịch vụ web là \"Thanh toán trực tuyến\", loại dịch vụ này thuộc mô hình liên lạc đồng bộ hay không đồng bộ?",
        "options": {
            "A": "Không đồng bộ",
            "B": "Đồng bộ",
            "C": "Cả A, B đều đúng",
            "D": "Không cái nào đúng"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:19"
    },
    {
        "question_number": 4,
        "question_content": "Điểm khác nhau giữa dịch vụ khả tri và bất khả tri?",
        "options": {
            "A": "Dịch vụ bất khả tri bắt nguồn từ các thực thể. Dịch vụ khả tri không bắt nguồn từ các thực thể",
            "B": "Dịch vụ khả tri bắt nguồn từ các thực thể. Dịch vụ bất khả tri không bắt nguồn từ các thực thể",
            "C": "Dịch vụ bất khả tri có thể được sử dụng bởi nhiều mô hình nghiệp vụ. Dịch vụ khả tri chỉ có thể sử dụng cho một mô hình nghiệp vụ nhất định",
            "D": "Dịch vụ khả tri có thể được sử dụng bởi nhiều mô hình nghiệp vụ. Dịch vụ bất khả tri chỉ có thể sử dụng cho một mô hình nghiệp vụ nhất định"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:20"
    },
    {
        "question_number": 5,
        "question_content": "Định nghĩa microservice trong kiến trúc hướng dịch vụ (SOA)?",
        "options": {
            "A": "Một dịch vụ bất khả tri thường có phạm vi chức năng nhỏ bao gồm logic với các yêu cầu xử lý và triển khai cụ thể",
            "B": "Một dịch vụ không bất khả tri thường có phạm vi chức năng nhỏ bao gồm logic với các yêu cầu xử lý và triển khai cụ thể",
            "C": "Một dịch vụ lớn được chia nhỏ thành các thành phần nhỏ hơn",
            "D": "Một dịch vụ được thiết kế để chạy trên nhiều máy chủ khác nhau"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:21"
    },
    {
        "question_number": 6,
        "question_content": "Đặc điểm nào sau đây không nằm trong các đặc trưng của mô hình SOA?",
        "options": {
            "A": "Phát triển mô hình riêng lẻ",
            "B": "Hướng mô hình kinh doanh",
            "C": "Lấy doanh nghiệp làm trung tâm",
            "D": "Nhà cung cấp trung lập"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:21"
    },
    {
        "question_number": 7,
        "question_content": "Trong quy trình mô hình hóa Web service, việc rà soát lại nhóm ứng viên capability có thể dẫn đến việc bổ sung các ứng viên nào?",
        "options": {
            "A": "Service và service capability",
            "B": "Service capability và utility",
            "C": "Service và microservice",
            "D": "Microservice và utility"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:22"
    },
    {
        "question_number": 8,
        "question_content": "Trong phân tích hướng dịch vụ, các agnostic logic trong quy trình kinh doanh là những logic như thế nào?",
        "options": {
            "A": "Có khả năng tái sử dụng lại cao trong nhiều quy trình nghiệp vụ",
            "B": "Chỉ phục vụ một quy trình nghiệp vụ cụ thể và không thể tái sử dụng trong các quy trình khác",
            "C": "Liên quan đến việc xử lý dữ liệu của các hệ thống cụ thể mà không phụ thuộc vào ngữ cảnh nghiệp vụ",
            "D": "Yêu cầu sự tùy chỉnh đặc thù cho từng quy trình nghiệp vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:23"
    },
    {
        "question_number": 9,
        "question_content": "Trong mô hình REST, tài nguyên được đại diện bởi gì?",
        "options": {
            "A": "URI (Uniform Resource Identifier)",
            "B": "URL (Uniform Resource Locator)",
            "C": "HTML (HyperText Markup Language)",
            "D": "XML (eXtensible Markup Language)"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:24"
    },
    {
        "question_number": 10,
        "question_content": "Sử dụng Namespaces trong WSDL giúp thực hiện điều gì?",
        "options": {
            "A": "Tạo tài liệu WSDL tổng thể",
            "B": "Tạo các quy tắc định dạng cho tài liệu WSDL",
            "C": "Tạo tên duy nhất cho các phần tử trong WSDL",
            "D": "Xác định phạm vi của dịch vụ web"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:25"
    },
    {
        "question_number": 11,
        "question_content": "Tại sao quá trình thiết kế Task Service thường yêu cầu ít nỗ lực hơn so với các mô hình dịch vụ khác?",
        "options": {
            "A": "Vì chúng sử dụng nhiều công nghệ tiên tiến",
            "B": "Vì chúng có nhiều nhân viên làm việc cùng lúc",
            "C": "Vì chúng chỉ yêu cầu một thao tác để khởi động một quy trình logic",
            "D": "Vì chúng không cần kiểm tra và giám sát"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:26"
    },
    {
        "question_number": 12,
        "question_content": "Điều nào sau đây là bước đầu tiên trong thiết kế hợp đồng dịch vụ web?",
        "options": {
            "A": "Xác định các cấu trúc thông điệp trong khu vực WSDL types",
            "B": "Thiết kế logic dịch vụ tương ứng",
            "C": "Xác định quy ước đặt tên cho các hoạt động",
            "D": "Định nghĩa endpoint dịch vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:26"
    },
    {
        "question_number": 13,
        "question_content": "What can be used to enable message persistence in asynchronous systems?",
        "options": {
            "A": "Load balancer",
            "B": "Service discovery",
            "C": "Message queue",
            "D": "Circuit breaker"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:27"
    },
    {
        "question_number": 14,
        "question_content": "What is the role of a message broker in microservice communication?",
        "options": {
            "A": "Transform HTTP to gRPC",
            "B": "Store configuration settings",
            "C": "Coordinate and route messages",
            "D": "Serve static content"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:28"
    },
    {
        "question_number": 15,
        "question_content": "What pattern ensures data consistency across microservices?",
        "options": {
            "A": "Domain event",
            "B": "Transaction script",
            "C": "Aggregate",
            "D": "Saga"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:29"
    },
    {
        "question_number": 16,
        "question_content": "Which event pattern supports eventual consistency in microservices?",
        "options": {
            "A": "Observer",
            "B": "Saga",
            "C": "Domain Event",
            "D": "Chain of Responsibility"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:30"
    },
    {
        "question_number": 17,
        "question_content": "What is the role of an API Gateway in microservices architecture?",
        "options": {
            "A": "To directly call databases",
            "B": "To store data",
            "C": "To provide a single entry point and route requests",
            "D": "To manage UI layout"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:31"
    },
    {
        "question_number": 18,
        "question_content": "What is a characteristic of a well-designed microservice?",
        "options": {
            "A": "High interdependency",
            "B": "Shared persistent storage",
            "C": "Encapsulation of business capabilities",
            "D": "Monolithic design"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:32"
    },
    {
        "question_number": 19,
        "question_content": "What does a 'blue/green deployment' typically involve?",
        "options": {
            "A": "Running two data centers simultaneously",
            "B": "Switching traffic from old to new service instance",
            "C": "Synchronizing databases",
            "D": "Cloning the source code repository"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:33"
    },
    {
        "question_number": 20,
        "question_content": "To avoid configuration drift, what strategy is recommended?",
        "options": {
            "A": "Manual editing of each instance",
            "B": "Centralized logging",
            "C": "Infrastructure as Code",
            "D": "Increasing replicas"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:34"
    },
    {
        "question_number": 21,
        "question_content": "Which statement is true about deleting events in event sourcing?",
        "options": {
            "A": "Events can be deleted after being processed",
            "B": "Events are immutable and typically not deleted",
            "C": "Events are deleted after each projection update",
            "D": "Events must be encrypted then deleted"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:34"
    },
    {
        "question_number": 22,
        "question_content": "Which combination often supports scalable and flexible microservice systems?",
        "options": {
            "A": "SOAP and Eventual Consistency",
            "B": "REST and Event Replay",
            "C": "CQRS and Event Sourcing",
            "D": "CRUD and Load Balancing"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:35"
    },
    {
        "question_number": 23,
        "question_content": "What does an API gateway typically NOT handle?",
        "options": {
            "A": "Routing requests",
            "B": "Aggregating responses",
            "C": "User authentication",
            "D": "Compiling source code"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:36"
    },
    {
        "question_number": 24,
        "question_content": "Which factor is NOT a common motivation for using API gateways?",
        "options": {
            "A": "Centralizing concerns like security",
            "B": "Reducing coupling between clients and services",
            "C": "Providing direct access to all service APIs",
            "D": "Simplifying response aggregation"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:37"
    },
    {
        "question_number": 25,
        "question_content": "What is a benefit of using a circuit breaker in service communication?",
        "options": {
            "A": "Enables stateful routing",
            "B": "Improves serialization speed",
            "C": "Prevents cascading failures",
            "D": "Provides data encryption"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:38"
    },
    {
        "question_number": 26,
        "question_content": "What is the main characteristic of synchronous communication between microservices?",
        "options": {
            "A": "Messages are queued before delivery",
            "B": "Requests are fire-and-forget",
            "C": "Client waits for immediate response",
            "D": "Data is transferred in batch"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:39"
    },
    {
        "question_number": 27,
        "question_content": "What is the primary responsibility of the Query side in a microservices architecture?",
        "options": {
            "A": "To handle incoming commands and update data",
            "B": "To listen for domain events and update read models",
            "C": "To manage authentication and authorization",
            "D": "To generate API documentation"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:39"
    },
    {
        "question_number": 28,
        "question_content": "How are read models typically kept up-to-date?",
        "options": {
            "A": "Through manual synchronization",
            "B": "By querying write databases",
            "C": "By consuming and handling domain events",
            "D": "Through direct API calls"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:40"
    },
    {
        "question_number": 29,
        "question_content": "Which component is NOT typically involved in saga pattern orchestration?",
        "options": {
            "A": "Saga orchestrator",
            "B": "Database lock",
            "C": "Service participant",
            "D": "Compensation logic"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:41"
    },
    {
        "question_number": 30,
        "question_content": "How should services communicate to ensure eventual consistency in transactions?",
        "options": {
            "A": "Using a shared memory",
            "B": "Using REST with immediate consistency",
            "C": "Using asynchronous messaging",
            "D": "Using database locks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:42"
    },
    {
        "question_number": 31,
        "question_content": "Nếu không cài đặt gì thêm, SOAP hay REST có thể sử dụng máy chủ proxy?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Cả SOAP và REST đều có thể sử dụng máy chủ proxy",
            "D": "Không SOAP và REST đều không thể sử dụng máy chủ proxy"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:43"
    },
    {
        "question_number": 32,
        "question_content": "Trường hợp sử dụng phổ biến nhất cho REST là gì?",
        "options": {
            "A": "Tạo ứng dụng web",
            "B": "Tạo ứng dụng di động",
            "C": "Tạo ứng dụng trên máy tính để bàn",
            "D": "Tạo ứng dụng IoT"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:44"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho updateProduct () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products/15",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:45"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rPhương thức HTTP nào được sử dụng cho getOrders() ?",
        "options": {
            "A": "GET",
            "B": "POST",
            "C": "PUT",
            "D": "DELETE"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:45"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rMã trạng thái HTTP của phản hồi từ phương thức getOrders() nếu không có đơn hàng?",
        "options": {
            "A": "200",
            "B": "201",
            "C": "204",
            "D": "404"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:46"
    },
    {
        "question_number": 36,
        "question_content": "SOAP sử dụng định dạng nào để định nghĩa kiểu dữ liệu?",
        "options": {
            "A": "XML Schema",
            "B": "HTML",
            "C": "JSON",
            "D": "CSV"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:47"
    },
    {
        "question_number": 37,
        "question_content": "Phần tử nào trong SOAP chứa dữ liệu truyền đi?",
        "options": {
            "A": "Body",
            "B": "Header",
            "C": "Envelope",
            "D": "Data"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:48"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rTên của giao diện dich vụ là gì ?",
        "options": {
            "A": "RegisterAccount",
            "B": "RegisterAccountResponse",
            "C": "AccountRegistrationPortType",
            "D": "AccountRegistrationBinding"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:49"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThực thi dịch vụ tên gì ?",
        "options": {
            "A": "AccountRegistrationService",
            "B": "AccountRegistration",
            "C": "AccountRegistrationPortType",
            "D": "AccountRegistrationBinding"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:50"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông tin nào được dịch vụ web trả về?",
        "options": {
            "A": "Tên người dùng",
            "B": "Mật khẩu",
            "C": "Thành công hay không",
            "D": "Tên người dùng và mật khẩu"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN380",
        "crawled_at": "2025-06-12 17:13:50"
    }
]