[
    {
        "question_number": 1,
        "question_content": "Thuộc tính phi chức năng của dịch vụ web bao gồm các yếu tố nào sau đây?",
        "options": {
            "A": "Khả năng tích hợp, mở rộng",
            "B": "Giao diện người dùng, trải nghiệm người dùng",
            "C": "Quản lý dữ liệu, phân quyền truy cập",
            "D": "Bảo mật, hiệu suất, sự tin cậy"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:28:55"
    },
    {
        "question_number": 2,
        "question_content": "Một dịch vụ web đơn giản có thể triển khai dưới dạng dịch vụ web phức tạp hay không",
        "options": {
            "A": "Không",
            "B": "Có",
            "C": "Tuy thuộc vào công nghệ triển khai",
            "D": "Tùy thuộc vào giao thức triển khai"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:28:56"
    },
    {
        "question_number": 3,
        "question_content": "Trong việc xây dựng một dịch vụ web bán hàng, việc áp dụng độ mịn như thế nào có thể giúp tăng khả năng mở rộng của hệ thống?",
        "options": {
            "A": "Áp dụng độ mịn để chia nhỏ các chức năng như quản lý sản phẩm, quản lý đơn hàng, thanh toán",
            "B": "Áp dụng độ mịn để gộp các chức năng bán hàng thành một dịch vụ duy nhất",
            "C": "Áp dụng độ mịn không ảnh hưởng đến khả năng mở rộng của hệ thống",
            "D": "Áp dụng độ mịn chỉ cần xác định các API cho việc bán hàng"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:28:57"
    },
    {
        "question_number": 4,
        "question_content": "Các giai đoạn đầu tiên khi phân tích kho dịch vụ là gì?",
        "options": {
            "A": "Define Technology Architecture",
            "B": "Define Enterprise Business Models",
            "C": "Perform Service-Oriented Analysis",
            "D": "Define Service Inventory Blueprint"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:28:58"
    },
    {
        "question_number": 5,
        "question_content": "Vì sao đặc điểm hướng mô hình kinh doanh của SOA lại giúp tăng giá trị và tuổi thọ của kiến trúc?",
        "options": {
            "A": "Giữ đồng bộ liên tục với cách doanh nghiệp phát triển theo thời gian",
            "B": "Làm mô hình kinh doanh phát triển nhanh",
            "C": "Hỗ trợ quá trình chuẩn hóa kinh doanh",
            "D": "Phát triển theo thời gian"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:28:59"
    },
    {
        "question_number": 6,
        "question_content": "Dịch vụ được xem là \"sẵn sàng để ghép nối\" khi nó có tính chất gì?",
        "options": {
            "A": "Tính tương tác",
            "B": "Tính tương thích",
            "C": "Tính tương phản",
            "D": "Tính tương đồng"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:28:59"
    },
    {
        "question_number": 7,
        "question_content": "Quá trình mô hình hóa dịch vụ có cần phải đảm bảo tính linh hoạt của hợp đồng dịch vụ?",
        "options": {
            "A": "Có, để dễ dàng cập nhật và thay đổi trong quá trình phát triển",
            "B": "Không, để đảm bảo tính nhất quán và ổn định của dịch vụ",
            "C": "Có, để giảm thiểu sự phức tạp của dịch vụ",
            "D": "Không, để giảm thiểu rủi ro và lỗi trong quá trình triển khai"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:00"
    },
    {
        "question_number": 8,
        "question_content": "Trong kiến trúc hướng dịch vụ, REST (Representational State Transfer) là gì?",
        "options": {
            "A": "Một giao thức truyền tải dữ liệu giữa các dịch vụ",
            "B": "Một mô hình kiến trúc phục vụ cho việc truyền tải các tài nguyên qua giao thức HTTP",
            "C": "Một phương pháp tạo ra các dịch vụ mạng phân tán",
            "D": "Một công nghệ dựa trên SOAP để tạo ra các dịch vụ web"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:01"
    },
    {
        "question_number": 9,
        "question_content": "Sau khi phân tách quy trình kinh doanh thành các hành động chi tiết, những loại hành động nào không phù hợp cho các bước mô hình hóa dịch vụ REST tiếp theo và nên được loại bỏ?",
        "options": {
            "A": "Đảm bảo tính nhất quán của dữ liệu",
            "B": "Tăng cường tính bảo mật của hệ thống",
            "C": "Cung cấp một lớp trừu tượng cho các thực thể kinh doanh",
            "D": "Tối ưu hóa hiệu suất của hệ thống"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:02"
    },
    {
        "question_number": 10,
        "question_content": "RPC Style trong SOAP tập trung vào gì?",
        "options": {
            "A": "Trao đổi tài liệu XML hoàn chỉnh",
            "B": "Gọi các hàm từ xa với các tham số",
            "C": "Gửi và nhận email",
            "D": "Quản lý file hệ thống"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:03"
    },
    {
        "question_number": 11,
        "question_content": "Việc tạo các sơ đồ XML riêng cho từng thành phần dịch vụ giúp đạt được điều gì?",
        "options": {
            "A": "Tăng tính độc lập và khả năng tái sử dụng của từng thành phần dịch vụ",
            "B": "Giảm thời gian triển khai dịch vụ",
            "C": "Đảm bảo rằng tất cả các dịch vụ đều tuân theo cùng một chuẩn",
            "D": "Tăng hiệu suất xử lý của dịch vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:04"
    },
    {
        "question_number": 12,
        "question_content": "Namespaces cần được quản lý cẩn thận để làm gì?",
        "options": {
            "A": "Tránh xung đột",
            "B": "Tăng tốc độ xử lý",
            "C": "Giảm chi phí phát triển",
            "D": "Tăng tính bảo mật"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:04"
    },
    {
        "question_number": 13,
        "question_content": "Which of the following is a primary reason for using asynchronous communication in microservices?",
        "options": {
            "A": "To reduce latency in request handling",
            "B": "To simplify service discovery",
            "C": "To decouple services for better scalability",
            "D": "To enforce strict request-response patterns"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:05"
    },
    {
        "question_number": 14,
        "question_content": "Which pattern is useful when a client needs to contact multiple services in one logical operation?",
        "options": {
            "A": "Service Mesh",
            "B": "API Gateway",
            "C": "Saga",
            "D": "Backend for Frontend"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:09"
    },
    {
        "question_number": 15,
        "question_content": "What principle helps isolate changes in business logic?",
        "options": {
            "A": "Modularization",
            "B": "Domain-driven design",
            "C": "Encapsulation",
            "D": "Continuous deployment"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:11"
    },
    {
        "question_number": 16,
        "question_content": "Which event pattern supports eventual consistency in microservices?",
        "options": {
            "A": "Observer",
            "B": "Saga",
            "C": "Domain Event",
            "D": "Chain of Responsibility"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:13"
    },
    {
        "question_number": 17,
        "question_content": "What is a benefit of decentralized governance in microservices?",
        "options": {
            "A": "Uniform technology stack",
            "B": "Freedom to choose suitable tools per service",
            "C": "No need for service boundaries",
            "D": "Eliminating testing requirements"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:15"
    },
    {
        "question_number": 18,
        "question_content": "What is a common challenge in microservices data consistency?",
        "options": {
            "A": "High query speed",
            "B": "Join queries",
            "C": "Distributed transactions",
            "D": "Using MongoDB"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:16"
    },
    {
        "question_number": 19,
        "question_content": "To avoid configuration drift, what strategy is recommended?",
        "options": {
            "A": "Manual editing of each instance",
            "B": "Centralized logging",
            "C": "Infrastructure as Code",
            "D": "Increasing replicas"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:18"
    },
    {
        "question_number": 20,
        "question_content": "In a microservices environment, what does 'immutable infrastructure' imply?",
        "options": {
            "A": "Infrastructure cannot be resized",
            "B": "Infrastructure is updated in-place",
            "C": "Infrastructure is replaced rather than changed",
            "D": "Infrastructure is read-only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:20"
    },
    {
        "question_number": 21,
        "question_content": "Which combination often supports scalable and flexible microservice systems?",
        "options": {
            "A": "SOAP and Eventual Consistency",
            "B": "REST and Event Replay",
            "C": "CQRS and Event Sourcing",
            "D": "CRUD and Load Balancing"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:22"
    },
    {
        "question_number": 22,
        "question_content": "Why is immutability important in event sourcing?",
        "options": {
            "A": "It reduces memory consumption",
            "B": "It avoids concurrency issues and ensures auditability",
            "C": "It allows event deletion when necessary",
            "D": "It simplifies UI rendering"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:24"
    },
    {
        "question_number": 23,
        "question_content": "Which factor is NOT a common motivation for using API gateways?",
        "options": {
            "A": "Centralizing concerns like security",
            "B": "Reducing coupling between clients and services",
            "C": "Providing direct access to all service APIs",
            "D": "Simplifying response aggregation"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:26"
    },
    {
        "question_number": 24,
        "question_content": "Which type of network connection is generally available to clients within the firewall?",
        "options": {
            "A": "Bluetooth",
            "B": "LAN",
            "C": "Mobile 5G",
            "D": "Satellite"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:28"
    },
    {
        "question_number": 25,
        "question_content": "Why is idempotency important in asynchronous communication?",
        "options": {
            "A": "To increase bandwidth",
            "B": "To reduce latency",
            "C": "To ensure reliable retries",
            "D": "To optimize caching"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:30"
    },
    {
        "question_number": 26,
        "question_content": "Which pattern coordinates transactions that span across multiple services?",
        "options": {
            "A": "Service Mesh",
            "B": "Circuit Breaker",
            "C": "Saga",
            "D": "Webhooks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:32"
    },
    {
        "question_number": 27,
        "question_content": "In a CQRS system, how should you resolve inconsistencies in the query model caused by event processing delays?",
        "options": {
            "A": "By retrying failed events and implementing compensating mechanisms",
            "B": "By switching to synchronous write-read",
            "C": "By ignoring the delays",
            "D": "By updating the read model manually"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:34"
    },
    {
        "question_number": 28,
        "question_content": "Which of the following best describes eventual consistency in a query model?",
        "options": {
            "A": "Read and write operations are immediately consistent",
            "B": "Data is written once and never changed",
            "C": "Read models may lag behind write models due to asynchronous updates",
            "D": "All services write to the same database"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:36"
    },
    {
        "question_number": 29,
        "question_content": "How should services communicate to ensure eventual consistency in transactions?",
        "options": {
            "A": "Using a shared memory",
            "B": "Using REST with immediate consistency",
            "C": "Using asynchronous messaging",
            "D": "Using database locks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:37"
    },
    {
        "question_number": 30,
        "question_content": "In an e-commerce checkout using saga, if the payment step fails, what should happen?",
        "options": {
            "A": "Notify admin only",
            "B": "Compensate previous steps like canceling order and restocking",
            "C": "Retry indefinitely",
            "D": "Send error log"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:38"
    },
    {
        "question_number": 31,
        "question_content": "Chú thích nào thường được sử dụng để chỉ định đường dẫn cho dịch vụ web?",
        "options": {
            "A": "Chú thích @Path",
            "B": "Chú thích @RestController",
            "C": "Chú thích @RequestMapping",
            "D": "Chú thích @Service"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:40"
    },
    {
        "question_number": 32,
        "question_content": "Dịch vụ web RESTful có hợp đồng không?",
        "options": {
            "A": "Có",
            "B": "Không",
            "C": "Đôi khi",
            "D": "Tùy thuộc"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:41"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho getProducts () ?",
        "options": {
            "A": "Phương thức POST, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:42"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rPhương thức HTTP cho phương thức updateProduct() là gì?",
        "options": {
            "A": "GET",
            "B": "POST",
            "C": "PUT",
            "D": "DELETE"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:44"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rĐường dẫn của phương thức createOrder() là gì?",
        "options": {
            "A": "/orders",
            "B": "/order",
            "C": "/orders/{id}",
            "D": "/orders/create"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:45"
    },
    {
        "question_number": 36,
        "question_content": "SOAP message bao gồm các phần nào?",
        "options": {
            "A": "Header và Navigation",
            "B": "Header và Footer",
            "C": "Header và Sidebar",
            "D": "Header và Body"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:46"
    },
    {
        "question_number": 37,
        "question_content": "Trong WSDL, một message có thể chứa các kiểu dữ liệu nào?",
        "options": {
            "A": "Dữ liệu nguyên thủy",
            "B": "Complex Type",
            "C": "Array Type",
            "D": "Cả A và B"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:47"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rDịch vụ web tên gì?",
        "options": {
            "A": "CustomerPortType",
            "B": "OnlineChargingBinding",
            "C": "Customer",
            "D": "OnlineChargingService"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:49"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rTên của giao diện dich vụ là gì ?",
        "options": {
            "A": "RegisterAccount",
            "B": "RegisterAccountResponse",
            "C": "AccountRegistrationPortType",
            "D": "AccountRegistrationBinding"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:50"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThực thi dịch vụ tên gì ?",
        "options": {
            "A": "AccountRegistrationService",
            "B": "AccountRegistration",
            "C": "AccountRegistrationPortType",
            "D": "AccountRegistrationBinding"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN475",
        "crawled_at": "2025-06-12 18:29:52"
    }
]