[
    {
        "question_number": 2,
        "question_content": "Chất lượng dịch vụ (QoS) được đánh giá chính qua yếu tố nào ?",
        "options": {
            "A": "Độ mịn của dịch vụ",
            "B": "Độ tương thích của dịch vụ",
            "C": "Sự đáng tin cậy của dịch vụ",
            "D": "Sự hài lòng của khách hàng"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:17"
    },
    {
        "question_number": 12,
        "question_content": "Mức độ chi tiết năng lực dịch vụ (Capability Granularity) được đo bằng gì?",
        "options": {
            "A": "Mức độ chi tiết của logic xác thực",
            "B": "Phạm vi chức năng của khả năng dịch vụ",
            "C": "Số lượng dữ liệu được xử lý",
            "D": "Tất cả đều đúng"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:19"
    },
    {
        "question_number": 5,
        "question_content": "Loại SOA nào được sử dụng phổ biến?",
        "options": {
            "A": "Service Composition",
            "B": "Service Inventory",
            "C": "Service-Oriented Enterprise",
            "D": "Tất cả các loại SOA kể trên"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:21"
    },
    {
        "question_number": 16,
        "question_content": "What does the transaction script pattern typically use?",
        "options": {
            "A": "Object references",
            "B": "Flat procedures",
            "C": "Event-driven architecture",
            "D": "Command-query separation"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:23"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rĐâu không phải là một phần tử đơn ?",
        "options": {
            "A": "success",
            "B": "username",
            "C": "password",
            "D": "Account"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:28"
    },
    {
        "question_number": 14,
        "question_content": "What is the role of a message broker in microservice communication?",
        "options": {
            "A": "Transform HTTP to gRPC",
            "B": "Store configuration settings",
            "C": "Coordinate and route messages",
            "D": "Serve static content"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:32"
    },
    {
        "question_number": 1,
        "question_content": "Một giao diện dịch vụ có thể có bao nhiêu thực thi dịch vụ",
        "options": {
            "A": "Mỗi giao diện dịch vụ chỉ được phép có duy nhất 1 thực thi",
            "B": "Số lượng giao diện dịch vụ không vượt quá số lượng giao thức triển khai",
            "C": "Số lượng giao diện dịch vụ không vượt quá số lượng endpoint triển khai",
            "D": "Mỗi giao diện có thể có nhiều thực thi"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:33"
    },
    {
        "question_number": 21,
        "question_content": "Which combination often supports scalable and flexible microservice systems?",
        "options": {
            "A": "SOAP and Eventual Consistency",
            "B": "REST and Event Replay",
            "C": "CQRS and Event Sourcing",
            "D": "CRUD and Load Balancing"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:36"
    },
    {
        "question_number": 10,
        "question_content": "Tại sao việc xác định mức độ chi tiết dịch vụ (Service Granularity) quan trọng trong quá trình thiết kế?",
        "options": {
            "A": "Quyết định mức độ chi tiết của logic xác thực",
            "B": "Xác định phạm vi chức năng của dịch vụ",
            "C": "Ảnh hưởng đến mô hình hóa và thiết kế vật lý của hợp đồng dịch vụ",
            "D": "Tất cả đều đúng"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:41"
    },
    {
        "question_number": 19,
        "question_content": "What challenge is commonly associated with deploying multiple microservices simultaneously?",
        "options": {
            "A": "Slow startup time",
            "B": "Increased service discovery traffic",
            "C": "Deployment sequencing and coordination",
            "D": "Lack of logging"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:45"
    },
    {
        "question_number": 6,
        "question_content": "Một trong những đặc điểm cơ bản phân biệt SOA/kiến trúc công nghệ hướng dịch vụ với các dạng kiến trúc phân tán khác là gì?",
        "options": {
            "A": "Tính tương thích (Compatibility)",
            "B": "Tính linh hoạt (Flexibility)",
            "C": "Tính tập trung vào thành phần (Component-centric)",
            "D": "Tính phân tán (Decentralization)"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:48"
    },
    {
        "question_number": 15,
        "question_content": "Which challenge is addressed by the Aggregate pattern in DDD?",
        "options": {
            "A": "Improving UI design",
            "B": "Simplifying database schema",
            "C": "Eliminating object references across services",
            "D": "Reducing API complexity"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:49"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rĐâu không phải là một phần tử đơn ?",
        "options": {
            "A": "CustomerName",
            "B": "CustomerId",
            "C": "Amount",
            "D": "Customer"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:51"
    },
    {
        "question_number": 20,
        "question_content": "Which of the following best supports multi-environment configuration in deployment?",
        "options": {
            "A": "Dockerfile",
            "B": "Kustomize or Helm",
            "C": "Git branches",
            "D": "Unit tests"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:53"
    },
    {
        "question_number": 32,
        "question_content": "Lợi ích chính của việc sử dụng dịch vụ web dựa trên REST là gì?",
        "options": {
            "A": "Dễ phát triển hơn SOAP",
            "B": "Hiệu quả hơn SOAP",
            "C": "An toàn hơn SOAP",
            "D": "Đơn giản hơn SOAP"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:56"
    },
    {
        "question_number": 7,
        "question_content": "Bước đầu tiên khi mô hình hóa REST Service?",
        "options": {
            "A": "Xác định ứng viên dịch vụ thực thể",
            "B": "Xác định tài nguyên",
            "C": "Xác định logic cụ thể của quy trình",
            "D": "Phân rã quy trình nghiệp vụ"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:15:58"
    },
    {
        "question_number": 9,
        "question_content": "Khi áp dụng mô hình hóa dịch vụ REST cho quy trình kinh doanh “Xử lý yêu cầu bảo hiểm”, tại sao hành động \"Tính toán số tiền bồi thường dựa trên quy định của hợp đồng\" được phân loại là non- agnostic?",
        "options": {
            "A": "Vì nó không phụ thuộc vào bất kỳ ngữ cảnh cụ thể nào",
            "B": "Vì nó có thể tái sử dụng trong các quy trình khác mà không cần sửa đổi",
            "C": "Vì hành động này tuân theo logic riêng biệt áp dụng cho hoạt động bảo hiểm",
            "D": "Vì nó đòi hỏi sự xác minh của thông tin khách hàng"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:00"
    },
    {
        "question_number": 24,
        "question_content": "What does an API gateway typically NOT handle?",
        "options": {
            "A": "Routing requests",
            "B": "Aggregating responses",
            "C": "User authentication",
            "D": "Compiling source code"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:02"
    },
    {
        "question_number": 26,
        "question_content": "Which pattern is useful when a client needs to contact multiple services in one logical operation?",
        "options": {
            "A": "Service Mesh",
            "B": "API Gateway",
            "C": "Saga",
            "D": "Backend for Frontend"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:05"
    },
    {
        "question_number": 8,
        "question_content": "Trong phân tích hướng dịch vụ, các agnostic logic trong quy trình kinh doanh là những logic như thế nào?",
        "options": {
            "A": "Có khả năng tái sử dụng lại cao trong nhiều quy trình nghiệp vụ",
            "B": "Chỉ phục vụ một quy trình nghiệp vụ cụ thể và không thể tái sử dụng trong các quy trình khác",
            "C": "Liên quan đến việc xử lý dữ liệu của các hệ thống cụ thể mà không phụ thuộc vào ngữ cảnh nghiệp vụ",
            "D": "Yêu cầu sự tùy chỉnh đặc thù cho từng quy trình nghiệp vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:08"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThông tin nào được dịch vụ web trả về?",
        "options": {
            "A": "Thông báo mô tả trạng thái của giao dịch nạp tiền",
            "B": "Trạng thái của giao dịch nạp tiền và thông điệp kèm theo",
            "C": "Mã khách hàng và số tiền đã nạp",
            "D": "Mã khách hàng, tên khách hàng, số tiền đã nạp và số thẻ tín dụng"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:09"
    },
    {
        "question_number": 37,
        "question_content": "WSDL có thể mô tả được các thông tin nào của một web service?",
        "options": {
            "A": "Thông tin định dạng dữ liệu",
            "B": "Thông tin địa chỉ và giao thức truy cập",
            "C": "Thông tin mã nguồn và kiểu dữ liệu",
            "D": "Thông tin cấu trúc dữ liệu"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:12"
    },
    {
        "question_number": 3,
        "question_content": "Thuộc tính phi chức năng của dịch vụ web bao gồm các yếu tố nào sau đây?",
        "options": {
            "A": "Khả năng tích hợp, mở rộng",
            "B": "Giao diện người dùng, trải nghiệm người dùng",
            "C": "Quản lý dữ liệu, phân quyền truy cập",
            "D": "Bảo mật, hiệu suất, sự tin cậy"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:15"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho updateProduct () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products/15",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:19"
    },
    {
        "question_number": 28,
        "question_content": "How can query models support different consumer needs in microservices?",
        "options": {
            "A": "By providing a single generic model",
            "B": "By customizing views per use case or API endpoint",
            "C": "By including all write data in the query side",
            "D": "By storing commands and queries in one schema"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:21"
    },
    {
        "question_number": 13,
        "question_content": "Which of the following is a primary reason for using asynchronous communication in microservices?",
        "options": {
            "A": "To reduce latency in request handling",
            "B": "To simplify service discovery",
            "C": "To decouple services for better scalability",
            "D": "To enforce strict request-response patterns"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:24"
    },
    {
        "question_number": 11,
        "question_content": "Kỹ thuật nào có thể được sử dụng để đảm bảo rằng phương thức POST trong dịch vụ tác vụ dựa trên REST hoạt động đáng tin cậy?",
        "options": {
            "A": "Chỉ sử dụng các phương thức HTTP khác như GET hoặc PUT",
            "B": "Bao gồm các tiêu đề bổ sung và xử lý các thông báo phản hồi, hoặc sử dụng một mã định danh yêu cầu duy nhất do người dùng tạo ra trong mã định danh tài nguyên",
            "C": "Tạo ra nhiều phiên bản của dịch vụ tác vụ để tăng độ tin cậy",
            "D": "Sử dụng SOAP thay vì REST để truyền tải các thông điệp"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:26"
    },
    {
        "question_number": 18,
        "question_content": "What is a common challenge in microservices data consistency?",
        "options": {
            "A": "High query speed",
            "B": "Join queries",
            "C": "Distributed transactions",
            "D": "Using MongoDB"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:31"
    },
    {
        "question_number": 17,
        "question_content": "When should a team split a monolith into microservices?",
        "options": {
            "A": "When the monolith is fast",
            "B": "When modular boundaries are clear and aligned to business domains",
            "C": "When using a single tech stack",
            "D": "At the start of a project"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:33"
    },
    {
        "question_number": 23,
        "question_content": "Why is designing the external API more challenging in microservices than in monoliths?",
        "options": {
            "A": "Microservices do not allow REST",
            "B": "Each service has its own interface and clients vary",
            "C": "Clients always prefer SOAP",
            "D": "Clients do not use APIs"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:36"
    },
    {
        "question_number": 30,
        "question_content": "In orchestration-based saga, which component triggers and monitors the steps?",
        "options": {
            "A": "Service registry",
            "B": "API Gateway",
            "C": "Saga orchestrator",
            "D": "Database monitor"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:39"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rMã trạng thái HTTP của phản hồi từ phương thức getOrders() nếu không có đơn hàng?",
        "options": {
            "A": "200",
            "B": "201",
            "C": "204",
            "D": "404"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:41"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rPhương thức HTTP nào được sử dụng cho getOrders() ?",
        "options": {
            "A": "GET",
            "B": "POST",
            "C": "PUT",
            "D": "DELETE"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:44"
    },
    {
        "question_number": 31,
        "question_content": "Dịch vụ web RESTful có hợp đồng không?",
        "options": {
            "A": "Có",
            "B": "Không",
            "C": "Đôi khi",
            "D": "Tùy thuộc"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:48"
    },
    {
        "question_number": 4,
        "question_content": "Loại dịch vụ nào thường tương ứng với logic quy trình kinh doanh mục tiêu, bao gồm logic ghép nối các dịch vụ khác để hoàn thành nhiệm vụ?",
        "options": {
            "A": "Task service",
            "B": "Microservice",
            "C": "Entity service",
            "D": "Utility service"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:52"
    },
    {
        "question_number": 25,
        "question_content": "Which of the following is a primary reason for using asynchronous communication in microservices?",
        "options": {
            "A": "To reduce latency in request handling",
            "B": "To simplify service discovery",
            "C": "To decouple services for better scalability",
            "D": "To enforce strict request-response patterns"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:54"
    },
    {
        "question_number": 29,
        "question_content": "When using the saga pattern, what is a downside of the choreography-based coordination?",
        "options": {
            "A": "Too much centralized control",
            "B": "Reduced observability and debugging difficulty",
            "C": "High cost",
            "D": "Poor security"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN465",
        "crawled_at": "2025-06-13 06:16:57"
    }
]