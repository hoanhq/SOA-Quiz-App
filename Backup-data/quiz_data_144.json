[
  {
    "question_number": 1,
    "question_content": "Vai trò nào trong SOA lưu trữ thông tin về các dịch vụ có sẵn và cung cấp thông tin này cho người tiêu dùng dịch vụ?",
    "options": {
      "A": "Service Provider",
      "B": "Service Consumer",
      "C": "Service Registry",
      "D": "Service Requestor"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 2,
    "question_content": "Ví dụ nào dưới đây là không phải là 1 dịch vụ web phức tạp",
    "options": {
      "A": "Xem thông tin thời tiết",
      "B": "Đặt phòng khách sạn",
      "C": "Lấy thông tin báo giá",
      "D": "Đặt vé máy bay"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 3,
    "question_content": "Fine-grained trong dịch vụ web có đặc điểm gì?",
    "options": {
      "A": "Cung cấp các dịch vụ có phạm vi rộng",
      "B": "Cung cấp các dịch vụ lớn, tổng quát",
      "C": "Cung cấp các dịch vụ tương đối nhỏ và phổ biến",
      "D": "Cung cấp các dịch vụ nhỏ, chi tiết"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 4,
    "question_content": "Mục đích chính của quá trình mô hình hóa dịch vụ trong kiến trúc dịch vụ (SOA) là gì?",
    "options": {
      "A": "Xác định quy trình kết hợp các dịch vụ thành một giải pháp hướng dịch vụ",
      "B": "Xác định các yêu cầu và chức năng của các dịch vụ trong hệ thống",
      "C": "Tổ chức một lượng lớn các đơn vị logic để cuối cùng chúng có thể được tập hợp lại thành các giải pháp hướng dịch vụ",
      "D": "Xác định cấu trúc và quan hệ giữa các dịch vụ trong kiến trúc dịch vụ"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 5,
    "question_content": "Sắp xếp theo thứ tự quy mô lớn dần các loại SOA phổ biến?",
    "options": {
      "A": "Kiến trúc dịch vụ, Kiến trúc thành phần dịch vụ, Kiến trúc kho dịch vụ, Kiến trúc doanh nghiệp hướng dịch vụ",
      "B": "Kiến trúc dịch vụ, Kiến trúc kho dịch vụ, Kiến trúc thành phần dịch vụ, Kiến trúc doanh nghiệp hướng dịch vụ",
      "C": "Kiến trúc kho dịch vụ, Kiến trúc dịch vụ, Kiến trúc thành phần dịch vụ, Kiến trúc doanh nghiệp hướng dịch vụ",
      "D": "Kiến trúc thành phần dịch vụ, Kiến trúc doanh nghiệp hướng dịch vụ, Kiến trúc kho dịch vụ, Kiến trúc dịch vụ"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 6,
    "question_content": "Loại SOA nào được sử dụng phổ biến?",
    "options": {
      "A": "Service Composition",
      "B": "Service Inventory",
      "C": "Service-Oriented Enterprise",
      "D": "Tất cả các loại SOA kể trên"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 7,
    "question_content": "Vai trò của Entity Service trong kiến trúc dịch vụ là gì?",
    "options": {
      "A": "Điều phối và thực hiện các nhiệm vụ cụ thể trong quy trình kinh doanh",
      "B": "Cung cấp các chức năng liên quan đến CRUD (Create, Read, Update, Delete) cho các thực thể",
      "C": "Cung cấp các dịch vụ tiện ích chung mà nhiều dịch vụ khác có thể cần",
      "D": "Đơn vị triển khai độc lập, thực hiện một chức năng duy nhất và cụ thể trong hệ thống"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 8,
    "question_content": "Điều gì KHÔNG đúng khi nói về việc xác định các tài nguyên trong giai đoạn mô hình hóa dịch vụ ?",
    "options": {
      "A": "Các tài nguyên có thể được biểu diễn bằng dấu gạch chéo làm dấu phân cách",
      "B": "Các tài nguyên nên được giữ ở dạng đơn giản trong giai đoạn này",
      "C": "Các tài nguyên xác định có thể không liên quan đến các thực thể kinh doanh đã biết",
      "D": "Các tài nguyên cần phải tuân thủ hoàn toàn các tiêu chuẩn URL ngay từ đầu"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 9,
    "question_content": "Thông điệp SOAP được xử lý trong phần nào của thông điệp SOAP?",
    "options": {
      "A": "Header",
      "B": "Body",
      "C": "Footer",
      "D": "Envelope"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 10,
    "question_content": "Các phương thức nào thường được sử dụng trong các hợp đồng dịch vụ thực thể REST?",
    "options": {
      "A": "POST và PATCH",
      "B": "GET, PUT, DELETE",
      "C": "CONNECT và OPTIONS",
      "D": "TRACE và HEAD"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 11,
    "question_content": "Which pattern is useful when a client needs to contact multiple services in one logical operation?",
    "options": {
      "A": "Service Mesh",
      "B": "API Gateway",
      "C": "Saga",
      "D": "Backend for Frontend"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 12,
    "question_content": "What can be used to enable message persistence in asynchronous systems?",
    "options": {
      "A": "Load balancer",
      "B": "Service discovery",
      "C": "Message queue",
      "D": "Circuit breaker"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 13,
    "question_content": "Which challenge is addressed by the Aggregate pattern in DDD?",
    "options": {
      "A": "Improving UI design",
      "B": "Simplifying database schema",
      "C": "Eliminating object references across services",
      "D": "Reducing API complexity"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 14,
    "question_content": "What does the Domain Event pattern facilitate?",
    "options": {
      "A": "Immediate data consistency",
      "B": "Long-running transactions",
      "C": "Loose coupling between services",
      "D": "UI responsiveness"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 15,
    "question_content": "What is a common challenge in microservices data consistency?",
    "options": {
      "A": "High query speed",
      "B": "Join queries",
      "C": "Distributed transactions",
      "D": "Using MongoDB"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 16,
    "question_content": "What is one of the main goals of microservice architecture?",
    "options": {
      "A": "To minimize code reuse",
      "B": "To tightly couple services",
      "C": "To achieve modularity and scalability",
      "D": "To use monolithic deployment"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 17,
    "question_content": "In a microservices environment, what does 'immutable infrastructure' imply?",
    "options": {
      "A": "Infrastructure cannot be resized",
      "B": "Infrastructure is updated in-place",
      "C": "Infrastructure is replaced rather than changed",
      "D": "Infrastructure is read-only"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 18,
    "question_content": "Why is rollback functionality critical in microservices deployment?",
    "options": {
      "A": "To increase deployment speed",
      "B": "To reuse legacy code",
      "C": "To recover from faulty deployments",
      "D": "To test performance"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 19,
    "question_content": "Which technique helps manage long event streams in event sourcing?",
    "options": {
      "A": "Snapshots",
      "B": "Polling services",
      "C": "Caching mechanisms",
      "D": "Schema migration"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 20,
    "question_content": "Why is immutability important in event sourcing?",
    "options": {
      "A": "It reduces memory consumption",
      "B": "It avoids concurrency issues and ensures auditability",
      "C": "It allows event deletion when necessary",
      "D": "It simplifies UI rendering"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 21,
    "question_content": "Which of the following is NOT typically a client of the FTGO application’s API?",
    "options": {
      "A": "Browser-based JavaScript",
      "B": "Mobile applications",
      "C": "Third-party partners",
      "D": "Hardware routers"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 22,
    "question_content": "What should an API gateway do if one backend service fails?",
    "options": {
      "A": "Crash the entire system",
      "B": "Respond with 500 immediately",
      "C": "Apply fallback or degrade gracefully",
      "D": "Notify all other services"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 23,
    "question_content": "Which pattern coordinates transactions that span across multiple services?",
    "options": {
      "A": "Service Mesh",
      "B": "Circuit Breaker",
      "C": "Saga",
      "D": "Webhooks"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 24,
    "question_content": "In a CQRS system, how should you resolve inconsistencies in the query model caused by event processing delays?",
    "options": {
      "A": "By retrying failed events and implementing compensating mechanisms",
      "B": "By switching to synchronous write-read",
      "C": "By ignoring the delays",
      "D": "By updating the read model manually"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 25,
    "question_content": "What is the role of a transaction coordinator in traditional systems?",
    "options": {
      "A": "To split transactions",
      "B": "To ensure message encryption",
      "C": "To coordinate commit/rollback across resources",
      "D": "To validate microservice boundaries"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 26,
    "question_content": "Trường hợp sử dụng phổ biến nhất cho REST là gì?",
    "options": {
      "A": "Tạo ứng dụng web",
      "B": "Tạo ứng dụng di động",
      "C": "Tạo ứng dụng trên máy tính để bàn",
      "D": "Tạo ứng dụng IoT"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 27,
    "question_content": "SOAP là gì?",
    "options": {
      "A": "Thông điệp tương tác với dịch vụ WEB",
      "B": "Ngôn ngữ đặc tả dữ liệu truyền/nhận đến/từ dịch vụ web",
      "C": "Một giao thức truyền thông dựa trên XML",
      "D": "Ngôn ngữ đặc tả giao diện dịch vụ WEB"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 28,
    "question_content": "Cho định nghĩa WSDL: <wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\"> <wsdl:types> <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\"> <xsd:element name=\"Customer\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" /> <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" /> </xsd:sequence> </xsd:complexType> </xsd:element> <xsd:element name=\"Charge\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" /> <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" /> </xsd:sequence> </xsd:complexType> </xsd:element> <xsd:element name=\"ChargeResult\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" /> <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" /> </xsd:sequence> </xsd:complexType> </xsd:element> </xsd:schema> </wsdl:types> <wsdl:message name=\"ChargeRequest\"> <wsdl:part name=\"customer\" element=\"tns:Customer\" /> <wsdl:part name=\"charge\" element=\"tns:Charge\" /> </wsdl:message> <wsdl:message name=\"ChargeResponse\"> <wsdl:part name=\"result\" element=\"tns:ChargeResult\" /> </wsdl:message> <wsdl:portType name=\"OnlineChargingPortType\"> <wsdl:operation name=\"Charge\"> <wsdl:input message=\"tns:ChargeRequest\" /> <wsdl:output message=\"tns:ChargeResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\"> <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name=\"Charge\"> <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" /> <wsdl:input> <soap:body use=\"literal\" /> </wsdl:input> <wsdl:output> <soap:body use=\"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name=\"OnlineChargingService\"> <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\"> <soap:address location=\"http://www.example.com/onlinecharging\" /> </wsdl:port> </wsdl:service> </wsdl:definitions> Thông tin nào được yêu cầu khi gửi dữ liệu đến dịch vụ web?",
    "options": {
      "A": "Mã khách hàng và số tiền nạp",
      "B": "Tên khách hàng và số tiền nạp",
      "C": "Mã khách hàng, tên khách hàng và số tiền nạp",
      "D": "Mã khách hàng, tên khách hàng, số tiền nạp và số thẻ tín dụng"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 29,
    "question_content": "Vai trò nào trong SOA thực hiện việc kết nối, tương tác giữa các dịch vụ và quản lý luồng thông tin giữa chúng?",
    "options": {
      "A": "Service Provider",
      "B": "Service Consumer",
      "C": "Service Registry",
      "D": "Service Requestor"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 30,
    "question_content": "Ví dụ về dịch vụ web là \"Thanh toán trực tuyến\", loại dịch vụ này thuộc mô hình liên lạc đồng bộ hay không đồng bộ?",
    "options": {
      "A": "Không đồng bộ",
      "B": "Đồng bộ",
      "C": "Cả A, B đều đúng",
      "D": "Không cái nào đúng"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 31,
    "question_content": "Một dịch vụ web đơn giản có thể triển khai dưới dạng dịch vụ web phức tạp hay không",
    "options": {
      "A": "Không",
      "B": "Có",
      "C": "Tuy thuộc vào công nghệ triển khai",
      "D": "Tùy thuộc vào giao thức triển khai"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 32,
    "question_content": "Dịch vụ loại nào được sử dụng để xử lý các thực thể kinh doanh liên quan, như hóa đơn, khách hàng hoặc yêu cầu?",
    "options": {
      "A": "Task service",
      "B": "Microservice",
      "C": "Entity service",
      "D": "Utility service"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 33,
    "question_content": "Dịch vụ loại nào thường có phạm vi chức năng nhỏ và có yêu cầu xử lý và triển khai cụ thể?",
    "options": {
      "A": "Task service",
      "B": "Microservice",
      "C": "Entity service",
      "D": "Utility service"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 34,
    "question_content": "Trong phân tích hướng dịch vụ, các agnostic logic trong quy trình kinh doanh là những logic như thế nào?",
    "options": {
      "A": "Có khả năng tái sử dụng lại cao trong nhiều quy trình nghiệp vụ",
      "B": "Chỉ phục vụ một quy trình nghiệp vụ cụ thể và không thể tái sử dụng trong các quy trình khác",
      "C": "Liên quan đến việc xử lý dữ liệu của các hệ thống cụ thể mà không phụ thuộc vào ngữ cảnh nghiệp vụ",
      "D": "Yêu cầu sự tùy chỉnh đặc thù cho từng quy trình nghiệp vụ"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 35,
    "question_content": "Các mức độ chi tiết khác nhau cần được xem xét khi thiết kế dịch vụ là gì?",
    "options": {
      "A": "Mức độ chi tiết năng lực, giá trị thông điệp, dữ liệu, kiểu dữ liệu",
      "B": "Mức độ chi tiết dịch vụ, năng lực, dữ liệu, kiểu dữ liệu",
      "C": "Mức độ chi tiết dịch vụ, năng lực, giá trị thông điệp, dữ liệu",
      "D": "Mức độ chi tiết dịch vụ, năng lực, ràng buộc, dữ liệu"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 36,
    "question_content": "Điều gì cần cân nhắc khi thiết kế dịch vụ để đảm bảo tính nhất quán và chuẩn hóa?",
    "options": {
      "A": "Sử dụng kiểu dữ liệu riêng",
      "B": "Giảm độ chi tiết của API",
      "C": "Tăng số lượng thao tác",
      "D": "Áp dụng các nguyên tắc hướng dịch vụ liên quan đến hợp đồng"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 37,
    "question_content": "Quy ước đặt tên hoạt động dịch vụ cho các dịch vụ thực thể (Service operations for entity services) là gì?",
    "options": {
      "A": "Chỉ sử dụng danh từ",
      "B": "Sử dụng động từ và không lặp lại tên thực thể",
      "C": "Sử dụng động từ + danh từ",
      "D": "Sử dụng cấu trúc \"động từ + danh từ\" hoặc chỉ danh từ"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 38,
    "question_content": "What is a common drawback of tightly coupled service communication?",
    "options": {
      "A": "Improved fault tolerance",
      "B": "Increased system observability",
      "C": "Reduced deployment flexibility",
      "D": "Faster communication"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 39,
    "question_content": "Which object-oriented design principle is encouraged for complex business logic?",
    "options": {
      "A": "Encapsulation",
      "B": "Inheritance",
      "C": "Applying object-oriented design principles",
      "D": "Polymorphism"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 40,
    "question_content": "What is the role of a domain model in a microservice application?",
    "options": {
      "A": "To define UI layout",
      "B": "To enforce security policies",
      "C": "To implement business rules and logic",
      "D": "To manage static content"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 41,
    "question_content": "How can a service publish domain events to other services?",
    "options": {
      "A": "By using a shared memory object",
      "B": "Through REST polling",
      "C": "Via event-driven messaging",
      "D": "Through FTP updates"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 42,
    "question_content": "In a microservices environment, what does 'immutable infrastructure' imply?",
    "options": {
      "A": "Infrastructure cannot be resized",
      "B": "Infrastructure is updated in-place",
      "C": "Infrastructure is replaced rather than changed",
      "D": "Infrastructure is read-only"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 43,
    "question_content": "What is the primary principle behind event sourcing?",
    "options": {
      "A": "Storing only the current state of data",
      "B": "Storing every change to application state as a sequence of events",
      "C": "Storing both state and behavior in the database",
      "D": "Using events for communication only"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 44,
    "question_content": "Which database type is often used for read models in microservices?",
    "options": {
      "A": "Graph databases for all use cases",
      "B": "Write-optimized SQL only",
      "C": "Read-optimized NoSQL or denormalized SQL",
      "D": "Blockchain ledgers"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 45,
    "question_content": "What does ACID stand for in transaction management?",
    "options": {
      "A": "Atomicity, Consistency, Isolation, Durability",
      "B": "Automation, Compatibility, Integrity, Deployment",
      "C": "Access, Coordination, Integrity, Distribution",
      "D": "Atomicity, Centralization, Implementation, Durability"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 46,
    "question_content": "Which of the following best describes a SAGA pattern in microservices?",
    "options": {
      "A": "A way to encrypt transactions",
      "B": "A distributed sequence of local transactions with compensations",
      "C": "A batch transaction handler",
      "D": "A fallback mechanism for HTTP errors"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 47,
    "question_content": "Chú thích nào thường được sử dụng để chỉ định đường dẫn cho dịch vụ web?",
    "options": {
      "A": "Chú thích @Path",
      "B": "Chú thích @RestController",
      "C": "Chú thích @RequestMapping",
      "D": "Chú thích @Service"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 48,
    "question_content": "Trong WSDL, phần Port được sử dụng để làm gì?",
    "options": {
      "A": "Chứa các thông tin về tài nguyên của web service",
      "B": "Chứa các tham số đầu vào của phương thức",
      "C": "Chứa các thông tin bổ sung về message",
      "D": "Xác định địa chỉ và giao thức để kết nối với web service"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 49,
    "question_content": "Cho định nghĩa WSDL: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\"> <types> <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\"> <xsd:element name=\"Account\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"username\" type=\"xsd:string\"/> <xsd:element name=\"password\" type=\"xsd:string\"/> </xsd:sequence> </xsd:complexType> </xsd:element> <xsd:element name=\"AccountResponse\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"success\" type=\"xsd:boolean\"/> </xsd:sequence> </xsd:complexType> </xsd:element> </xsd:schema> </types> <message name=\"RegisterAccount\"> <part name=\"parameters\" element=\"tns:Account\"/> </message> <message name=\"RegisterAccountResponse\"> <part name=\"parameters\" element=\"tns:AccountResponse\"/> </message> <portType name=\"AccountRegistrationPortType\"> <operation name=\"RegisterAccount\"> <input message=\"tns:RegisterAccount\"/> <output message=\"tns:RegisterAccountResponse\"/> </operation> </portType> <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\"> <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/> <operation name=\"RegisterAccount\"> <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/> <input> <soap:body use=\"literal\"/> </input> <output> <soap:body use=\"literal\"/> </output> </operation> </binding> <service name=\"AccountRegistrationService\"> <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\"> <soap:address location=\"http://www.example.com/accountRegistration\"/> </port> </service> </definitions> Đâu không phải là một phần tử đơn ?",
    "options": {
      "A": "success",
      "B": "username",
      "C": "password",
      "D": "Account"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 50,
    "question_content": "Cho định nghĩa WSDL: <wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\"> <wsdl:types> <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\"> <xsd:element name=\"Customer\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" /> <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" /> </xsd:sequence> </xsd:complexType> </xsd:element> <xsd:element name=\"Charge\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" /> <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" /> </xsd:sequence> </xsd:complexType> </xsd:element> <xsd:element name=\"ChargeResult\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" /> <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" /> </xsd:sequence> </xsd:complexType> </xsd:element> </xsd:schema> </wsdl:types> <wsdl:message name=\"ChargeRequest\"> <wsdl:part name=\"customer\" element=\"tns:Customer\" /> <wsdl:part name=\"charge\" element=\"tns:Charge\" /> </wsdl:message> <wsdl:message name=\"ChargeResponse\"> <wsdl:part name=\"result\" element=\"tns:ChargeResult\" /> </wsdl:message> <wsdl:portType name=\"OnlineChargingPortType\"> <wsdl:operation name=\"Charge\"> <wsdl:input message=\"tns:ChargeRequest\" /> <wsdl:output message=\"tns:ChargeResponse\" /> </wsdl:operation> </wsdl:portType> <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\"> <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" /> <wsdl:operation name=\"Charge\"> <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" /> <wsdl:input> <soap:body use=\"literal\" /> </wsdl:input> <wsdl:output> <soap:body use=\"literal\" /> </wsdl:output> </wsdl:operation> </wsdl:binding> <wsdl:service name=\"OnlineChargingService\"> <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\"> <soap:address location=\"http://www.example.com/onlinecharging\" /> </wsdl:port> </wsdl:service> </wsdl:definitions> Dịch vụ web tên gì?",
    "options": {
      "A": "CustomerPortType",
      "B": "OnlineChargingBinding",
      "C": "Customer",
      "D": "OnlineChargingService"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 51,
    "question_content": "Loại dịch vụ nào thường tương ứng với logic quy trình kinh doanh mục tiêu, bao gồm logic ghép nối các dịch vụ khác để hoàn thành nhiệm vụ?",
    "options": {
      "A": "Task service",
      "B": "Microservice",
      "C": "Entity service",
      "D": "Utility service"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 52,
    "question_content": "Quá trình mô hình hóa dịch vụ có cần phải đảm bảo tính linh hoạt của hợp đồng dịch vụ?",
    "options": {
      "A": "Có, để dễ dàng cập nhật và thay đổi trong quá trình phát triển",
      "B": "Không, để đảm bảo tính nhất quán và ổn định của dịch vụ",
      "C": "Có, để giảm thiểu sự phức tạp của dịch vụ",
      "D": "Không, để giảm thiểu rủi ro và lỗi trong quá trình triển khai"
    },
    "correct_answer": "A"
  },
  {
    "question_number": 53,
    "question_content": "Trong quá trình xác định các tương tác dịch vụ, các tương tác được xác định dựa trên điều gì?",
    "options": {
      "A": "Yêu cầu về tài nguyên và phương thức",
      "B": "Các tình huống thành công và thất bại có thể xảy ra trong luồng công việc của quy trình",
      "C": "Khả năng mở rộng và triển khai",
      "D": "Yêu cầu về hiệu suất và độ tin cậy"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 54,
    "question_content": "Hợp đồng dịch vụ Web cần phản ánh chính xác điều gì?",
    "options": {
      "A": "Tên thao tác",
      "B": "Chức năng và ngữ cảnh của dịch vụ",
      "C": "Quy trình nghiệp vụ",
      "D": "Tên dịch vụ"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 55,
    "question_content": "Sử dụng Namespaces trong WSDL giúp thực hiện điều gì?",
    "options": {
      "A": "Tạo tài liệu WSDL tổng thể",
      "B": "Tạo các quy tắc định dạng cho tài liệu WSDL",
      "C": "Tạo tên duy nhất cho các phần tử trong WSDL",
      "D": "Xác định phạm vi của dịch vụ web"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 56,
    "question_content": "Kỹ thuật nào có thể được sử dụng để đảm bảo rằng phương thức POST trong dịch vụ tác vụ dựa trên REST hoạt động đáng tin cậy?",
    "options": {
      "A": "Chỉ sử dụng các phương thức HTTP khác như GET hoặc PUT",
      "B": "Bao gồm các tiêu đề bổ sung và xử lý các thông báo phản hồi, hoặc sử dụng một mã định danh yêu cầu duy nhất do người dùng tạo ra trong mã định danh tài nguyên",
      "C": "Tạo ra nhiều phiên bản của dịch vụ tác vụ để tăng độ tin cậy",
      "D": "Sử dụng SOAP thay vì REST để truyền tải các thông điệp"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 57,
    "question_content": "What is the role of a domain model in a microservice application?",
    "options": {
      "A": "To define UI layout",
      "B": "To enforce security policies",
      "C": "To implement business rules and logic",
      "D": "To manage static content"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 58,
    "question_content": "Which DevOps practice is critical to microservices success?",
    "options": {
      "A": "Manual testing",
      "B": "Manual deployment",
      "C": "Continuous Integration/Continuous Delivery",
      "D": "Monthly backups"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 59,
    "question_content": "What is a benefit of decentralized governance in microservices?",
    "options": {
      "A": "Uniform technology stack",
      "B": "Freedom to choose suitable tools per service",
      "C": "No need for service boundaries",
      "D": "Eliminating testing requirements"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 60,
    "question_content": "Which of the following tools is commonly used for container orchestration?",
    "options": {
      "A": "Docker",
      "B": "Consul",
      "C": "Kubernetes",
      "D": "Helm"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 61,
    "question_content": "What challenge is commonly associated with event sourcing?",
    "options": {
      "A": "Fast writes to the database",
      "B": "Scaling read operations",
      "C": "Keeping events small in size",
      "D": "Rebuilding state after many events"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 62,
    "question_content": "What does CQRS stand for in the context of event sourcing?",
    "options": {
      "A": "Command Query Remote Server",
      "B": "Centralized Query Result Store",
      "C": "Command Query Responsibility Segregation",
      "D": "Continuous Queue Record Synchronization"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 63,
    "question_content": "Why is idempotency important in asynchronous communication?",
    "options": {
      "A": "To increase bandwidth",
      "B": "To reduce latency",
      "C": "To ensure reliable retries",
      "D": "To optimize caching"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 64,
    "question_content": "What is the role of a message broker in microservice communication?",
    "options": {
      "A": "Transform HTTP to gRPC",
      "B": "Store configuration settings",
      "C": "Coordinate and route messages",
      "D": "Serve static content"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 65,
    "question_content": "How can query models support different consumer needs in microservices?",
    "options": {
      "A": "By providing a single generic model",
      "B": "By customizing views per use case or API endpoint",
      "C": "By including all write data in the query side",
      "D": "By storing commands and queries in one schema"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 66,
    "question_content": "Which of the following best describes eventual consistency in a query model?",
    "options": {
      "A": "Read and write operations are immediately consistent",
      "B": "Data is written once and never changed",
      "C": "Read models may lag behind write models due to asynchronous updates",
      "D": "All services write to the same database"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 67,
    "question_content": "Which coordination model is more scalable in distributed transactions?",
    "options": {
      "A": "Two-Phase Commit",
      "B": "Compensating Transactions",
      "C": "Shared Database Model",
      "D": "Direct HTTP Requests"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 68,
    "question_content": "In an e-commerce checkout using saga, if the payment step fails, what should happen?",
    "options": {
      "A": "Notify admin only",
      "B": "Compensate previous steps like canceling order and restocking",
      "C": "Retry indefinitely",
      "D": "Send error log"
    },
    "correct_answer": "B"
  },
  {
    "question_number": 69,
    "question_content": "Trường hợp sử dụng phổ biến nhất cho SOAP là gì?",
    "options": {
      "A": "Tạo ứng dụng di động",
      "B": "Tạo ứng dụng web",
      "C": "Tạo ứng dụng doanh nghiệp",
      "D": "Tạo ứng dụng trên máy tính để bàn"
    },
    "correct_answer": "C"
  },
  {
    "question_number": 70,
    "question_content": "Lợi ích chính của việc sử dụng dịch vụ web dựa trên REST là gì?",
    "options": {
      "A": "Dễ phát triển hơn SOAP",
      "B": "Hiệu quả hơn SOAP",
      "C": "An toàn hơn SOAP",
      "D": "Đơn giản hơn SOAP"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 71,
    "question_content": "Cho định nghĩa WSDL: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\"> <types> <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\"> <xsd:element name=\"Account\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"username\" type=\"xsd:string\"/> <xsd:element name=\"password\" type=\"xsd:string\"/> </xsd:sequence> </xsd:complexType> </xsd:element> <xsd:element name=\"AccountResponse\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"success\" type=\"xsd:boolean\"/> </xsd:sequence> </xsd:complexType> </xsd:element> </xsd:schema> </types> <message name=\"RegisterAccount\"> <part name=\"parameters\" element=\"tns:Account\"/> </message> <message name=\"RegisterAccountResponse\"> <part name=\"parameters\" element=\"tns:AccountResponse\"/> </message> <portType name=\"AccountRegistrationPortType\"> <operation name=\"RegisterAccount\"> <input message=\"tns:RegisterAccount\"/> <output message=\"tns:RegisterAccountResponse\"/> </operation> </portType> <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\"> <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/> <operation name=\"RegisterAccount\"> <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/> <input> <soap:body use=\"literal\"/> </input> <output> <soap:body use=\"literal\"/> </output> </operation> </binding> <service name=\"AccountRegistrationService\"> <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\"> <soap:address location=\"http://www.example.com/accountRegistration\"/> </port> </service> </definitions> Thông điệp đầu ra tên là gì ?",
    "options": {
      "A": "Account",
      "B": "RegisterAccount",
      "C": "AccountResponse",
      "D": "RegisterAccountResponse"
    },
    "correct_answer": "D"
  },
  {
    "question_number": 72,
    "question_content": "Trong việc xây dựng một dịch vụ web quản lý blog, việc áp dụng độ mịn như thế nào có thể giúp tăng khả năng tái sử dụng của các chức năng?",
    "options": {
      "A": "Áp dụng độ mịn để chia nhỏ các chức năng như quản lý bài viết, quản lý danh mục, quản lý người dùng",
      "B": "Áp dụng độ mịn để gộp các chức năng blog thành một dịch vụ duy nhất",
      "C": "Áp dụng độ mịn không ảnh hưởng đến khả năng tái sử dụng của các chức năng",
      "D": "Áp dụng độ mịn chỉ cần xác định các API cho việc xây dựng blog"
    },
    "correct_answer": "A"
  }
]