[
    {
        "question_number": 1,
        "question_content": "Ví dụ nào dưới đây là 1  thuộc tính phi chức năng của dịch vụ web là gì?",
        "options": {
            "A": "Quản lý dữ liệu hiệu quả",
            "B": "Giao diện người dùng dễ sử dụng",
            "C": "Thời gian đáp ứng yêu cầu",
            "D": "Tích hợp với các hệ thống khác"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:06"
    },
    {
        "question_number": 2,
        "question_content": "Trong SOA, phương thức giao tiếp giữa các dịch vụ thường sử dụng giao thức nào?",
        "options": {
            "A": "RPC",
            "B": "Message",
            "C": "WSDL",
            "D": "SOAP"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:07"
    },
    {
        "question_number": 3,
        "question_content": "Vai trò nào trong SOA lưu trữ thông tin về các dịch vụ có sẵn và cung cấp thông tin này cho người tiêu dùng dịch vụ?",
        "options": {
            "A": "Service Provider",
            "B": "Service Consumer",
            "C": "Service Registry",
            "D": "Service Requestor"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:09"
    },
    {
        "question_number": 4,
        "question_content": "Dịch vụ loại nào thường có phạm vi chức năng nhỏ và có yêu cầu xử lý và triển khai cụ thể?",
        "options": {
            "A": "Task service",
            "B": "Microservice",
            "C": "Entity service",
            "D": "Utility service"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:09"
    },
    {
        "question_number": 5,
        "question_content": "Một trong những đặc điểm cơ bản phân biệt SOA/kiến trúc công nghệ hướng dịch vụ với các dạng kiến trúc phân tán khác là gì?",
        "options": {
            "A": "Tính tương thích (Compatibility)",
            "B": "Tính linh hoạt (Flexibility)",
            "C": "Tính tập trung vào thành phần (Component-centric)",
            "D": "Tính phân tán (Decentralization)"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:10"
    },
    {
        "question_number": 6,
        "question_content": "Dịch vụ thực thể là gì?",
        "options": {
            "A": "Dịch vụ không thể tái sử dụng với bối cảnh chức năng khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "B": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "C": "Dịch vụ không thể tái sử dụng với bối cảnh chức năng bất khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "D": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng bất khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:11"
    },
    {
        "question_number": 7,
        "question_content": "Task Service đóng vai trò gì trong các hệ thống hướng dịch vụ?",
        "options": {
            "A": "Quản lý các thực thể dữ liệu trong cơ sở dữ liệu",
            "B": "Điều phối và quản lý các quy trình kinh doanh phức tạp",
            "C": "Cung cấp các chức năng tiện ích độc lập",
            "D": "Xác định các quan hệ giữa các dịch vụ thực thể"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:12"
    },
    {
        "question_number": 8,
        "question_content": "Trong kiến trúc hướng dịch vụ, REST (Representational State Transfer) là gì?",
        "options": {
            "A": "Một giao thức truyền tải dữ liệu giữa các dịch vụ",
            "B": "Một mô hình kiến trúc phục vụ cho việc truyền tải các tài nguyên qua giao thức HTTP",
            "C": "Một phương pháp tạo ra các dịch vụ mạng phân tán",
            "D": "Một công nghệ dựa trên SOAP để tạo ra các dịch vụ web"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:13"
    },
    {
        "question_number": 9,
        "question_content": "Khi nào một non-agnostic logic có thể được đóng gói thành một microservice riêng biệt?",
        "options": {
            "A": "Khi logic hành động yêu cầu tăng cường tính tự chủ",
            "B": "Khi logic hành động yêu cầu ít tài nguyên",
            "C": "Khi logic hành động không có yêu cầu đặc biệt về hiệu suất",
            "D": "Khi logic hành động không cần phiên bản hóa và triển khai riêng biệt"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:14"
    },
    {
        "question_number": 10,
        "question_content": "Tại sao việc xác định mức độ chi tiết dịch vụ (Service Granularity) quan trọng trong quá trình thiết kế?",
        "options": {
            "A": "Quyết định mức độ chi tiết của logic xác thực",
            "B": "Xác định phạm vi chức năng của dịch vụ",
            "C": "Ảnh hưởng đến mô hình hóa và thiết kế vật lý của hợp đồng dịch vụ",
            "D": "Tất cả đều đúng"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:15"
    },
    {
        "question_number": 11,
        "question_content": "Quy ước đặt tên hoạt động dịch vụ tiện ích (Utility service operations) là gì?",
        "options": {
            "A": "Chỉ sử dụng danh từ",
            "B": "Sử dụng động từ và không lặp lại tên thực thể",
            "C": "Sử dụng động từ + danh từ",
            "D": "Sử dụng cấu trúc \"động từ + danh từ\" hoặc chỉ danh từ"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:16"
    },
    {
        "question_number": 12,
        "question_content": "Làm thế nào để bổ sung dịch vụ thực thể bằng các chi tiết siêu dữ liệu để làm cho dịch vụ dễ phát hiện hơn đối với người khác?",
        "options": {
            "A": "Sử dụng phần tử style",
            "B": "Sử dụng phần tử documentation",
            "C": "Sử dụng phần tử binding",
            "D": "Sử dụng phần tử schema"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:17"
    },
    {
        "question_number": 13,
        "question_content": "Which technology is often used for real-time streaming between services?",
        "options": {
            "A": "Redis",
            "B": "Kafka",
            "C": "PostgreSQL",
            "D": "gRPC"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:18"
    },
    {
        "question_number": 14,
        "question_content": "What is the role of a message broker in microservice communication?",
        "options": {
            "A": "Transform HTTP to gRPC",
            "B": "Store configuration settings",
            "C": "Coordinate and route messages",
            "D": "Serve static content"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:19"
    },
    {
        "question_number": 15,
        "question_content": "What should developers avoid in a domain model for microservices?",
        "options": {
            "A": "Using rich domain logic",
            "B": "Using object references across services",
            "C": "Using encapsulated fields",
            "D": "Using immutable data types"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:20"
    },
    {
        "question_number": 16,
        "question_content": "What is the heart of an enterprise application according to Chapter 5?",
        "options": {
            "A": "The user interface",
            "B": "The deployment strategy",
            "C": "The business logic",
            "D": "The database schema"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:21"
    },
    {
        "question_number": 17,
        "question_content": "Which database strategy is most aligned with microservices?",
        "options": {
            "A": "Shared database for all services",
            "B": "Single monolithic database",
            "C": "Database per service",
            "D": "In-memory only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:23"
    },
    {
        "question_number": 18,
        "question_content": "Which protocol is commonly used in microservices for communication?",
        "options": {
            "A": "SMTP",
            "B": "HTTP/REST",
            "C": "FTP",
            "D": "POP3"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:24"
    },
    {
        "question_number": 19,
        "question_content": "What challenge is commonly associated with deploying multiple microservices simultaneously?",
        "options": {
            "A": "Slow startup time",
            "B": "Increased service discovery traffic",
            "C": "Deployment sequencing and coordination",
            "D": "Lack of logging"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:25"
    },
    {
        "question_number": 20,
        "question_content": "What is the primary purpose of a deployment pipeline in microservices architecture?",
        "options": {
            "A": "To manage version control",
            "B": "To automate service deployment",
            "C": "To store container images",
            "D": "To build frontend interfaces"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:26"
    },
    {
        "question_number": 21,
        "question_content": "Which storage format is most aligned with event sourcing?",
        "options": {
            "A": "Document-oriented databases",
            "B": "Relational tables with fixed schemas",
            "C": "Append-only logs",
            "D": "Key-value stores"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:28"
    },
    {
        "question_number": 22,
        "question_content": "Which of the following best describes an event store?",
        "options": {
            "A": "A database for REST services",
            "B": "A service that sends push notifications",
            "C": "A log of immutable events that represent state transitions",
            "D": "A cache for recent API responses"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:29"
    },
    {
        "question_number": 23,
        "question_content": "Which of the following best describes GraphQL in the context of API gateways?",
        "options": {
            "A": "It only works for REST services",
            "B": "It is a messaging queue",
            "C": "It simplifies API composition by allowing clients to specify data needs",
            "D": "It replaces microservices"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:30"
    },
    {
        "question_number": 24,
        "question_content": "How can a gateway handle varied client needs efficiently?",
        "options": {
            "A": "Through DNS switching",
            "B": "By rejecting requests not from mobile",
            "C": "Using backend for frontends or GraphQL",
            "D": "Using token refresh only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:31"
    },
    {
        "question_number": 25,
        "question_content": "Which pattern coordinates transactions that span across multiple services?",
        "options": {
            "A": "Service Mesh",
            "B": "Circuit Breaker",
            "C": "Saga",
            "D": "Webhooks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:33"
    },
    {
        "question_number": 26,
        "question_content": "What is the main characteristic of synchronous communication between microservices?",
        "options": {
            "A": "Messages are queued before delivery",
            "B": "Requests are fire-and-forget",
            "C": "Client waits for immediate response",
            "D": "Data is transferred in batch"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:35"
    },
    {
        "question_number": 27,
        "question_content": "Which mechanism is commonly used to propagate domain changes to query models?",
        "options": {
            "A": "HTTP polling",
            "B": "Direct database replication",
            "C": "Domain events and messaging",
            "D": "API Gateway transforms"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:36"
    },
    {
        "question_number": 28,
        "question_content": "How does the query side handle updates when using Event Sourcing?",
        "options": {
            "A": "By updating the database directly",
            "B": "By consuming events and updating read models accordingly",
            "C": "By translating commands into updates",
            "D": "By replacing the entire dataset"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:38"
    },
    {
        "question_number": 29,
        "question_content": "Which coordination model is more scalable in distributed transactions?",
        "options": {
            "A": "Two-Phase Commit",
            "B": "Compensating Transactions",
            "C": "Shared Database Model",
            "D": "Direct HTTP Requests"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:39"
    },
    {
        "question_number": 30,
        "question_content": "Why is the two-phase commit protocol considered unsuitable for microservices?",
        "options": {
            "A": "It is too fast",
            "B": "It lacks security",
            "C": "It introduces tight coupling and blocking",
            "D": "It doesn’t support NoSQL"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:41"
    },
    {
        "question_number": 31,
        "question_content": "Dịch vụ dựa trên SOAP hay REST nhanh hơn?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào cách triển khai",
            "D": "SOAP và REST có cùng tốc độ"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:42"
    },
    {
        "question_number": 32,
        "question_content": "Chú thích nào thường được sử dụng để chỉ định đường dẫn cho dịch vụ web?",
        "options": {
            "A": "Chú thích @Path",
            "B": "Chú thích @RestController",
            "C": "Chú thích @RequestMapping",
            "D": "Chú thích @Service"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:43"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rPhương thức HTTP nào được sử dụng cho getOrders() ?",
        "options": {
            "A": "GET",
            "B": "POST",
            "C": "PUT",
            "D": "DELETE"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:45"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rKiểu dữ liệu phản hồi của phương thức getProducts() là gì?",
        "options": {
            "A": "text/plain",
            "B": "application/json",
            "C": "application/xml",
            "D": "image/jpeg"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:46"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rKiểu dữ liệu cho yêu cầu của phương thức createProduct() là gì?",
        "options": {
            "A": "text/plain",
            "B": "application/json",
            "C": "application/xml",
            "D": "image/jpeg"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:47"
    },
    {
        "question_number": 36,
        "question_content": "Cấu trúc dữ liệu phổ biến để truyền thông tin trong Restful web service là gì?",
        "options": {
            "A": "XML",
            "B": "JSON",
            "C": "HTML",
            "D": "CSV"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:49"
    },
    {
        "question_number": 37,
        "question_content": "Trong WSDL, phần Message dùng để làm gì?",
        "options": {
            "A": "Định nghĩa các  kiểu và cấu trúc dữ liệu",
            "B": "Chứa thông tin về tài nguyên của web service",
            "C": "Chứa các thông tin bổ sung về message",
            "D": "Chứa các thư viện lập trình"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:50"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông tin nào được dịch vụ web trả về?",
        "options": {
            "A": "Tên người dùng",
            "B": "Mật khẩu",
            "C": "Thành công hay không",
            "D": "Tên người dùng và mật khẩu"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:51"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rTên của giao diện dich vụ là gì ?",
        "options": {
            "A": "RegisterAccount",
            "B": "RegisterAccountResponse",
            "C": "AccountRegistrationPortType",
            "D": "AccountRegistrationBinding"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:53"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThực thi dịch vụ tên gì",
        "options": {
            "A": "CustomerPortType",
            "B": "OnlineChargingBinding",
            "C": "OnlineChargingPortType",
            "D": "OnlineChargingService"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN691",
        "crawled_at": "2025-06-12 22:49:54"
    }
]