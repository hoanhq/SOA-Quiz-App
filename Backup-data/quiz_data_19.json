[
    {
        "question_number": 1,
        "question_content": "Một giao diện dịch vụ có thể có bao nhiêu thực thi dịch vụ",
        "options": {
            "A": "Mỗi giao diện dịch vụ chỉ được phép có duy nhất 1 thực thi",
            "B": "Số lượng giao diện dịch vụ không vượt quá số lượng giao thức triển khai",
            "C": "Số lượng giao diện dịch vụ không vượt quá số lượng endpoint triển khai",
            "D": "Mỗi giao diện có thể có nhiều thực thi"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:25:55"
    },
    {
        "question_number": 2,
        "question_content": "Độ mịn dịch vụ ảnh hưởng đến điều gì trong dịch vụ web?",
        "options": {
            "A": "Khả năng tái sử dụng và tính linh hoạt của dịch vụ",
            "B": "Khả năng mở rộng và tương tác giữa các dịch vụ",
            "C": "Khả năng hiệu suất và bảo mật của dịch vụ",
            "D": "Khả năng kết nối và tương tác với người dùng"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:25:58"
    },
    {
        "question_number": 3,
        "question_content": "Trong việc xây dựng một dịch vụ web quản lý blog, việc áp dụng độ mịn như thế nào có thể giúp tăng khả năng tái sử dụng của các chức năng?",
        "options": {
            "A": "Áp dụng độ mịn để chia nhỏ các chức năng như quản lý bài viết, quản lý danh mục, quản lý người dùng",
            "B": "Áp dụng độ mịn để gộp các chức năng blog thành một dịch vụ duy nhất",
            "C": "Áp dụng độ mịn không ảnh hưởng đến khả năng tái sử dụng của các chức năng",
            "D": "Áp dụng độ mịn chỉ cần xác định các API cho việc xây dựng blog"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:25:59"
    },
    {
        "question_number": 4,
        "question_content": "Chỉ ra các mô hình dịch vụ phổ biến?",
        "options": {
            "A": "Task service, Microservice, Management service, Utility service",
            "B": "Task service, Microservice, Entity service, Utility service",
            "C": "Task service, Microservice, Entity service, Identity service",
            "D": "Routing service, Microservice, Entity service, Utility service"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:00"
    },
    {
        "question_number": 5,
        "question_content": "Microservice có tính tự chủ cao nhằm mục đích gì?",
        "options": {
            "A": "Tăng cường tính linh hoạt của hệ thống",
            "B": "Giảm thiểu sự phụ thuộc vào các tài nguyên bên ngoài",
            "C": "Đảm bảo tính bảo mật của dịch vụ",
            "D": "Tạo điều kiện cho việc triển khai dư thừa"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:01"
    },
    {
        "question_number": 6,
        "question_content": "Điều kiện để một dịch vụ được coi là bất khả tri?",
        "options": {
            "A": "Chứa logic có khả năng tái sử dụng bởi nhiều quy trình kinh doanh",
            "B": "Chứa logic được sử dụng trong một quy trình kinh doanh duy nhất",
            "C": "Các chức năng được phát triển từ các thực thể",
            "D": "Các chức năng chỉ gồm logic không liên quan đến thực thể"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:02"
    },
    {
        "question_number": 7,
        "question_content": "Điều gì KHÔNG đúng khi nói về việc xác định các tài nguyên trong giai đoạn mô hình hóa dịch vụ ?",
        "options": {
            "A": "Các tài nguyên có thể được biểu diễn bằng dấu gạch chéo làm dấu phân cách",
            "B": "Các tài nguyên nên được giữ ở dạng đơn giản trong giai đoạn này",
            "C": "Các tài nguyên xác định có thể không liên quan đến các thực thể kinh doanh đã biết",
            "D": "Các tài nguyên cần phải tuân thủ hoàn toàn các tiêu chuẩn URL ngay từ đầu"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:03"
    },
    {
        "question_number": 8,
        "question_content": "Để mô hình hóa quan hệ giữa các tài nguyên trong dịch vụ REST, ta sử dụng phương pháp nào?",
        "options": {
            "A": "Liên kết",
            "B": "Truy xuất",
            "C": "Truy vấn",
            "D": "Thừa kế"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:04"
    },
    {
        "question_number": 9,
        "question_content": "Sau khi phân tách quy trình kinh doanh thành các hành động chi tiết, những loại hành động nào không phù hợp cho các bước mô hình hóa dịch vụ REST tiếp theo và nên được loại bỏ?",
        "options": {
            "A": "Các hành động liên quan đến truy cập cơ sở dữ liệu",
            "B": "Các hành động yêu cầu sử dụng giao diện người dùng đồ họa",
            "C": "Các hành động liên quan đến bảo mật và mã hóa thông tin",
            "D": "Các hành động cần phải thực hiện bởi con người hoặc các hệ thống cũ không thể đóng gói thành dịch vụ"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:05"
    },
    {
        "question_number": 10,
        "question_content": "Khi lắp ráp một WSDL từ các mô-đun, điều gì xảy ra với namespaces?",
        "options": {
            "A": "Số lượng namespaces giảm xuống",
            "B": "Số lượng namespaces tăng lên",
            "C": "Các namespaces không còn cần thiết bị loại bỏ",
            "D": "Các namespaces được gộp lại để tạo ra một tài liệu WSDL duy nhất"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:07"
    },
    {
        "question_number": 11,
        "question_content": "Điều gì quan trọng để một SOA đáp ứng yêu cầu hiệu năng trong khi vẫn duy trì tiêu chuẩn?",
        "options": {
            "A": "Tính nhất quán và có thể dự đoán",
            "B": "Mức độ chi tiết dịch vụ tốt hơn",
            "C": "Giảm số lượng dữ liệu được xử lý",
            "D": "Sử dụng một giao thức truyền thông duy nhất"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:08"
    },
    {
        "question_number": 12,
        "question_content": "Thiết kế dịch vụ tiện ích tập trung vào yếu tố nào?",
        "options": {
            "A": "Tính độc lập và tái sử dụng",
            "B": "Tính bảo mật cao",
            "C": "Tốc độ xử lý nhanh",
            "D": "Khả năng tích hợp"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:09"
    },
    {
        "question_number": 13,
        "question_content": "What is the main characteristic of synchronous communication between microservices?",
        "options": {
            "A": "Messages are queued before delivery",
            "B": "Requests are fire-and-forget",
            "C": "Client waits for immediate response",
            "D": "Data is transferred in batch"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:10"
    },
    {
        "question_number": 14,
        "question_content": "Which pattern coordinates transactions that span across multiple services?",
        "options": {
            "A": "Service Mesh",
            "B": "Circuit Breaker",
            "C": "Saga",
            "D": "Webhooks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:11"
    },
    {
        "question_number": 15,
        "question_content": "Which object-oriented design principle is encouraged for complex business logic?",
        "options": {
            "A": "Encapsulation",
            "B": "Inheritance",
            "C": "Applying object-oriented design principles",
            "D": "Polymorphism"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:12"
    },
    {
        "question_number": 16,
        "question_content": "What principle helps isolate changes in business logic?",
        "options": {
            "A": "Modularization",
            "B": "Domain-driven design",
            "C": "Encapsulation",
            "D": "Continuous deployment"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:13"
    },
    {
        "question_number": 17,
        "question_content": "What is a characteristic of a well-designed microservice?",
        "options": {
            "A": "High interdependency",
            "B": "Shared persistent storage",
            "C": "Encapsulation of business capabilities",
            "D": "Monolithic design"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:14"
    },
    {
        "question_number": 18,
        "question_content": "What is a benefit of decentralized governance in microservices?",
        "options": {
            "A": "Uniform technology stack",
            "B": "Freedom to choose suitable tools per service",
            "C": "No need for service boundaries",
            "D": "Eliminating testing requirements"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:16"
    },
    {
        "question_number": 19,
        "question_content": "In Kubernetes, what mechanism can automatically roll back a failed deployment?",
        "options": {
            "A": "Pod eviction",
            "B": "Horizontal scaling",
            "C": "Liveness probe",
            "D": "Deployment controller"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:18"
    },
    {
        "question_number": 20,
        "question_content": "What challenge is commonly associated with deploying multiple microservices simultaneously?",
        "options": {
            "A": "Slow startup time",
            "B": "Increased service discovery traffic",
            "C": "Deployment sequencing and coordination",
            "D": "Lack of logging"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:19"
    },
    {
        "question_number": 21,
        "question_content": "Which combination often supports scalable and flexible microservice systems?",
        "options": {
            "A": "SOAP and Eventual Consistency",
            "B": "REST and Event Replay",
            "C": "CQRS and Event Sourcing",
            "D": "CRUD and Load Balancing"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:20"
    },
    {
        "question_number": 22,
        "question_content": "In event sourcing, a projection should be:",
        "options": {
            "A": "Highly consistent and blocking",
            "B": "Mutable and centrally controlled",
            "C": "Eventually consistent and read-optimized",
            "D": "Stored alongside the event log"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:22"
    },
    {
        "question_number": 23,
        "question_content": "What is the challenge with having a one-size-fits-all API in microservices?",
        "options": {
            "A": "It is always slower than direct DB queries",
            "B": "It requires GraphQL",
            "C": "Different clients have different data needs and network constraints",
            "D": "It reduces reusability of services"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:24"
    },
    {
        "question_number": 24,
        "question_content": "Which factor is NOT a common motivation for using API gateways?",
        "options": {
            "A": "Centralizing concerns like security",
            "B": "Reducing coupling between clients and services",
            "C": "Providing direct access to all service APIs",
            "D": "Simplifying response aggregation"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:25"
    },
    {
        "question_number": 25,
        "question_content": "What technique helps handle messages that cannot be processed immediately?",
        "options": {
            "A": "Web scraping",
            "B": "Dead letter queue",
            "C": "Session caching",
            "D": "Rate limiting"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:26"
    },
    {
        "question_number": 26,
        "question_content": "Which pattern coordinates transactions that span across multiple services?",
        "options": {
            "A": "Service Mesh",
            "B": "Circuit Breaker",
            "C": "Saga",
            "D": "Webhooks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:27"
    },
    {
        "question_number": 27,
        "question_content": "Which of the following best describes eventual consistency in a query model?",
        "options": {
            "A": "Read and write operations are immediately consistent",
            "B": "Data is written once and never changed",
            "C": "Read models may lag behind write models due to asynchronous updates",
            "D": "All services write to the same database"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:28"
    },
    {
        "question_number": 28,
        "question_content": "How can query models support different consumer needs in microservices?",
        "options": {
            "A": "By providing a single generic model",
            "B": "By customizing views per use case or API endpoint",
            "C": "By including all write data in the query side",
            "D": "By storing commands and queries in one schema"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:29"
    },
    {
        "question_number": 29,
        "question_content": "Which protocol is traditionally used in centralized transaction coordination?",
        "options": {
            "A": "HTTP",
            "B": "gRPC",
            "C": "Two-Phase Commit",
            "D": "REST"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:30"
    },
    {
        "question_number": 30,
        "question_content": "What does ACID stand for in transaction management?",
        "options": {
            "A": "Atomicity, Consistency, Isolation, Durability",
            "B": "Automation, Compatibility, Integrity, Deployment",
            "C": "Access, Coordination, Integrity, Distribution",
            "D": "Atomicity, Centralization, Implementation, Durability"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:31"
    },
    {
        "question_number": 31,
        "question_content": "Lợi ích chính của việc sử dụng dịch vụ web dựa trên REST là gì?",
        "options": {
            "A": "Dễ phát triển hơn SOAP",
            "B": "Hiệu quả hơn SOAP",
            "C": "An toàn hơn SOAP",
            "D": "Đơn giản hơn SOAP"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:32"
    },
    {
        "question_number": 32,
        "question_content": "Dịch vụ dựa trên SOAP hay REST tốt hơn cho ứng dụng IoT?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào ứng dụng",
            "D": "SOAP và REST đều có thể được sử dụng cho ứng dụng IoT"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:33"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rĐường dẫn của phương thức deleteOrder() là gì?",
        "options": {
            "A": "/orders",
            "B": "/order",
            "C": "/orders/{id}",
            "D": "/orders/delete"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:35"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rKiểu dữ liệu cho phương thức updateProduct() là gì?",
        "options": {
            "A": "multipart/form-data",
            "B": "application/json",
            "C": "application/xml",
            "D": "image/jpeg"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:36"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rHTTP Request nào sẽ không được chuyển cho updateOrder () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /orders/15",
            "B": "Phương thức PUT, đường dẫn /orders",
            "C": "Phương thức PUT, đường dẫn /orders/16",
            "D": "Phương thức PUT, đường dẫn /orders/17"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:37"
    },
    {
        "question_number": 36,
        "question_content": "Phần tử nào trong SOAP chứa thông tin về tên phương thức?",
        "options": {
            "A": "Body",
            "B": "Header",
            "C": "Envelope",
            "D": "Method"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:38"
    },
    {
        "question_number": 37,
        "question_content": "Trong WSDL, một PortType có thể có bao nhiêu phương thức?",
        "options": {
            "A": "Tối đa là 100 phương thức",
            "B": "Tối đa là 20 phương thức",
            "C": "Không giới hạn",
            "D": "Chỉ một phương thức"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:39"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rDịch vụ web tên gì?",
        "options": {
            "A": "AccountRegistrationService",
            "B": "AccountRegistration",
            "C": "AccountRegistrationPortType",
            "D": "AccountRegistrationBinding"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:41"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThông điệp nào có thể được gửi đến dịch vụ web OnlineCharging?",
        "options": {
            "A": "ChargeRequest",
            "B": "ChargeResponse",
            "C": "Charge",
            "D": "ChargeResult"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:42"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rĐâu không phải là một phần tử phức ?",
        "options": {
            "A": "Customer",
            "B": "CustomerId",
            "C": "Charge",
            "D": "ChargeResult"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN140",
        "crawled_at": "2025-06-12 12:26:43"
    }
]