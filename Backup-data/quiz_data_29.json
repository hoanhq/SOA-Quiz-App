[
    {
        "question_number": 1,
        "question_content": "Loose coupling trong dịch vụ web dựa trên tư tưởng nảo sau đây?",
        "options": {
            "A": "Sự kết hợp chặt chẽ giữa giao diện người dùng và logic xử lý",
            "B": "Sự tách biệt giữa giao diện người dùng và logic xử lý",
            "C": "Sự tương tác trực tiếp giữa giao diện người dùng và logic xử lý",
            "D": "Sự phụ thuộc mạnh vào giao diện người dùng"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:34"
    },
    {
        "question_number": 2,
        "question_content": "Trong việc xây dựng một dịch vụ web quản lý blog, việc áp dụng độ mịn như thế nào có thể giúp tăng khả năng tái sử dụng của các chức năng?",
        "options": {
            "A": "Áp dụng độ mịn để chia nhỏ các chức năng như quản lý bài viết, quản lý danh mục, quản lý người dùng",
            "B": "Áp dụng độ mịn để gộp các chức năng blog thành một dịch vụ duy nhất",
            "C": "Áp dụng độ mịn không ảnh hưởng đến khả năng tái sử dụng của các chức năng",
            "D": "Áp dụng độ mịn chỉ cần xác định các API cho việc xây dựng blog"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:35"
    },
    {
        "question_number": 3,
        "question_content": "Khi nào nên sử dụng dịch vụ fine-grained ?",
        "options": {
            "A": "Khi cần cung cấp các chức năng có phạm vi hạn chế",
            "B": "Khi cần cung cấp các chức năng tổng quát và phổ biến",
            "C": "Khi cần cung cấp các chức năng rộng lớn và mạnh mẽ",
            "D": "Khi cần cung cấp các chức năng cụ thể và linh hoạt"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:36"
    },
    {
        "question_number": 4,
        "question_content": "Dịch vụ thực thể là gì?",
        "options": {
            "A": "Dịch vụ không thể tái sử dụng với bối cảnh chức năng khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "B": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "C": "Dịch vụ không thể tái sử dụng với bối cảnh chức năng bất khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan",
            "D": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng bất khả tri liên quan đến một hoặc nhiều thực thể kinh doanh liên quan"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:37"
    },
    {
        "question_number": 5,
        "question_content": "Mục đích chính của quá trình mô hình hóa dịch vụ trong kiến trúc dịch vụ (SOA) là gì?",
        "options": {
            "A": "Xác định quy trình kết hợp các dịch vụ thành một giải pháp hướng dịch vụ",
            "B": "Xác định các yêu cầu và chức năng của các dịch vụ trong hệ thống",
            "C": "Tổ chức một lượng lớn các đơn vị logic để cuối cùng chúng có thể được tập hợp lại thành các giải pháp hướng dịch vụ",
            "D": "Xác định cấu trúc và quan hệ giữa các dịch vụ trong kiến trúc dịch vụ"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:37"
    },
    {
        "question_number": 6,
        "question_content": "Các giai đoạn đầu tiên khi phân tích kho dịch vụ là gì?",
        "options": {
            "A": "Define Technology Architecture",
            "B": "Define Enterprise Business Models",
            "C": "Perform Service-Oriented Analysis",
            "D": "Define Service Inventory Blueprint"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:38"
    },
    {
        "question_number": 7,
        "question_content": "Sự khác biệt chính giữa RESTful services và SOAP-based web services trong phân tích hướng dịch vụ là gì?",
        "options": {
            "A": "Tối ưu hóa hiệu suất của các dịch vụ",
            "B": "Xác định ranh giới chính xác cho các dịch vụ",
            "C": "Xác định giao diện của các dịch vụ",
            "D": "Xác định các thực thể kinh doanh cần dịch vụ hỗ trợ"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:39"
    },
    {
        "question_number": 8,
        "question_content": "Khi nào một logic khả tri (non-agnostic) có thể được đóng gói thành một microservice riêng biệt?",
        "options": {
            "A": "Chi phí triển khai và bảo trì",
            "B": "Mức độ độc lập về logic và dữ liệu",
            "C": "Yêu cầu hiệu suất và khả năng mở rộng",
            "D": "Mức độ phức tạp của dịch vụ"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:40"
    },
    {
        "question_number": 9,
        "question_content": "Trong phân tích hướng dịch vụ, các agnostic logic trong quy trình kinh doanh là những logic như thế nào?",
        "options": {
            "A": "Có khả năng tái sử dụng lại cao trong nhiều quy trình nghiệp vụ",
            "B": "Chỉ phục vụ một quy trình nghiệp vụ cụ thể và không thể tái sử dụng trong các quy trình khác",
            "C": "Liên quan đến việc xử lý dữ liệu của các hệ thống cụ thể mà không phụ thuộc vào ngữ cảnh nghiệp vụ",
            "D": "Yêu cầu sự tùy chỉnh đặc thù cho từng quy trình nghiệp vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:41"
    },
    {
        "question_number": 10,
        "question_content": "Kết hợp style:document + use:literal được ưu tiên trong SOA vì điều gì?",
        "options": {
            "A": "Hỗ trợ việc nhúng toàn bộ tài liệu XML trong phần thân SOAP",
            "B": "Hỗ trợ việc giao tiếp RPC truyền thống",
            "C": "Hỗ trợ mô hình gửi tin theo kiểu tài liệu là chìa khóa để thực hiện các tính năng của nhiều thông số WS-* khác nhau",
            "D": "Hỗ trợ khái niệm của các thông số WS-*"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:43"
    },
    {
        "question_number": 11,
        "question_content": "Thuộc tính style với giá trị \"document\" hỗ trợ việc gì?",
        "options": {
            "A": "Nhúng toàn bộ tài liệu XML trong phần thân SOAP",
            "B": "Biểu diễn dữ liệu loại tham số",
            "C": "Hỗ trợ việc giao tiếp RPC truyền thống",
            "D": "Áp dụng các kiểu dữ liệu XML Schema"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:44"
    },
    {
        "question_number": 12,
        "question_content": "Quy ước đặt tên hoạt động dịch vụ cho các dịch vụ thực thể (Service operations for entity services) là gì?",
        "options": {
            "A": "Chỉ sử dụng danh từ",
            "B": "Sử dụng động từ và không lặp lại tên thực thể",
            "C": "Sử dụng động từ + danh từ",
            "D": "Sử dụng cấu trúc \"động từ + danh từ\" hoặc chỉ danh từ"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:45"
    },
    {
        "question_number": 13,
        "question_content": "What can be used to enable message persistence in asynchronous systems?",
        "options": {
            "A": "Load balancer",
            "B": "Service discovery",
            "C": "Message queue",
            "D": "Circuit breaker"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:46"
    },
    {
        "question_number": 14,
        "question_content": "What is a benefit of using a circuit breaker in service communication?",
        "options": {
            "A": "Enables stateful routing",
            "B": "Improves serialization speed",
            "C": "Prevents cascading failures",
            "D": "Provides data encryption"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:47"
    },
    {
        "question_number": 15,
        "question_content": "What is the role of a domain model in a microservice application?",
        "options": {
            "A": "To define UI layout",
            "B": "To enforce security policies",
            "C": "To implement business rules and logic",
            "D": "To manage static content"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:49"
    },
    {
        "question_number": 16,
        "question_content": "Which pattern should be used when object references span multiple services?",
        "options": {
            "A": "Repository pattern",
            "B": "Decorator pattern",
            "C": "Aggregate pattern",
            "D": "Strategy pattern"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:50"
    },
    {
        "question_number": 17,
        "question_content": "What is one of the main goals of microservice architecture?",
        "options": {
            "A": "To minimize code reuse",
            "B": "To tightly couple services",
            "C": "To achieve modularity and scalability",
            "D": "To use monolithic deployment"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:51"
    },
    {
        "question_number": 18,
        "question_content": "What is a common challenge in microservices data consistency?",
        "options": {
            "A": "High query speed",
            "B": "Join queries",
            "C": "Distributed transactions",
            "D": "Using MongoDB"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:53"
    },
    {
        "question_number": 19,
        "question_content": "Which of the following tools is commonly used for container orchestration?",
        "options": {
            "A": "Docker",
            "B": "Consul",
            "C": "Kubernetes",
            "D": "Helm"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:54"
    },
    {
        "question_number": 20,
        "question_content": "Which method helps to control traffic flow during progressive delivery?",
        "options": {
            "A": "Webhooks",
            "B": "Feature flags",
            "C": "Service mesh",
            "D": "Sidecar pattern"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:56"
    },
    {
        "question_number": 21,
        "question_content": "In event sourcing, what is an 'event' typically?",
        "options": {
            "A": "An object describing a user interface action",
            "B": "A notification for external systems",
            "C": "A record of something that has occurred in the system",
            "D": "A script executed on database change"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:57"
    },
    {
        "question_number": 22,
        "question_content": "What challenge is commonly associated with event sourcing?",
        "options": {
            "A": "Fast writes to the database",
            "B": "Scaling read operations",
            "C": "Keeping events small in size",
            "D": "Rebuilding state after many events"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:58"
    },
    {
        "question_number": 23,
        "question_content": "How can a gateway handle varied client needs efficiently?",
        "options": {
            "A": "Through DNS switching",
            "B": "By rejecting requests not from mobile",
            "C": "Using backend for frontends or GraphQL",
            "D": "Using token refresh only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:07:59"
    },
    {
        "question_number": 24,
        "question_content": "What is the challenge with having a one-size-fits-all API in microservices?",
        "options": {
            "A": "It is always slower than direct DB queries",
            "B": "It requires GraphQL",
            "C": "Different clients have different data needs and network constraints",
            "D": "It reduces reusability of services"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:00"
    },
    {
        "question_number": 25,
        "question_content": "What is a common drawback of tightly coupled service communication?",
        "options": {
            "A": "Improved fault tolerance",
            "B": "Increased system observability",
            "C": "Reduced deployment flexibility",
            "D": "Faster communication"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:01"
    },
    {
        "question_number": 26,
        "question_content": "What is the role of a message broker in microservice communication?",
        "options": {
            "A": "Transform HTTP to gRPC",
            "B": "Store configuration settings",
            "C": "Coordinate and route messages",
            "D": "Serve static content"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:03"
    },
    {
        "question_number": 27,
        "question_content": "Which of the following best describes eventual consistency in a query model?",
        "options": {
            "A": "Read and write operations are immediately consistent",
            "B": "Data is written once and never changed",
            "C": "Read models may lag behind write models due to asynchronous updates",
            "D": "All services write to the same database"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:04"
    },
    {
        "question_number": 28,
        "question_content": "How are read models typically kept up-to-date?",
        "options": {
            "A": "Through manual synchronization",
            "B": "By querying write databases",
            "C": "By consuming and handling domain events",
            "D": "Through direct API calls"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:05"
    },
    {
        "question_number": 29,
        "question_content": "What is the role of a transaction coordinator in traditional systems?",
        "options": {
            "A": "To split transactions",
            "B": "To ensure message encryption",
            "C": "To coordinate commit/rollback across resources",
            "D": "To validate microservice boundaries"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:06"
    },
    {
        "question_number": 30,
        "question_content": "What does ACID stand for in transaction management?",
        "options": {
            "A": "Atomicity, Consistency, Isolation, Durability",
            "B": "Automation, Compatibility, Integrity, Deployment",
            "C": "Access, Coordination, Integrity, Distribution",
            "D": "Atomicity, Centralization, Implementation, Durability"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:08"
    },
    {
        "question_number": 31,
        "question_content": "Dịch vụ dựa trên SOAP hay REST tốt hơn cho ứng dụng di động?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào ứng dụng",
            "D": "SOAP và REST đều có thể được sử dụng cho ứng dụng di động"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:09"
    },
    {
        "question_number": 32,
        "question_content": "Trường hợp sử dụng phổ biến nhất cho SOAP là gì?",
        "options": {
            "A": "Tạo ứng dụng di động",
            "B": "Tạo ứng dụng web",
            "C": "Tạo ứng dụng doanh nghiệp",
            "D": "Tạo ứng dụng trên máy tính để bàn"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:10"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rKiểu dữ liệu cho phương thức updateProduct() là gì?",
        "options": {
            "A": "multipart/form-data",
            "B": "application/json",
            "C": "application/xml",
            "D": "image/jpeg"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:12"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rPhương thức HTTP cho phương thức updateProduct() là gì?",
        "options": {
            "A": "GET",
            "B": "POST",
            "C": "PUT",
            "D": "DELETE"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:13"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rHTTP Request nào sẽ được chuyển cho updateOrder () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /orders",
            "B": "Phương thức PUT, đường dẫn /orders/15",
            "C": "Phương thức GET, đường dẫn /orders/15",
            "D": "Phương thức GET, đường dẫn /orders"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:14"
    },
    {
        "question_number": 36,
        "question_content": "Trong WSDL,  phần tử được sử dụng để chỉ định định dạng dữ liệu trong phần body là gì?",
        "options": {
            "A": "SOAP Style",
            "B": "SOAP Binding",
            "C": "SOAP Encoding",
            "D": "SOAP Transport"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:15"
    },
    {
        "question_number": 37,
        "question_content": "RESTful web service sử dụng phương thức nào để quy định quyền truy cập tới các resource?",
        "options": {
            "A": "HTTP Methods",
            "B": "HTTP Headers",
            "C": "URI",
            "D": "JSON"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:16"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThực thi dịch vụ tên gì",
        "options": {
            "A": "CustomerPortType",
            "B": "OnlineChargingBinding",
            "C": "OnlineChargingPortType",
            "D": "OnlineChargingService"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:18"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThông tin nào được dịch vụ web trả về?",
        "options": {
            "A": "Thông báo mô tả trạng thái của giao dịch nạp tiền",
            "B": "Trạng thái của giao dịch nạp tiền và thông điệp kèm theo",
            "C": "Mã khách hàng và số tiền đã nạp",
            "D": "Mã khách hàng, tên khách hàng, số tiền đã nạp và số thẻ tín dụng"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:19"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rĐâu là phương thức mà dịch vụ cung cấp ?",
        "options": {
            "A": "Register",
            "B": "AccountRegistrationPortType",
            "C": "RegisterAccount",
            "D": "AccountRegistrationService"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN223",
        "crawled_at": "2025-06-12 14:08:20"
    }
]