[
    {
        "question_number": 24,
        "question_content": "Which pattern is best suited for tailoring APIs to different client needs like mobile vs desktop?",
        "options": {
            "A": "Backend for frontends",
            "B": "Service discovery",
            "C": "Single page apps",
            "D": "Event sourcing"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:15"
    },
    {
        "question_number": 28,
        "question_content": "Which database type is often used for read models in microservices?",
        "options": {
            "A": "Graph databases for all use cases",
            "B": "Write-optimized SQL only",
            "C": "Read-optimized NoSQL or denormalized SQL",
            "D": "Blockchain ledgers"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:17"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho updateProduct () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products/15",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:18"
    },
    {
        "question_number": 22,
        "question_content": "What is the purpose of CQRS when used with event sourcing?",
        "options": {
            "A": "To execute events faster",
            "B": "To separate the command model from the read model",
            "C": "To replicate data to multiple nodes",
            "D": "To reduce storage cost"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:21"
    },
    {
        "question_number": 12,
        "question_content": "Điều nào sau đây là bước đầu tiên trong thiết kế hợp đồng dịch vụ web?",
        "options": {
            "A": "Xác định các cấu trúc thông điệp trong khu vực WSDL types",
            "B": "Thiết kế logic dịch vụ tương ứng",
            "C": "Xác định quy ước đặt tên cho các hoạt động",
            "D": "Định nghĩa endpoint dịch vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:26"
    },
    {
        "question_number": 31,
        "question_content": "Nếu không cài đặt gì thêm, SOAP hay REST có thể sử dụng máy chủ caching?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Cả SOAP và REST đều có thể sử dụng máy chủ caching",
            "D": "Không SOAP và REST đều không thể sử dụng máy chủ caching"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:30"
    },
    {
        "question_number": 13,
        "question_content": "What is the role of a message broker in microservice communication?",
        "options": {
            "A": "Transform HTTP to gRPC",
            "B": "Store configuration settings",
            "C": "Coordinate and route messages",
            "D": "Serve static content"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:31"
    },
    {
        "question_number": 17,
        "question_content": "What is a characteristic of a well-designed microservice?",
        "options": {
            "A": "High interdependency",
            "B": "Shared persistent storage",
            "C": "Encapsulation of business capabilities",
            "D": "Monolithic design"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:35"
    },
    {
        "question_number": 11,
        "question_content": "Chức năng chính của dịch vụ tác vụ trong thiết kế hướng dịch vụ là gì?",
        "options": {
            "A": "Xử lý các chức năng xử lý cấp thấp",
            "B": "Điều phối một thành phần dịch vụ cơ sở",
            "C": "Quản lý kết nối cơ sở dữ liệu",
            "D": "Xử lý phân tích dữ liệu theo thời gian thực"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:36"
    },
    {
        "question_number": 36,
        "question_content": "Trong SOAP,  Envelope được sử dụng để làm gì?",
        "options": {
            "A": "Bao bọc toàn bộ message",
            "B": "Chứa các tham số đầu vào của phương thức",
            "C": "Chứa các thông tin về tài nguyên của web service",
            "D": "Chứa các thông tin bổ sung về message"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:38"
    },
    {
        "question_number": 29,
        "question_content": "What is the role of a compensating transaction in the saga pattern?",
        "options": {
            "A": "To optimize performance",
            "B": "To enhance security",
            "C": "To undo the effect of a previous transaction",
            "D": "To coordinate services"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:41"
    },
    {
        "question_number": 9,
        "question_content": "Khi áp dụng mô hình hóa dịch vụ REST cho quy trình kinh doanh “Xử lý yêu cầu bảo hiểm”, tại sao hành động \"Tính toán số tiền bồi thường dựa trên quy định của hợp đồng\" được phân loại là non- agnostic?",
        "options": {
            "A": "Vì nó không phụ thuộc vào bất kỳ ngữ cảnh cụ thể nào",
            "B": "Vì nó có thể tái sử dụng trong các quy trình khác mà không cần sửa đổi",
            "C": "Vì hành động này tuân theo logic riêng biệt áp dụng cho hoạt động bảo hiểm",
            "D": "Vì nó đòi hỏi sự xác minh của thông tin khách hàng"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:43"
    },
    {
        "question_number": 19,
        "question_content": "In a microservices environment, what does 'immutable infrastructure' imply?",
        "options": {
            "A": "Infrastructure cannot be resized",
            "B": "Infrastructure is updated in-place",
            "C": "Infrastructure is replaced rather than changed",
            "D": "Infrastructure is read-only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:44"
    },
    {
        "question_number": 18,
        "question_content": "What does 'bounded context' refer to in microservice design?",
        "options": {
            "A": "A shared model between services",
            "B": "A service being deployed on multiple servers",
            "C": "A clear boundary around a specific business capability",
            "D": "Use of shared data schemas"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:46"
    },
    {
        "question_number": 30,
        "question_content": "Why is the two-phase commit protocol considered unsuitable for microservices?",
        "options": {
            "A": "It is too fast",
            "B": "It lacks security",
            "C": "It introduces tight coupling and blocking",
            "D": "It doesn’t support NoSQL"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:48"
    },
    {
        "question_number": 2,
        "question_content": "Độ mịn dịch vụ ảnh hưởng đến điều gì trong dịch vụ web?",
        "options": {
            "A": "Khả năng tái sử dụng và tính linh hoạt của dịch vụ",
            "B": "Khả năng mở rộng và tương tác giữa các dịch vụ",
            "C": "Khả năng hiệu suất và bảo mật của dịch vụ",
            "D": "Khả năng kết nối và tương tác với người dùng"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:51"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rĐâu không phải là một phần tử phức ?",
        "options": {
            "A": "Customer",
            "B": "CustomerId",
            "C": "Charge",
            "D": "ChargeResult"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:54"
    },
    {
        "question_number": 10,
        "question_content": "Việc tạo các sơ đồ XML riêng cho từng thành phần dịch vụ giúp đạt được điều gì?",
        "options": {
            "A": "Tăng tính độc lập và khả năng tái sử dụng của từng thành phần dịch vụ",
            "B": "Giảm thời gian triển khai dịch vụ",
            "C": "Đảm bảo rằng tất cả các dịch vụ đều tuân theo cùng một chuẩn",
            "D": "Tăng hiệu suất xử lý của dịch vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:52:57"
    },
    {
        "question_number": 21,
        "question_content": "Which storage format is most aligned with event sourcing?",
        "options": {
            "A": "Document-oriented databases",
            "B": "Relational tables with fixed schemas",
            "C": "Append-only logs",
            "D": "Key-value stores"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:02"
    },
    {
        "question_number": 15,
        "question_content": "Which event pattern supports eventual consistency in microservices?",
        "options": {
            "A": "Observer",
            "B": "Saga",
            "C": "Domain Event",
            "D": "Chain of Responsibility"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:05"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ không được chuyển cho updateProduct () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /products/15",
            "B": "Phương thức PUT, đường dẫn /products",
            "C": "Phương thức PUT, đường dẫn /products/16",
            "D": "Phương thức PUT, đường dẫn /products/17"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:08"
    },
    {
        "question_number": 25,
        "question_content": "What is a common drawback of tightly coupled service communication?",
        "options": {
            "A": "Improved fault tolerance",
            "B": "Increased system observability",
            "C": "Reduced deployment flexibility",
            "D": "Faster communication"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:11"
    },
    {
        "question_number": 32,
        "question_content": "Nhược điểm  chínhcủa việc sử dụng REST là gì?",
        "options": {
            "A": "Không dễ phát triển như SOAP",
            "B": "Không an toàn như SOAP",
            "C": "Không phải là một giao thức tiêu chuẩn",
            "D": "Không hiệu quả như SOAP"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:14"
    },
    {
        "question_number": 14,
        "question_content": "Why is idempotency important in asynchronous communication?",
        "options": {
            "A": "To increase bandwidth",
            "B": "To reduce latency",
            "C": "To ensure reliable retries",
            "D": "To optimize caching"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:16"
    },
    {
        "question_number": 16,
        "question_content": "Which pattern is primarily used in the FTGO application's business logic?",
        "options": {
            "A": "Procedural script",
            "B": "Transaction script",
            "C": "Domain model",
            "D": "Saga"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:20"
    },
    {
        "question_number": 1,
        "question_content": "Ví dụ nào dưới đây là không phải  là 1 dịch vụ web đơn giản",
        "options": {
            "A": "Xem thông tin thời tiết",
            "B": "Lấy thông tin tỷ giá",
            "C": "Lấy thông tin báo giá",
            "D": "Kiếm tra sự sãn có của một mặt hàng đã biết"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:21"
    },
    {
        "question_number": 26,
        "question_content": "What can be used to enable message persistence in asynchronous systems?",
        "options": {
            "A": "Load balancer",
            "B": "Service discovery",
            "C": "Message queue",
            "D": "Circuit breaker"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:23"
    },
    {
        "question_number": 4,
        "question_content": "Các đặc điểm của SOA?",
        "options": {
            "A": "Business driven, Neutral Driven, Composition Centric,Enterprise-Centric",
            "B": "Business driven, Neutral Driven, Flexibility,Enterprise-Centric",
            "C": "Neutral Driven, Composition Centric,Enterprise-Centric",
            "D": "Accuracy, Neutral Driven, Flexibility,Enterprise-Centric"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:27"
    },
    {
        "question_number": 6,
        "question_content": "Đặc điểm nào sau đây không nằm trong các đặc trưng của mô hình SOA?",
        "options": {
            "A": "Phát triển mô hình riêng lẻ",
            "B": "Hướng mô hình kinh doanh",
            "C": "Lấy doanh nghiệp làm trung tâm",
            "D": "Nhà cung cấp trung lập"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:29"
    },
    {
        "question_number": 3,
        "question_content": "SOA giúp cải thiện tính chất gì của hệ thống phần mềm?",
        "options": {
            "A": "Linh hoạt và tái sử dụng",
            "B": "Tích cực và đồng bộ",
            "C": "An toàn và bảo mật",
            "D": "Phổ biến và hiệu quả"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:32"
    },
    {
        "question_number": 23,
        "question_content": "Which factor is NOT a common motivation for using API gateways?",
        "options": {
            "A": "Centralizing concerns like security",
            "B": "Reducing coupling between clients and services",
            "C": "Providing direct access to all service APIs",
            "D": "Simplifying response aggregation"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:34"
    },
    {
        "question_number": 7,
        "question_content": "Yếu tố nào sau đây là một trong những cân nhắc điển hình khi quyết định đóng gói một logic trong kinh doanh thành một microservice riêng biệt?",
        "options": {
            "A": "Tính tự chủ cao hơn",
            "B": "Thiết kế giao diện người dùng",
            "C": "Phát triển và bảo trì mã nguồn dễ dàng",
            "D": "Tích hợp với các đối tác bên ngoài"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:36"
    },
    {
        "question_number": 27,
        "question_content": "How do eventual consistency models improve scalability?",
        "options": {
            "A": "By avoiding distributed data",
            "B": "By using centralized databases",
            "C": "By decoupling reads from writes and using asynchronous updates",
            "D": "By executing joins across services"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:40"
    },
    {
        "question_number": 37,
        "question_content": "Trong WSDL, phần binding dùng để làm gì?",
        "options": {
            "A": "Chứa các thư viện lập trình",
            "B": "Chứa các tài nguyên của web service",
            "C": "Mô tả sự thực thi của 1 giao diện",
            "D": "Chứa các tài liệu hướng dẫn"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:45"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThông tin nào được yêu cầu khi gửi dữ liệu đến dịch vụ web?",
        "options": {
            "A": "Mã khách hàng và số tiền nạp",
            "B": "Tên khách hàng và số tiền nạp",
            "C": "Mã khách hàng, tên khách hàng và số tiền nạp",
            "D": "Mã khách hàng, tên khách hàng, số tiền nạp và số thẻ tín dụng"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:48"
    },
    {
        "question_number": 5,
        "question_content": "Một trong những đặc điểm cơ bản phân biệt SOA/kiến trúc công nghệ hướng dịch vụ với các dạng kiến trúc phân tán khác là gì?",
        "options": {
            "A": "Tính tương thích (Compatibility)",
            "B": "Tính linh hoạt (Flexibility)",
            "C": "Tính tập trung vào thành phần (Component-centric)",
            "D": "Tính phân tán (Decentralization)"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:51"
    },
    {
        "question_number": 20,
        "question_content": "Which of the following best supports multi-environment configuration in deployment?",
        "options": {
            "A": "Dockerfile",
            "B": "Kustomize or Helm",
            "C": "Git branches",
            "D": "Unit tests"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN094",
        "crawled_at": "2025-06-13 04:53:53"
    }
]