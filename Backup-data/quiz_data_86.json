[
    {
        "question_number": 5,
        "question_content": "Dịch vụ loại nào thường có phạm vi chức năng nhỏ và có yêu cầu xử lý và triển khai cụ thể?",
        "options": {
            "A": "Task service",
            "B": "Microservice",
            "C": "Entity service",
            "D": "Utility service"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:26"
    },
    {
        "question_number": 11,
        "question_content": "Kỹ thuật nào có thể được sử dụng để đảm bảo rằng phương thức POST trong dịch vụ tác vụ dựa trên REST hoạt động đáng tin cậy?",
        "options": {
            "A": "Chỉ sử dụng các phương thức HTTP khác như GET hoặc PUT",
            "B": "Bao gồm các tiêu đề bổ sung và xử lý các thông báo phản hồi, hoặc sử dụng một mã định danh yêu cầu duy nhất do người dùng tạo ra trong mã định danh tài nguyên",
            "C": "Tạo ra nhiều phiên bản của dịch vụ tác vụ để tăng độ tin cậy",
            "D": "Sử dụng SOAP thay vì REST để truyền tải các thông điệp"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:27"
    },
    {
        "question_number": 30,
        "question_content": "Which of the following best describes a SAGA pattern in microservices?",
        "options": {
            "A": "A way to encrypt transactions",
            "B": "A distributed sequence of local transactions with compensations",
            "C": "A batch transaction handler",
            "D": "A fallback mechanism for HTTP errors"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:28"
    },
    {
        "question_number": 28,
        "question_content": "How are read models typically kept up-to-date?",
        "options": {
            "A": "Through manual synchronization",
            "B": "By querying write databases",
            "C": "By consuming and handling domain events",
            "D": "Through direct API calls"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:31"
    },
    {
        "question_number": 20,
        "question_content": "To avoid configuration drift, what strategy is recommended?",
        "options": {
            "A": "Manual editing of each instance",
            "B": "Centralized logging",
            "C": "Infrastructure as Code",
            "D": "Increasing replicas"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:33"
    },
    {
        "question_number": 31,
        "question_content": "Dịch vụ dựa trên SOAP hay REST dễ phát triển hơn?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào kỹ năng của nhà phát triển cụ thể",
            "D": "SOAP và REST đều dễ phát triển"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:37"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông tin nào được yêu cầu khi gửi dữ liệu đến dịch vụ web?",
        "options": {
            "A": "Đầu vào: tên người dùng, mật khẩu, email, số điện thoại. Đầu ra: thành công",
            "B": "Đầu vào: tên người dùng, mật khẩu, email. Đầu ra: thành công",
            "C": "Đầu vào: tên người dùng, mật khẩu. Đầu ra: thành công",
            "D": "Đầu vào: tên người dùng, mật khẩu, email, số điện thoại, địa chỉ. Đầu ra: thành công"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:40"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThực thi dịch vụ tên gì",
        "options": {
            "A": "CustomerPortType",
            "B": "OnlineChargingBinding",
            "C": "OnlineChargingPortType",
            "D": "OnlineChargingService"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:42"
    },
    {
        "question_number": 8,
        "question_content": "Mục tiêu chính của việc triển khai hướng dịch vụ là gì?",
        "options": {
            "A": "Tăng cường bảo mật",
            "B": "Thực hiện việc tách biệt các vấn đề một cách rõ ràng",
            "C": "Để giảm chi phí triển khai",
            "D": "Tăng tốc độ xử lý"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:44"
    },
    {
        "question_number": 3,
        "question_content": "SOA tập trung vào việc gì?",
        "options": {
            "A": "Xây dựng ứng dụng di động",
            "B": "Phân tích dữ liệu",
            "C": "Tích hợp các hệ thống khác nhau",
            "D": "Phân loại dữ liệu"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:46"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rHTTP Request nào sẽ được chuyển cho getOrders () ?",
        "options": {
            "A": "Phương thức POST, đường dẫn /orders",
            "B": "Phương thức PUT, đường dẫn /orders",
            "C": "Phương thức GET, đường dẫn /orders/15",
            "D": "Phương thức GET, đường dẫn /orders"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:51"
    },
    {
        "question_number": 29,
        "question_content": "Which component is NOT typically involved in saga pattern orchestration?",
        "options": {
            "A": "Saga orchestrator",
            "B": "Database lock",
            "C": "Service participant",
            "D": "Compensation logic"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:55"
    },
    {
        "question_number": 13,
        "question_content": "What is the role of a message broker in microservice communication?",
        "options": {
            "A": "Transform HTTP to gRPC",
            "B": "Store configuration settings",
            "C": "Coordinate and route messages",
            "D": "Serve static content"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:29:58"
    },
    {
        "question_number": 14,
        "question_content": "Which pattern is useful when a client needs to contact multiple services in one logical operation?",
        "options": {
            "A": "Service Mesh",
            "B": "API Gateway",
            "C": "Saga",
            "D": "Backend for Frontend"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:01"
    },
    {
        "question_number": 32,
        "question_content": "Dịch vụ dựa trên SOAP hay REST tốt hơn cho ứng dụng IoT?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào ứng dụng",
            "D": "SOAP và REST đều có thể được sử dụng cho ứng dụng IoT"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:04"
    },
    {
        "question_number": 19,
        "question_content": "How might you ensure zero downtime during deployment?",
        "options": {
            "A": "Manual script execution",
            "B": "Scaling down before deployment",
            "C": "Using load balancer to shift traffic",
            "D": "Stopping old version before new one starts"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:06"
    },
    {
        "question_number": 10,
        "question_content": "Quy ước đặt tên dịch vụ tiện ích (Utility Service) là gì?",
        "options": {
            "A": "Chỉ sử dụng danh từ",
            "B": "Sử dụng động từ và không lặp lại tên thực thể",
            "C": "Sử dụng động từ + danh từ",
            "D": "Sử dụng cấu trúc \"động từ + danh từ\" hoặc chỉ danh từ"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:10"
    },
    {
        "question_number": 17,
        "question_content": "Why is fault isolation important in microservices?",
        "options": {
            "A": "To ensure faster UI rendering",
            "B": "To enable service-level scaling",
            "C": "To prevent a single failure from cascading",
            "D": "To allow reuse of logic"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:12"
    },
    {
        "question_number": 26,
        "question_content": "Which HTTP status code often indicates a downstream service is unavailable?",
        "options": {
            "A": "200",
            "B": "404",
            "C": "503",
            "D": "301"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:14"
    },
    {
        "question_number": 2,
        "question_content": "Loose coupling trong dịch vụ web dựa trên tư tưởng nảo sau đây?",
        "options": {
            "A": "Sự kết hợp chặt chẽ giữa giao diện người dùng và logic xử lý",
            "B": "Sự tách biệt giữa giao diện người dùng và logic xử lý",
            "C": "Sự tương tác trực tiếp giữa giao diện người dùng và logic xử lý",
            "D": "Sự phụ thuộc mạnh vào giao diện người dùng"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:19"
    },
    {
        "question_number": 25,
        "question_content": "Which pattern coordinates transactions that span across multiple services?",
        "options": {
            "A": "Service Mesh",
            "B": "Circuit Breaker",
            "C": "Saga",
            "D": "Webhooks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:21"
    },
    {
        "question_number": 24,
        "question_content": "If a mobile app is requesting redundant data from a composite API, what can be done?",
        "options": {
            "A": "Switch to SOAP",
            "B": "Optimize the gateway logic or use GraphQL",
            "C": "Increase timeout",
            "D": "Force the app to filter data"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:23"
    },
    {
        "question_number": 37,
        "question_content": "Trong WSDL, phần Input của một phương thức được định nghĩa để làm gì?",
        "options": {
            "A": "Chứa các tham số đầu vào của phương thức",
            "B": "Chứa các tham số trả về của phương thức",
            "C": "Chứa các tài nguyên của web service",
            "D": "Chứa các thông tin bổ sung về message"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:26"
    },
    {
        "question_number": 7,
        "question_content": "Bước đầu tiên trong quá trình mô hình hóa dịch vụ REST là gì?",
        "options": {
            "A": "Phân tách quy trình nghiệp vụ",
            "B": "Xác định ứng viên dịch vụ thực thể",
            "C": "Xác định tài nguyên",
            "D": "Xác định logic cụ thể của quá trình"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:29"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rPhương thức HTTP cho phương thức updateProduct() là gì?",
        "options": {
            "A": "GET",
            "B": "POST",
            "C": "PUT",
            "D": "DELETE"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:32"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông điệp đầu vào tên là gì ?",
        "options": {
            "A": "Account",
            "B": "RegisterAccount",
            "C": "AccountResponse",
            "D": "RegisterAccountResponse"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:38"
    },
    {
        "question_number": 27,
        "question_content": "What is the role of a projection in the query side of a CQRS system?",
        "options": {
            "A": "To transform events into commands",
            "B": "To synchronize commands with queries",
            "C": "To build and update read models from events",
            "D": "To secure service endpoints"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:40"
    },
    {
        "question_number": 4,
        "question_content": "Vì sao đặc điểm hướng mô hình kinh doanh của SOA lại giúp tăng giá trị và tuổi thọ của kiến trúc?",
        "options": {
            "A": "Giữ đồng bộ liên tục với cách doanh nghiệp phát triển theo thời gian",
            "B": "Làm mô hình kinh doanh phát triển nhanh",
            "C": "Hỗ trợ quá trình chuẩn hóa kinh doanh",
            "D": "Phát triển theo thời gian"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:42"
    },
    {
        "question_number": 1,
        "question_content": "Khi xây dựng một dịch vụ web đặt vé xem phim, việc áp dụng độ mịn như thế nào có thể giúp tăng khả năng mở rộng của hệ thống?",
        "options": {
            "A": "Áp dụng độ mịn để chia nhỏ các chức năng như quản lý phim, quản lý rạp chiếu, quản lý đặt vé",
            "B": "Áp dụng độ mịn để gộp các chức năng đặt vé thành một dịch vụ duy nhất",
            "C": "Áp dụng độ mịn không ảnh hưởng đến khả năng mở rộng của hệ thống",
            "D": "Áp dụng độ mịn chỉ cần xác định các API cho việc đặt vé"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:44"
    },
    {
        "question_number": 22,
        "question_content": "Which storage format is most aligned with event sourcing?",
        "options": {
            "A": "Document-oriented databases",
            "B": "Relational tables with fixed schemas",
            "C": "Append-only logs",
            "D": "Key-value stores"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:46"
    },
    {
        "question_number": 36,
        "question_content": "Trong WSDL, một PortType có thể có bao nhiêu phương thức?",
        "options": {
            "A": "Tối đa là 100 phương thức",
            "B": "Tối đa là 20 phương thức",
            "C": "Không giới hạn",
            "D": "Chỉ một phương thức"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:49"
    },
    {
        "question_number": 18,
        "question_content": "What is a common challenge in microservices data consistency?",
        "options": {
            "A": "High query speed",
            "B": "Join queries",
            "C": "Distributed transactions",
            "D": "Using MongoDB"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:52"
    },
    {
        "question_number": 21,
        "question_content": "Which of the following best describes an event store?",
        "options": {
            "A": "A database for REST services",
            "B": "A service that sends push notifications",
            "C": "A log of immutable events that represent state transitions",
            "D": "A cache for recent API responses"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:54"
    },
    {
        "question_number": 12,
        "question_content": "Tại sao việc đặt tên tiêu chuẩn cho dịch vụ và năng lực dịch vụ là quan trọng?",
        "options": {
            "A": "Giúp dịch vụ dễ dàng khám phá và sử dụng lại",
            "B": "Tăng tốc độ triển khai",
            "C": "Dễ dàng bảo trì",
            "D": "Giảm thiểu lỗi"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:30:57"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rHTTP Request nào sẽ được chuyển cho updateOrder () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /orders",
            "B": "Phương thức PUT, đường dẫn /orders/15",
            "C": "Phương thức GET, đường dẫn /orders/15",
            "D": "Phương thức GET, đường dẫn /orders"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:31:00"
    },
    {
        "question_number": 23,
        "question_content": "Why might mobile clients benefit from a separate backend via the BFF pattern?",
        "options": {
            "A": "They use HTTPS",
            "B": "They require smaller, optimized payloads",
            "C": "They can access microservices directly",
            "D": "They are built using SOAP"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:31:04"
    },
    {
        "question_number": 6,
        "question_content": "Dịch vụ tiện ích là gì?",
        "options": {
            "A": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng bất khả tri, không được bắt nguồn từ các mô hình và mô hình phân tích kinh doanh",
            "B": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng khả tri, không được bắt nguồn từ các mô hình và mô hình phân tích kinh doanh",
            "C": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng bất khả tri, bắt nguồn từ các mô hình và mô hình phân tích kinh doanh",
            "D": "Dịch vụ có thể tái sử dụng với bối cảnh chức năng khả tri, bắt nguồn từ các mô hình và mô hình phân tích kinh doanh"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:31:07"
    },
    {
        "question_number": 9,
        "question_content": "Khi nào một non-agnostic logic có thể được đóng gói thành một microservice riêng biệt?",
        "options": {
            "A": "Khi logic hành động yêu cầu tăng cường tính tự chủ",
            "B": "Khi logic hành động yêu cầu ít tài nguyên",
            "C": "Khi logic hành động không có yêu cầu đặc biệt về hiệu suất",
            "D": "Khi logic hành động không cần phiên bản hóa và triển khai riêng biệt"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN729",
        "crawled_at": "2025-06-13 03:31:10"
    }
]