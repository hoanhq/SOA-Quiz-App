[
    {
        "question_number": 15,
        "question_content": "Which challenge is addressed by the Aggregate pattern in DDD?",
        "options": {
            "A": "Improving UI design",
            "B": "Simplifying database schema",
            "C": "Eliminating object references across services",
            "D": "Reducing API complexity"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:10"
    },
    {
        "question_number": 7,
        "question_content": "Khi áp dụng mô hình hóa dịch vụ REST cho quy trình kinh doanh “Xử lý yêu cầu bảo hiểm”, tại sao hành động \"Tính toán số tiền bồi thường dựa trên quy định của hợp đồng\" được phân loại là non- agnostic?",
        "options": {
            "A": "Vì nó không phụ thuộc vào bất kỳ ngữ cảnh cụ thể nào",
            "B": "Vì nó có thể tái sử dụng trong các quy trình khác mà không cần sửa đổi",
            "C": "Vì hành động này tuân theo logic riêng biệt áp dụng cho hoạt động bảo hiểm",
            "D": "Vì nó đòi hỏi sự xác minh của thông tin khách hàng"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:13"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông tin nào được yêu cầu khi gửi dữ liệu đến dịch vụ web?",
        "options": {
            "A": "Đầu vào: tên người dùng, mật khẩu, email, số điện thoại. Đầu ra: thành công",
            "B": "Đầu vào: tên người dùng, mật khẩu, email. Đầu ra: thành công",
            "C": "Đầu vào: tên người dùng, mật khẩu. Đầu ra: thành công",
            "D": "Đầu vào: tên người dùng, mật khẩu, email, số điện thoại, địa chỉ. Đầu ra: thành công"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:15"
    },
    {
        "question_number": 16,
        "question_content": "How is the domain model mapped to the database in the FTGO application?",
        "options": {
            "A": "Using SQL",
            "B": "Using stored procedures",
            "C": "Using JPA",
            "D": "Using REST APIs"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:21"
    },
    {
        "question_number": 2,
        "question_content": "Loose coupling trong dịch vụ web là gì?",
        "options": {
            "A": "Các thành phần của dịch vụ web hoạt động độc lập với nhau",
            "B": "Các thành phần của dịch vụ web ít  phụ thuộc vào nhau",
            "C": "Các thành phần của dịch vụ web phụ thuộc chặt chẽ với nhau",
            "D": "Các thành phần của dịch vụ web được triển khai trên nhiều máy chủ khác nhau"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:26"
    },
    {
        "question_number": 17,
        "question_content": "What is a characteristic of a well-designed microservice?",
        "options": {
            "A": "High interdependency",
            "B": "Shared persistent storage",
            "C": "Encapsulation of business capabilities",
            "D": "Monolithic design"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:27"
    },
    {
        "question_number": 26,
        "question_content": "Which pattern coordinates transactions that span across multiple services?",
        "options": {
            "A": "Service Mesh",
            "B": "Circuit Breaker",
            "C": "Saga",
            "D": "Webhooks"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:29"
    },
    {
        "question_number": 29,
        "question_content": "Why is the two-phase commit protocol considered unsuitable for microservices?",
        "options": {
            "A": "It is too fast",
            "B": "It lacks security",
            "C": "It introduces tight coupling and blocking",
            "D": "It doesn’t support NoSQL"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:32"
    },
    {
        "question_number": 1,
        "question_content": "Độ mịn dịch vụ ảnh hưởng đến điều gì trong dịch vụ web?",
        "options": {
            "A": "Khả năng tái sử dụng và tính linh hoạt của dịch vụ",
            "B": "Khả năng mở rộng và tương tác giữa các dịch vụ",
            "C": "Khả năng hiệu suất và bảo mật của dịch vụ",
            "D": "Khả năng kết nối và tương tác với người dùng"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:34"
    },
    {
        "question_number": 19,
        "question_content": "How do service meshes like Istio help in deployment strategies?",
        "options": {
            "A": "They encrypt disks",
            "B": "They manage user permissions",
            "C": "They allow fine-grained traffic routing",
            "D": "They store container images"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:39"
    },
    {
        "question_number": 27,
        "question_content": "How do eventual consistency models improve scalability?",
        "options": {
            "A": "By avoiding distributed data",
            "B": "By using centralized databases",
            "C": "By decoupling reads from writes and using asynchronous updates",
            "D": "By executing joins across services"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:40"
    },
    {
        "question_number": 22,
        "question_content": "What challenge is commonly associated with event sourcing?",
        "options": {
            "A": "Fast writes to the database",
            "B": "Scaling read operations",
            "C": "Keeping events small in size",
            "D": "Rebuilding state after many events"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:42"
    },
    {
        "question_number": 24,
        "question_content": "If a mobile app is requesting redundant data from a composite API, what can be done?",
        "options": {
            "A": "Switch to SOAP",
            "B": "Optimize the gateway logic or use GraphQL",
            "C": "Increase timeout",
            "D": "Force the app to filter data"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:45"
    },
    {
        "question_number": 36,
        "question_content": "Trong WSDL,  phần tử được sử dụng để chỉ định định dạng dữ liệu trong phần body là gì?",
        "options": {
            "A": "SOAP Style",
            "B": "SOAP Binding",
            "C": "SOAP Encoding",
            "D": "SOAP Transport"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:49"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThông tin nào được yêu cầu khi gửi dữ liệu đến dịch vụ web?",
        "options": {
            "A": "Mã khách hàng và số tiền nạp",
            "B": "Tên khách hàng và số tiền nạp",
            "C": "Mã khách hàng, tên khách hàng và số tiền nạp",
            "D": "Mã khách hàng, tên khách hàng, số tiền nạp và số thẻ tín dụng"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:51"
    },
    {
        "question_number": 23,
        "question_content": "How can a gateway handle varied client needs efficiently?",
        "options": {
            "A": "Through DNS switching",
            "B": "By rejecting requests not from mobile",
            "C": "Using backend for frontends or GraphQL",
            "D": "Using token refresh only"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:55"
    },
    {
        "question_number": 30,
        "question_content": "What is the primary challenge when managing transactions in a microservices architecture?",
        "options": {
            "A": "Lack of performance",
            "B": "Lack of scalability",
            "C": "Distributed nature of services",
            "D": "Too many logs"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:56"
    },
    {
        "question_number": 13,
        "question_content": "What can be used to enable message persistence in asynchronous systems?",
        "options": {
            "A": "Load balancer",
            "B": "Service discovery",
            "C": "Message queue",
            "D": "Circuit breaker"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:58"
    },
    {
        "question_number": 4,
        "question_content": "Một dịch vụ khi nào được coi là bất khả tri?",
        "options": {
            "A": "Chứa logic có khả năng tái sử dụng bởi nhiều quy trình nghiệp vụ",
            "B": "Chức logic không thể tái sử dụng nhưng có thể có tiềm năng tái sử dụng trong giải pháp",
            "C": "Khi nó có khả năng triển khai độc lập",
            "D": "Chức các logic không thể tái sử dụng bởi các quy trình nghiệp vụ"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:27:59"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho updateProduct () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products/15",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:02"
    },
    {
        "question_number": 9,
        "question_content": "Sự khác biệt chính giữa RESTful services và SOAP-based web services trong phân tích hướng dịch vụ là gì?",
        "options": {
            "A": "RESTful services sử dụng các phương thức HTTP tiêu chuẩn và tập trung vào tài nguyên, trong khi SOAP-based web services sử dụng SOAP và tập trung vào các hoạt động",
            "B": "RESTful services sử dụng XML để truyền dữ liệu, trong khi SOAP-based web services sử dụng JSON",
            "C": "RESTful services đòi hỏi tuân thủ nhiều tiêu chuẩn WS-*, trong khi SOAP-based web services đơn giản hơn và ít tiêu chuẩn hơn",
            "D": "RESTful services không sử dụng HTTP/HTTPS, trong khi SOAP-based web services chỉ sử dụng HTTP/HTTPS"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:03"
    },
    {
        "question_number": 12,
        "question_content": "Thông điệp SOAP được xử lý trong phần nào của thông điệp SOAP?",
        "options": {
            "A": "Header",
            "B": "Body",
            "C": "Footer",
            "D": "Envelope"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:05"
    },
    {
        "question_number": 32,
        "question_content": "Dịch vụ dựa trên SOAP hay REST nhanh hơn?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào cách triển khai",
            "D": "SOAP và REST có cùng tốc độ"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:08"
    },
    {
        "question_number": 21,
        "question_content": "In event sourcing, a projection should be:",
        "options": {
            "A": "Highly consistent and blocking",
            "B": "Mutable and centrally controlled",
            "C": "Eventually consistent and read-optimized",
            "D": "Stored alongside the event log"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:13"
    },
    {
        "question_number": 8,
        "question_content": "Mục tiêu chính của việc triển khai hướng dịch vụ là gì?",
        "options": {
            "A": "Tăng cường bảo mật",
            "B": "Thực hiện việc tách biệt các vấn đề một cách rõ ràng",
            "C": "Để giảm chi phí triển khai",
            "D": "Tăng tốc độ xử lý"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:14"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rPhương thức HTTP cho phương thức deleteProduct() là gì?",
        "options": {
            "A": "GET",
            "B": "POST",
            "C": "PUT",
            "D": "DELETE"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:15"
    },
    {
        "question_number": 5,
        "question_content": "Loại dịch vụ nào thường tương ứng với logic quy trình kinh doanh mục tiêu, bao gồm logic ghép nối các dịch vụ khác để hoàn thành nhiệm vụ?",
        "options": {
            "A": "Task service",
            "B": "Microservice",
            "C": "Entity service",
            "D": "Utility service"
        },
        "correct_answer": "A",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:17"
    },
    {
        "question_number": 20,
        "question_content": "What is the primary purpose of a deployment pipeline in microservices architecture?",
        "options": {
            "A": "To manage version control",
            "B": "To automate service deployment",
            "C": "To store container images",
            "D": "To build frontend interfaces"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:20"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rHTTP Request nào sẽ được chuyển cho getOrders () ?",
        "options": {
            "A": "Phương thức POST, đường dẫn /orders",
            "B": "Phương thức PUT, đường dẫn /orders",
            "C": "Phương thức GET, đường dẫn /orders/15",
            "D": "Phương thức GET, đường dẫn /orders"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:22"
    },
    {
        "question_number": 3,
        "question_content": "Thực thi dịch vụ (service implementation) đóng vai trò gì trong dịch vụ web?",
        "options": {
            "A": "Là thông tin về chức năng mà dịch vụ cung cấp",
            "B": "Là phần triển khai chức năng của dịch vụ",
            "C": "Là phần giao tiếp với các dịch vụ khác",
            "D": "Là phần xác định cấu trúc và phương thức của dịch vụ"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:26"
    },
    {
        "question_number": 10,
        "question_content": "Tại sao quá trình thiết kế Task Service thường yêu cầu ít nỗ lực hơn so với các mô hình dịch vụ khác?",
        "options": {
            "A": "Vì chúng sử dụng nhiều công nghệ tiên tiến",
            "B": "Vì chúng có nhiều nhân viên làm việc cùng lúc",
            "C": "Vì chúng chỉ yêu cầu một thao tác để khởi động một quy trình logic",
            "D": "Vì chúng không cần kiểm tra và giám sát"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:29"
    },
    {
        "question_number": 11,
        "question_content": "Điều gì có thể dẫn đến nhu cầu cần phải quản lý trạng thái trong các Task Service?",
        "options": {
            "A": "Số lượng lớn người dùng",
            "B": "Sự thay đổi của các yêu cầu bảo mật",
            "C": "Thiếu tài nguyên hệ thống",
            "D": "Sự kết hợp của các dịch vụ có phụ thuộc xử lý"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:31"
    },
    {
        "question_number": 14,
        "question_content": "What is a common drawback of tightly coupled service communication?",
        "options": {
            "A": "Improved fault tolerance",
            "B": "Increased system observability",
            "C": "Reduced deployment flexibility",
            "D": "Faster communication"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:34"
    },
    {
        "question_number": 6,
        "question_content": "SOA là viết tắt của từ gì?",
        "options": {
            "A": "Service - Orienting Architecture",
            "B": "Service - Orientation Architecture",
            "C": "Society of Architecture",
            "D": "Service - Oriented Architecture"
        },
        "correct_answer": "D",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:37"
    },
    {
        "question_number": 31,
        "question_content": "Nếu không cài đặt gì thêm, SOAP hay REST có thể sử dụng máy chủ proxy?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Cả SOAP và REST đều có thể sử dụng máy chủ proxy",
            "D": "Không SOAP và REST đều không thể sử dụng máy chủ proxy"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:39"
    },
    {
        "question_number": 37,
        "question_content": "Cấu trúc dữ liệu phổ biến để truyền thông tin trong Restful web service là gì?",
        "options": {
            "A": "XML",
            "B": "JSON",
            "C": "HTML",
            "D": "CSV"
        },
        "correct_answer": "B",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:41"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rTên của giao diện dich vụ là gì ?",
        "options": {
            "A": "RegisterAccount",
            "B": "RegisterAccountResponse",
            "C": "AccountRegistrationPortType",
            "D": "AccountRegistrationBinding"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:44"
    },
    {
        "question_number": 25,
        "question_content": "Which of the following is a primary reason for using asynchronous communication in microservices?",
        "options": {
            "A": "To reduce latency in request handling",
            "B": "To simplify service discovery",
            "C": "To decouple services for better scalability",
            "D": "To enforce strict request-response patterns"
        },
        "correct_answer": "C",
        "crawled_by": "B21DCCN819",
        "crawled_at": "2025-06-13 06:28:48"
    }
]