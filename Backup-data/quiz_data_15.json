[
    {
        "question_number": 1,
        "question_content": "Cái nào không phải là một thuộc tính phi chức năng của dịch vụ web?",
        "options": {
            "A": "Hiệu năng",
            "B": "Bảo mật",
            "C": "Độ tin cậy",
            "D": "Linh hoạt"
        },
        "correct_answer": "D"
    },
    {
        "question_number": 2,
        "question_content": "Trong SOA, dịch vụ là gì?",
        "options": {
            "A": "Một ứng dụng web",
            "B": "Một thành phần phần mềm độc lập",
            "C": "Một giao diện người dùng",
            "D": "Một cơ sở dữ liệu"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 3,
        "question_content": "Giao diện dịch vụ (service interface) đóng vai trò gì trong dịch vụ web?",
        "options": {
            "A": "Cung cấp thông tin về chức năng mà dịch vụ cung cấp",
            "B": "Cung cấp thông tin về công nghệ xây dựng dịch vụ",
            "C": "Cung cấp thông tin về giao thức để tương tác với dịch vụ",
            "D": "Cung cấp thông tin về địa chỉ để gửi dữ liệu tới dich vụ"
        },
        "correct_answer": "A"
    },
    {
        "question_number": 4,
        "question_content": "Chỉ ra các mô hình dịch vụ phổ biến?",
        "options": {
            "A": "Task service, Microservice, Management service, Utility service",
            "B": "Task service, Microservice, Entity service, Utility service",
            "C": "Task service, Microservice, Entity service, Identity service",
            "D": "Routing service, Microservice, Entity service, Utility service"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 5,
        "question_content": "Một dịch vụ khi nào được coi là bất khả tri?",
        "options": {
            "A": "Chứa logic có khả năng tái sử dụng bởi nhiều quy trình nghiệp vụ",
            "B": "Chức logic không thể tái sử dụng nhưng có thể có tiềm năng tái sử dụng trong giải pháp",
            "C": "Khi nó có khả năng triển khai độc lập",
            "D": "Chức các logic không thể tái sử dụng bởi các quy trình nghiệp vụ"
        },
        "correct_answer": "A"
    },
    {
        "question_number": 6,
        "question_content": "Điểm khác nhau giữa dịch vụ khả tri và bất khả tri?",
        "options": {
            "A": "Dịch vụ bất khả tri bắt nguồn từ các thực thể. Dịch vụ khả tri không bắt nguồn từ các thực thể",
            "B": "Dịch vụ khả tri bắt nguồn từ các thực thể. Dịch vụ bất khả tri không bắt nguồn từ các thực thể",
            "C": "Dịch vụ bất khả tri có thể được sử dụng bởi nhiều mô hình nghiệp vụ. Dịch vụ khả tri chỉ có thể sử dụng cho một mô hình nghiệp vụ nhất định",
            "D": "Dịch vụ khả tri có thể được sử dụng bởi nhiều mô hình nghiệp vụ. Dịch vụ bất khả tri chỉ có thể sử dụng cho một mô hình nghiệp vụ nhất định"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 7,
        "question_content": "Sau khi phân tách quy trình kinh doanh thành các hành động chi tiết, những loại hành động nào không phù hợp cho các bước mô hình hóa dịch vụ REST tiếp theo và nên được loại bỏ?",
        "options": {
            "A": "Đảm bảo tính nhất quán của dữ liệu",
            "B": "Tăng cường tính bảo mật của hệ thống",
            "C": "Cung cấp một lớp trừu tượng cho các thực thể kinh doanh",
            "D": "Tối ưu hóa hiệu suất của hệ thống"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 8,
        "question_content": "Mục tiêu chính của việc triển khai hướng dịch vụ là gì?",
        "options": {
            "A": "Tăng cường bảo mật",
            "B": "Thực hiện việc tách biệt các vấn đề một cách rõ ràng",
            "C": "Để giảm chi phí triển khai",
            "D": "Tăng tốc độ xử lý"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 9,
        "question_content": "Yếu tố nào sau đây là một trong những cân nhắc điển hình khi quyết định đóng gói một logic trong kinh doanh thành một microservice riêng biệt?",
        "options": {
            "A": "Tính tự chủ cao hơn",
            "B": "Thiết kế giao diện người dùng",
            "C": "Phát triển và bảo trì mã nguồn dễ dàng",
            "D": "Tích hợp với các đối tác bên ngoài"
        },
        "correct_answer": "A"
    },
    {
        "question_number": 10,
        "question_content": "Microservices thường sử dụng giao thức nào thay vì SOAP để đạt hiệu suất cao?",
        "options": {
            "A": "HTTP",
            "B": "REST",
            "C": "SMTP",
            "D": "FTP"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 11,
        "question_content": "Tại sao việc áp dụng nguyên tắc Lược đồ chuẩn là quan trọng trong thiết kế dịch vụ thực thể?",
        "options": {
            "A": "Để đảm bảo tính nhất quán và tính tái sử dụng của lược đồ XML",
            "B": "Để giảm thiểu việc lặp lại lược đồ",
            "C": "Để tăng cường tính bảo mật của dịch vụ",
            "D": "Để tối ưu hóa hiệu suất dịch vụ"
        },
        "correct_answer": "A"
    },
    {
        "question_number": 12,
        "question_content": "Kết hợp style:document + use:literal được ưu tiên trong SOA vì điều gì?",
        "options": {
            "A": "Hỗ trợ việc nhúng toàn bộ tài liệu XML trong phần thân SOAP",
            "B": "Hỗ trợ việc giao tiếp RPC truyền thống",
            "C": "Hỗ trợ mô hình gửi tin theo kiểu tài liệu là chìa khóa để thực hiện các tính năng của nhiều thông số WS-* khác nhau",
            "D": "Hỗ trợ khái niệm của các thông số WS-*"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 13,
        "question_content": "What is a benefit of using a circuit breaker in service communication?",
        "options": {
            "A": "Enables stateful routing",
            "B": "Improves serialization speed",
            "C": "Prevents cascading failures",
            "D": "Provides data encryption"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 14,
        "question_content": "Which HTTP status code often indicates a downstream service is unavailable?",
        "options": {
            "A": "200",
            "B": "404",
            "C": "503",
            "D": "301"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 15,
        "question_content": "Which object-oriented design principle is encouraged for complex business logic?",
        "options": {
            "A": "Encapsulation",
            "B": "Inheritance",
            "C": "Applying object-oriented design principles",
            "D": "Polymorphism"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 16,
        "question_content": "What principle helps isolate changes in business logic?",
        "options": {
            "A": "Modularization",
            "B": "Domain-driven design",
            "C": "Encapsulation",
            "D": "Continuous deployment"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 17,
        "question_content": "What is one of the main goals of microservice architecture?",
        "options": {
            "A": "To minimize code reuse",
            "B": "To tightly couple services",
            "C": "To achieve modularity and scalability",
            "D": "To use monolithic deployment"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 18,
        "question_content": "What is a benefit of decentralized governance in microservices?",
        "options": {
            "A": "Uniform technology stack",
            "B": "Freedom to choose suitable tools per service",
            "C": "No need for service boundaries",
            "D": "Eliminating testing requirements"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 19,
        "question_content": "What does a 'blue/green deployment' typically involve?",
        "options": {
            "A": "Running two data centers simultaneously",
            "B": "Switching traffic from old to new service instance",
            "C": "Synchronizing databases",
            "D": "Cloning the source code repository"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 20,
        "question_content": "How do service meshes like Istio help in deployment strategies?",
        "options": {
            "A": "They encrypt disks",
            "B": "They manage user permissions",
            "C": "They allow fine-grained traffic routing",
            "D": "They store container images"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 21,
        "question_content": "What is the typical purpose of a command in event sourcing?",
        "options": {
            "A": "Query data from the database",
            "B": "Request system configuration",
            "C": "Trigger a state change resulting in events",
            "D": "Listen to state changes"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 22,
        "question_content": "Which storage format is most aligned with event sourcing?",
        "options": {
            "A": "Document-oriented databases",
            "B": "Relational tables with fixed schemas",
            "C": "Append-only logs",
            "D": "Key-value stores"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 23,
        "question_content": "Which of the following best describes GraphQL in the context of API gateways?",
        "options": {
            "A": "It only works for REST services",
            "B": "It is a messaging queue",
            "C": "It simplifies API composition by allowing clients to specify data needs",
            "D": "It replaces microservices"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 24,
        "question_content": "What is the challenge with having a one-size-fits-all API in microservices?",
        "options": {
            "A": "It is always slower than direct DB queries",
            "B": "It requires GraphQL",
            "C": "Different clients have different data needs and network constraints",
            "D": "It reduces reusability of services"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 25,
        "question_content": "Which pattern coordinates transactions that span across multiple services?",
        "options": {
            "A": "Service Mesh",
            "B": "Circuit Breaker",
            "C": "Saga",
            "D": "Webhooks"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 26,
        "question_content": "What is a common drawback of tightly coupled service communication?",
        "options": {
            "A": "Improved fault tolerance",
            "B": "Increased system observability",
            "C": "Reduced deployment flexibility",
            "D": "Faster communication"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 27,
        "question_content": "How are read models typically kept up-to-date?",
        "options": {
            "A": "Through manual synchronization",
            "B": "By querying write databases",
            "C": "By consuming and handling domain events",
            "D": "Through direct API calls"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 28,
        "question_content": "Why might a system prefer using separate read databases in microservices?",
        "options": {
            "A": "To ensure all services can write simultaneously",
            "B": "To reduce latency and optimize for read performance",
            "C": "To reduce the number of microservices",
            "D": "To enforce tighter consistency"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 29,
        "question_content": "How should services communicate to ensure eventual consistency in transactions?",
        "options": {
            "A": "Using a shared memory",
            "B": "Using REST with immediate consistency",
            "C": "Using asynchronous messaging",
            "D": "Using database locks"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 30,
        "question_content": "You are designing a distributed order process, which pattern would allow you to manage failures gracefully?",
        "options": {
            "A": "Two-Phase Commit",
            "B": "Synchronous RPC",
            "C": "Saga with compensating transactions",
            "D": "Retry with timeout"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 31,
        "question_content": "Dịch vụ dựa trên SOAP hay REST có kiến trúc phức tạp hơn?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào cách triển khai cụ thể",
            "D": "SOAP và REST có cùng độ phức tạp"
        },
        "correct_answer": "A"
    },
    {
        "question_number": 32,
        "question_content": "Dịch vụ dựa trên SOAP hay REST tốt hơn cho ứng dụng phức tạp?",
        "options": {
            "A": "SOAP",
            "B": "REST",
            "C": "Tùy thuộc vào ứng dụng",
            "D": "SOAP và REST đều có thể được sử dụng cho ứng dụng phức tạp"
        },
        "correct_answer": "A"
    },
    {
        "question_number": 33,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ được chuyển cho getProducts () ?",
        "options": {
            "A": "Phương thức POST, đường dẫn /products",
            "B": "Phương thức PUT, đường dẫn /products",
            "C": "Phương thức GET, đường dẫn /products/15",
            "D": "Phương thức GET, đường dẫn /products"
        },
        "correct_answer": "D"
    },
    {
        "question_number": 34,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/products\")\npublic class ProductResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getProducts() {\n        // Get all products from the database.\n        return Response.ok(products).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_XML)\n    public Response createProduct(Product product) {\n        // Create a new product in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.MULTIPART_FORM_DATA)\n    public Response updateProduct(@PathParam(\"id\") long id, Product product) {\n        // Update the product with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteProduct(@PathParam(\"id\") long id) {\n        // Delete the product with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n \n\r\rHTTP Request nào sẽ không được chuyển cho updateProduct () ?",
        "options": {
            "A": "Phương thức PUT, đường dẫn /products/15",
            "B": "Phương thức PUT, đường dẫn /products",
            "C": "Phương thức PUT, đường dẫn /products/16",
            "D": "Phương thức PUT, đường dẫn /products/17"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 35,
        "question_content": "Cho đoạn mã nguồn:\n\r\r@Path(\"/orders\")\npublic class OrderResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response getOrders() {\n        // Get all orders from the database.\n        return Response.ok(orders).build();\n    }\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createOrder(Order order) {\n        // Create a new order in the database.\n        return Response.ok().build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response updateOrder(@PathParam(\"id\") long id, Order order) {\n        // Update the order with the given ID in the database.\n        return Response.ok().build();\n    }\n\n    @DELETE\n    @Path(\"{id}\")\n    public Response deleteOrder(@PathParam(\"id\") long id) {\n        // Delete the order with the given ID from the database.\n        return Response.ok().build();\n    }\n\n}\n\r\rHTTP Request nào sẽ được chuyển cho getOrders () ?",
        "options": {
            "A": "Phương thức POST, đường dẫn /orders",
            "B": "Phương thức PUT, đường dẫn /orders",
            "C": "Phương thức GET, đường dẫn /orders/15",
            "D": "Phương thức GET, đường dẫn /orders"
        },
        "correct_answer": "D"
    },
    {
        "question_number": 36,
        "question_content": "Trong SOAP, các phương thức được định nghĩa trong phần nào của tài liệu WSDL?",
        "options": {
            "A": "Binding",
            "B": "Service",
            "C": "PortType",
            "D": "Message"
        },
        "correct_answer": "C"
    },
    {
        "question_number": 37,
        "question_content": "Trong WSDL, phần Input của một phương thức được định nghĩa để làm gì?",
        "options": {
            "A": "Chứa các tham số đầu vào của phương thức",
            "B": "Chứa các tham số trả về của phương thức",
            "C": "Chứa các tài nguyên của web service",
            "D": "Chứa các thông tin bổ sung về message"
        },
        "correct_answer": "A"
    },
    {
        "question_number": 38,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/onlinecharging\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"OnlineCharging\" targetNamespace=\"http://www.example.com/onlinecharging\">\n  <wsdl:types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/onlinecharging\">\n      <xsd:element name=\"Customer\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"CustomerName\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"Charge\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"CustomerId\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Amount\" type=\"xsd:double\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"ChargeResult\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"Status\" type=\"xsd:string\" minOccurs=\"1\" />\n            <xsd:element name=\"Message\" type=\"xsd:string\" minOccurs=\"1\" />\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </wsdl:types>\n  <wsdl:message name=\"ChargeRequest\">\n    <wsdl:part name=\"customer\" element=\"tns:Customer\" />\n    <wsdl:part name=\"charge\" element=\"tns:Charge\" />\n  </wsdl:message>\n  <wsdl:message name=\"ChargeResponse\">\n    <wsdl:part name=\"result\" element=\"tns:ChargeResult\" />\n  </wsdl:message>\n  <wsdl:portType name=\"OnlineChargingPortType\">\n    <wsdl:operation name=\"Charge\">\n      <wsdl:input message=\"tns:ChargeRequest\" />\n      <wsdl:output message=\"tns:ChargeResponse\" />\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"OnlineChargingBinding\" type=\"tns:OnlineChargingPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\" />\n    <wsdl:operation name=\"Charge\">\n      <soap:operation soapAction=\"http://www.example.com/onlinecharging/Charge\" />\n      <wsdl:input>\n        <soap:body use=\"literal\" />\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\" />\n      </wsdl:output>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"OnlineChargingService\">\n    <wsdl:port name=\"OnlineChargingPort\" binding=\"tns:OnlineChargingBinding\">\n      <soap:address location=\"http://www.example.com/onlinecharging\" />\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions> \n\r\rThực thi dịch vụ tên gì",
        "options": {
            "A": "CustomerPortType",
            "B": "OnlineChargingBinding",
            "C": "OnlineChargingPortType",
            "D": "OnlineChargingService"
        },
        "correct_answer": "B"
    },
    {
        "question_number": 39,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rThông điệp đầu ra tên là gì ?",
        "options": {
            "A": "Account",
            "B": "RegisterAccount",
            "C": "AccountResponse",
            "D": "RegisterAccountResponse"
        },
        "correct_answer": "D"
    },
    {
        "question_number": 40,
        "question_content": "Cho định nghĩa WSDL: \n\r\r<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://www.example.com/accountRegistration\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" name=\"AccountRegistration\" targetNamespace=\"http://www.example.com/accountRegistration\">\n  <types>\n    <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"http://www.example.com/accountRegistration\">\n      <xsd:element name=\"Account\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"username\" type=\"xsd:string\"/>\n            <xsd:element name=\"password\" type=\"xsd:string\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n      <xsd:element name=\"AccountResponse\">\n        <xsd:complexType>\n          <xsd:sequence>\n            <xsd:element name=\"success\" type=\"xsd:boolean\"/>\n          </xsd:sequence>\n        </xsd:complexType>\n      </xsd:element>\n    </xsd:schema>\n  </types>\n  <message name=\"RegisterAccount\">\n    <part name=\"parameters\" element=\"tns:Account\"/>\n  </message>\n  <message name=\"RegisterAccountResponse\">\n    <part name=\"parameters\" element=\"tns:AccountResponse\"/>\n  </message>\n  <portType name=\"AccountRegistrationPortType\">\n    <operation name=\"RegisterAccount\">\n      <input message=\"tns:RegisterAccount\"/>\n      <output message=\"tns:RegisterAccountResponse\"/>\n    </operation>\n  </portType>\n  <binding name=\"AccountRegistrationBinding\" type=\"tns:AccountRegistrationPortType\">\n    <soap:binding transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <operation name=\"RegisterAccount\">\n      <soap:operation soapAction=\"http://www.example.com/accountRegistration/RegisterAccount\"/>\n      <input>\n        <soap:body use=\"literal\"/>\n      </input>\n      <output>\n        <soap:body use=\"literal\"/>\n      </output>\n    </operation>\n  </binding>\n  <service name=\"AccountRegistrationService\">\n    <port name=\"AccountRegistrationPort\" binding=\"tns:AccountRegistrationBinding\">\n      <soap:address location=\"http://www.example.com/accountRegistration\"/>\n    </port>\n  </service>\n</definitions> \n\r\rĐâu là phương thức mà dịch vụ cung cấp ?",
        "options": {
            "A": "Register",
            "B": "AccountRegistrationPortType",
            "C": "RegisterAccount",
            "D": "AccountRegistrationService"
        },
        "correct_answer": "C"
    }
]